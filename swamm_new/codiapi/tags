!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ACCESS_MODE_BIN	include/common/DataStream.h	21;"	d
ACCESS_MODE_TEXT	include/common/DataStream.h	22;"	d
ADC_BATT_VOL_INPUT	include/gpio/gpiomap.h	8;"	d
ADC_MAIN_VOL_INPUT	include/gpio/gpiomap.h	9;"	d
ADC_ON	include/gpio/gpio.h	21;"	d
ADDRESS_TABLE_SIZE	include/codiFrame.h	/^		BYTE		ADDRESS_TABLE_SIZE;						\/\/ 집중기에서 사용가능한 address table size$/;"	m	struct:_tagCODI_STACKMEMORY_PAYLOAD
AFX_SERIALWRITER_H__0693A33F_C2B1_419D_82FF_42A0DC9BD248__INCLUDED_	include/common/_WinSerialWriter.h	6;"	d
AIDON_DATA	samples/aidon/aidon.cpp	164;"	d	file:
AIDON_DATA	samples/ge/ge.cpp	165;"	d	file:
AIDON_METERINFO	samples/aidon/aidon.cpp	163;"	d	file:
AIDON_METERINFO	samples/ge/ge.cpp	164;"	d	file:
AIMIR_PARITY_EVEN	include/common/Parity.h	5;"	d
AIMIR_PARITY_NONE	include/common/Parity.h	4;"	d
ALARM_FLAG	include/endiFrame.h	/^        BYTE        ALARM_FLAG;                             \/\/ Alarm Flag$/;"	m	struct:_tagENDI_AMR_INFO
AMR_MASK_ACTMIN	include/endiDefine.h	67;"	d
AMR_MASK_ALARM	include/endiDefine.h	77;"	d
AMR_MASK_CHOICE	include/endiDefine.h	76;"	d
AMR_MASK_CURPULSE	include/endiDefine.h	64;"	d
AMR_MASK_LAST_PULSE	include/endiDefine.h	75;"	d
AMR_MASK_METERING_DAY	include/endiDefine.h	70;"	d
AMR_MASK_METERING_HOUR	include/endiDefine.h	71;"	d
AMR_MASK_METER_READ_SEC	include/endiDefine.h	69;"	d
AMR_MASK_OPRDAY	include/endiDefine.h	66;"	d
AMR_MASK_PERIOD	include/endiDefine.h	65;"	d
AMR_MASK_REPEATING_DAY	include/endiDefine.h	72;"	d
AMR_MASK_REPEATING_HOUR	include/endiDefine.h	73;"	d
AMR_MASK_REPEATING_SETUPTIME	include/endiDefine.h	74;"	d
AMR_MASK_RESET	include/endiDefine.h	68;"	d
AMR_MASK_TIME	include/endiDefine.h	63;"	d
ANSI_ACK	samples/ge/GeMeter.h	8;"	d
ANSI_AUTH	samples/ge/GeMeter.h	17;"	d
ANSI_BACK_BLACK	include/common/DebugUtil.h	34;"	d
ANSI_BACK_BLUE	include/common/DebugUtil.h	38;"	d
ANSI_BACK_CYAN	include/common/DebugUtil.h	40;"	d
ANSI_BACK_GREEN	include/common/DebugUtil.h	36;"	d
ANSI_BACK_MAGENTA	include/common/DebugUtil.h	39;"	d
ANSI_BACK_RED	include/common/DebugUtil.h	35;"	d
ANSI_BACK_WHITE	include/common/DebugUtil.h	41;"	d
ANSI_BACK_YELLOW	include/common/DebugUtil.h	37;"	d
ANSI_COLOR_BLACK	include/common/DebugUtil.h	25;"	d
ANSI_COLOR_BLUE	include/common/DebugUtil.h	29;"	d
ANSI_COLOR_CYAN	include/common/DebugUtil.h	31;"	d
ANSI_COLOR_GREEN	include/common/DebugUtil.h	27;"	d
ANSI_COLOR_MAGENTA	include/common/DebugUtil.h	30;"	d
ANSI_COLOR_RED	include/common/DebugUtil.h	26;"	d
ANSI_COLOR_WHITE	include/common/DebugUtil.h	32;"	d
ANSI_COLOR_YELLOW	include/common/DebugUtil.h	28;"	d
ANSI_CONFIG	samples/ge/GeMeter.h	/^}__attribute__ ((packed)) ANSI_CONFIG;$/;"	t	typeref:struct:_ansiprotocol
ANSI_DISCON	samples/ge/GeMeter.h	24;"	d
ANSI_FRAME	samples/ge/GeMeter.h	/^}	__attribute__ ((packed)) ANSI_FRAME;$/;"	t	typeref:struct:_tagANSI_FRAME
ANSI_FRAME_READ1	samples/ge/GeMeter.h	76;"	d
ANSI_FRAME_READ2	samples/ge/GeMeter.h	77;"	d
ANSI_HEADER	samples/ge/GeMeter.h	/^}	__attribute__ ((packed)) ANSI_HEADER;$/;"	t	typeref:struct:_tagANSI_HEADER
ANSI_IDENT	samples/ge/GeMeter.h	13;"	d
ANSI_LOGOFF	samples/ge/GeMeter.h	22;"	d
ANSI_LOGON	samples/ge/GeMeter.h	15;"	d
ANSI_NAK	samples/ge/GeMeter.h	9;"	d
ANSI_NEGO	samples/ge/GeMeter.h	14;"	d
ANSI_NORMAL	include/common/DebugUtil.h	43;"	d
ANSI_NO_ERROR	samples/ge/GeMeter.h	10;"	d
ANSI_PREAD	samples/ge/GeMeter.h	19;"	d
ANSI_PREAD_MAX_COUNT	samples/ge/i210.cpp	52;"	d	file:
ANSI_READ	samples/ge/GeMeter.h	18;"	d
ANSI_RR	samples/ge/GeMeter.h	25;"	d
ANSI_SECURITY	samples/ge/GeMeter.h	16;"	d
ANSI_STP	samples/ge/GeMeter.h	7;"	d
ANSI_TABLE1	samples/ge/ansi.h	/^}	__attribute__ ((packed)) ANSI_TABLE1;$/;"	t	typeref:struct:_tagANSI_TABLE1
ANSI_TABLE113	samples/ge/ansi.h	/^}	__attribute__ ((packed)) ANSI_TABLE113;$/;"	t	typeref:struct:_tagANSI_TABLE113
ANSI_TABLE5	samples/ge/ansi.h	/^}	__attribute__ ((packed)) ANSI_TABLE5;$/;"	t	typeref:struct:_tagANSI_TABLE5
ANSI_TABLE61	samples/ge/ansi.h	/^}	__attribute__ ((packed)) ANSI_TABLE61;$/;"	t	typeref:struct:_tagANSI_TABLE61
ANSI_TABLE63	samples/ge/ansi.h	/^}	__attribute__ ((packed)) ANSI_TABLE63;$/;"	t	typeref:struct:_tagANSI_TABLE63
ANSI_TABLE7	samples/ge/ansi.h	/^}	__attribute__ ((packed)) ANSI_TABLE7;$/;"	t	typeref:struct:_tagANSI_TABLE7
ANSI_TABLE8	samples/ge/ansi.h	/^}	__attribute__ ((packed)) ANSI_TABLE8;$/;"	t	typeref:struct:_tagANSI_TABLE8
ANSI_TABLE_MAX_SIZE	samples/ge/i210.cpp	53;"	d	file:
ANSI_TABLE_MT_110	samples/ge/GeMeter.h	58;"	d
ANSI_TABLE_MT_112	samples/ge/GeMeter.h	60;"	d
ANSI_TABLE_MT_113	samples/ge/GeMeter.h	57;"	d
ANSI_TABLE_MT_66	samples/ge/GeMeter.h	52;"	d
ANSI_TABLE_MT_67	samples/ge/GeMeter.h	53;"	d
ANSI_TABLE_MT_70	samples/ge/GeMeter.h	54;"	d
ANSI_TABLE_MT_72	samples/ge/GeMeter.h	59;"	d
ANSI_TABLE_MT_75	samples/ge/GeMeter.h	55;"	d
ANSI_TABLE_MT_78	samples/ge/GeMeter.h	56;"	d
ANSI_TABLE_ST_01	samples/ge/GeMeter.h	29;"	d
ANSI_TABLE_ST_03	samples/ge/GeMeter.h	30;"	d
ANSI_TABLE_ST_05	samples/ge/GeMeter.h	31;"	d
ANSI_TABLE_ST_07	samples/ge/GeMeter.h	32;"	d
ANSI_TABLE_ST_08	samples/ge/GeMeter.h	33;"	d
ANSI_TABLE_ST_130	samples/ge/GeMeter.h	47;"	d
ANSI_TABLE_ST_131	samples/ge/GeMeter.h	48;"	d
ANSI_TABLE_ST_132	samples/ge/GeMeter.h	49;"	d
ANSI_TABLE_ST_21	samples/ge/GeMeter.h	34;"	d
ANSI_TABLE_ST_22	samples/ge/GeMeter.h	35;"	d
ANSI_TABLE_ST_23	samples/ge/GeMeter.h	36;"	d
ANSI_TABLE_ST_25	samples/ge/GeMeter.h	37;"	d
ANSI_TABLE_ST_55	samples/ge/GeMeter.h	38;"	d
ANSI_TABLE_ST_61	samples/ge/GeMeter.h	39;"	d
ANSI_TABLE_ST_62	samples/ge/GeMeter.h	40;"	d
ANSI_TABLE_ST_63	samples/ge/GeMeter.h	41;"	d
ANSI_TABLE_ST_64	samples/ge/GeMeter.h	42;"	d
ANSI_TABLE_ST_71	samples/ge/GeMeter.h	43;"	d
ANSI_TABLE_ST_72	samples/ge/GeMeter.h	44;"	d
ANSI_TABLE_ST_75	samples/ge/GeMeter.h	45;"	d
ANSI_TABLE_ST_76	samples/ge/GeMeter.h	46;"	d
ANSI_TAIL	samples/ge/GeMeter.h	/^}	__attribute__ ((packed)) ANSI_TAIL;$/;"	t	typeref:struct:_tagANSI_TAIL
ANSI_TERMI	samples/ge/GeMeter.h	23;"	d
ANSI_WAIT	samples/ge/GeMeter.h	21;"	d
ANSI_WRITE	samples/ge/GeMeter.h	20;"	d
APP_3PARTY_HEADER	include/endiFrame.h	/^}   __ATTRIBUTE_PACKED__ APP_3PARTY_HEADER;$/;"	t	typeref:struct:_tagAPP_3PARTY_HEADER
APP_3PARTY_PAYLOAD	include/endiFrame.h	/^}	__ATTRIBUTE_PACKED__ APP_3PARTY_PAYLOAD;$/;"	t	typeref:struct:_tagAPP_3PARTY_PAYLOAD
APP_3PARTY_TAIL	include/endiFrame.h	/^typedef struct __tagENDI_3PARTY_TAIL    APP_3PARTY_TAIL;$/;"	t	typeref:struct:__tagENDI_3PARTY_TAIL
ASCII	src/CoordinatorDataStream.cpp	26;"	d	file:
ASCII_EOT	samples/ge/i210.cpp	30;"	d	file:
ASCII_STX	samples/ge/i210.cpp	29;"	d	file:
AddCoordinator	src/CoordinatorServer.cpp	/^COORDINATOR *CCoordinatorServer::AddCoordinator(CODIDEVICE *pDevice)$/;"	f	class:CCoordinatorServer
AddDataBuffer	src/EndDevicePool.cpp	/^int  CEndDevicePool::AddDataBuffer(ENDDEVICE *pEndDevice, ENDI_DATA_FRAME *pFrame, int nLength, int nTLength, BYTE LQI, signed char RSSI)$/;"	f	class:CEndDevicePool
AddHead	include/common/LinkedList.h	/^inline POSITION CLinkedList<TYPE>::AddHead(TYPE newElement)$/;"	f	class:CLinkedList
AddStream	src/CoordinatorDataStream.cpp	/^BOOL CCoordinatorDataStream::AddStream(DATASTREAM *pStream, const char * pszBuffer, int nLength)$/;"	f	class:CCoordinatorDataStream
AddStream	src/CoordinatorDataStream.cpp	/^BOOL CCoordinatorDataStream::AddStream(DATASTREAM *pStream, unsigned char c)$/;"	f	class:CCoordinatorDataStream
AddStreamQueue	src/CoordinatorServer.cpp	/^CODIWORKSTREAM *CCoordinatorServer::AddStreamQueue(COORDINATOR *codi, CODI_GENERAL_FRAME *pFrame, int nLength)$/;"	f	class:CCoordinatorServer
AddStreamQueue2	src/CoordinatorServer.cpp	/^CODIWORKSTREAM *CCoordinatorServer::AddStreamQueue2(COORDINATOR *codi, BYTE *pFrame, int nLength)$/;"	f	class:CCoordinatorServer
AddTail	include/common/LinkedList.h	/^inline POSITION CLinkedList<TYPE>::AddTail(TYPE newElement)$/;"	f	class:CLinkedList
AddWaitReply	src/CoordinatorWaitReply.cpp	/^CODIWAITREPLY *CCoordinatorWaitReply::AddWaitReply(COORDINATOR *codi, BYTE flow, BYTE type, BYTE cmd, BYTE seq, BYTE waitMask, EUI64 *id, BYTE *pszBuffer)$/;"	f	class:CCoordinatorWaitReply
AllocateEndDevice	src/EndDevicePool.cpp	/^ENDDEVICE *CEndDevicePool::AllocateEndDevice(COORDINATOR *codi, EUI64 *id)$/;"	f	class:CEndDevicePool
AppendTable	samples/ge/MeterParser.cpp	/^void CMeterParser::AppendTable(CChunk *pChunk, const char *pszTable, char *pszFrame, int nLength)$/;"	f	class:CMeterParser
BASE_PULSE	include/endiFrame.h	/^		UINT		BASE_PULSE;								\/\/ 0시때의 지침값$/;"	m	struct:_tagENDI_LP_ENTRY
BATTERY_LOG_ADDRESS	include/endiDefine.h	342;"	d
BATTERY_POINTER	include/endiFrame.h	/^		BYTE		BATTERY_POINTER;						\/\/ 베터리 로그 포인터$/;"	m	struct:_tagENDI_BATTERYLOG_INFO
BATTERY_VOLT	include/endiFrame.h	/^		WORD		BATTERY_VOLT;							\/\/ 배터리 전압$/;"	m	struct:_tagENDI_BATTERY_ENTRY
BINTOSTR	src/CoordinatorUtility.cpp	/^int	BINTOSTR(BYTE *key, char *pszString, int len)$/;"	f
BOOL	include/typedef.h	/^typedef char							BOOL;$/;"	t
BYTE	include/typedef.h	/^typedef unsigned char					BYTE;$/;"	t
BindEndDevice	src/CoordinatorServer.cpp	/^int	CCoordinatorServer::BindEndDevice(COORDINATOR *codi, EUI64 *id, BYTE type, int nTimeout, BOOL bExtendedTimeout)$/;"	f	class:CCoordinatorServer
Bootload	src/Coordinator.cpp	/^int CCoordinator::Bootload(COORDINATOR *codi, int nType)$/;"	f	class:CCoordinator
BootloadCoordinator	src/CoordinatorServer.cpp	/^int	CCoordinatorServer::BootloadCoordinator(COORDINATOR *codi, int nType)$/;"	f	class:CCoordinatorServer
BypassEndDevice	src/CoordinatorServer.cpp	/^int CCoordinatorServer::BypassEndDevice(COORDINATOR *codi, BYTE *payload, int nLength)$/;"	f	class:CCoordinatorServer
BypassEndDevice	src/CoordinatorServer.cpp	/^int CCoordinatorServer::BypassEndDevice(ENDDEVICE *endi, BYTE *payload, int nLength, int nTimeout)$/;"	f	class:CCoordinatorServer
CChunk	include/common/Chunk.h	/^class CChunk  $/;"	c
CCoordinator	src/Coordinator.cpp	/^CCoordinator::CCoordinator()$/;"	f	class:CCoordinator
CCoordinator	src/Coordinator.h	/^class CCoordinator : public CCoordinatorServer$/;"	c
CCoordinatorDataStream	src/CoordinatorDataStream.cpp	/^CCoordinatorDataStream::CCoordinatorDataStream()$/;"	f	class:CCoordinatorDataStream
CCoordinatorDataStream	src/CoordinatorDataStream.h	/^class CCoordinatorDataStream : public CDataStream$/;"	c
CCoordinatorFrame	src/CoordinatorFrame.cpp	/^CCoordinatorFrame::CCoordinatorFrame()$/;"	f	class:CCoordinatorFrame
CCoordinatorFrame	src/CoordinatorFrame.h	/^class CCoordinatorFrame$/;"	c
CCoordinatorServer	src/CoordinatorServer.cpp	/^CCoordinatorServer::CCoordinatorServer()$/;"	f	class:CCoordinatorServer
CCoordinatorServer	src/CoordinatorServer.h	/^class CCoordinatorServer : public CCoordinatorFrame,$/;"	c
CCoordinatorWaitReply	src/CoordinatorWaitReply.cpp	/^CCoordinatorWaitReply::CCoordinatorWaitReply()$/;"	f	class:CCoordinatorWaitReply
CCoordinatorWaitReply	src/CoordinatorWaitReply.h	/^class CCoordinatorWaitReply$/;"	c
CDMA_TYPE_ANYDATA	include/typedef.h	83;"	d
CDMA_TYPE_GROWELL	include/typedef.h	82;"	d
CDataStream	include/common/DataStream.h	/^class CDataStream  $/;"	c
CDebugServer	include/common/DebugServer.h	/^class CDebugServer : public CTCPMultiplexServer$/;"	c
CDeviceClass	src/DeviceClass.cpp	/^CDeviceClass::CDeviceClass()$/;"	f	class:CDeviceClass
CDeviceClass	src/DeviceClass.h	/^class CDeviceClass$/;"	c
CEndDevicePool	src/EndDevicePool.cpp	/^CEndDevicePool::CEndDevicePool()$/;"	f	class:CEndDevicePool
CEndDevicePool	src/EndDevicePool.h	/^class CEndDevicePool$/;"	c
CHANNEL	include/endiFrame.h	/^		BYTE		CHANNEL;								\/\/ 지그비 네트워크 채널 (manual 1 일때)$/;"	m	struct:_tagENDI_NETWORK_INFO
CHUNK	include/common/Chunk.h	/^}	CHUNK, *PCHUNK;$/;"	t	typeref:struct:_tagCHUNK
CHash	include/common/Hash.h	/^class CHash$/;"	c
CI210Parser	samples/ge/i210.cpp	/^CI210Parser::CI210Parser() : CMeterParser(1, "GE", "GE I210\/KV2C Parser")$/;"	f	class:CI210Parser
CI210Parser	samples/ge/i210.h	/^class CI210Parser : public CMeterParser$/;"	c
CIcmpPing	include/common/IcmpPing.h	/^class CIcmpPing$/;"	c
CIdleApplication	include/common/IdleApplication.h	/^class CIdleApplication$/;"	c
CLinkedList	include/common/LinkedList.h	/^class CLinkedList$/;"	c
CLinkedList	include/common/LinkedList.h	/^inline CLinkedList<TYPE>::CLinkedList(int nGrowSize)$/;"	f	class:CLinkedList
CLocker	include/common/Locker.h	/^class	CLocker$/;"	c
CMD5	include/common/MD5.h	/^class CMD5  $/;"	c
CMDPARAM	samples/ge/MeterParser.h	/^}	CMDPARAM;$/;"	t	typeref:struct:_tagCMDPARAM
CMeterParser	samples/ge/MeterParser.cpp	/^CMeterParser::CMeterParser(int nType, const char *pszName, const char *pszDescr)$/;"	f	class:CMeterParser
CMeterParser	samples/ge/MeterParser.h	/^class CMeterParser$/;"	c
CMultiThread	include/common/_WinMultiThread.h	/^class CMultiThread  $/;"	c
CODIAPI_MAJOR_VERSION	include/codiTypedef.h	11;"	d
CODIAPI_MINOR_VERSION	include/codiTypedef.h	12;"	d
CODIAPI_REVISION	include/codiTypedef.h	13;"	d
CODIDEVICE	include/codiTypedef.h	/^}	CODIDEVICE;$/;"	t	typeref:struct:_tagCODIDEVICE
CODIERR_ADD_DUPLICATE_ERROR	include/codierr.h	69;"	d
CODIERR_ADD_ERROR	include/codierr.h	67;"	d
CODIERR_ALREADY_INITIALIZED	include/codierr.h	15;"	d
CODIERR_ALREADY_STARTED	include/codierr.h	20;"	d
CODIERR_BINDING_ERROR	include/codierr.h	74;"	d
CODIERR_BINDING_IS_ACTIVE_ERROR	include/codierr.h	59;"	d
CODIERR_BIND_ADDRESS_DUPLICATION	include/codierr.h	54;"	d
CODIERR_COMMAND_ERROR	include/codierr.h	29;"	d
CODIERR_COORDINATOR_NOT_READY	include/codierr.h	32;"	d
CODIERR_CRC16_ERROR	include/codierr.h	47;"	d
CODIERR_DELETE_BINDING_ERROR	include/codierr.h	58;"	d
CODIERR_DELIVERY_ERROR	include/codierr.h	73;"	d
CODIERR_DEL_ERROR	include/codierr.h	68;"	d
CODIERR_DEL_KEY_ERROR	include/codierr.h	66;"	d
CODIERR_DEVICE_BUSY	include/codierr.h	6;"	d
CODIERR_DEVICE_ERROR	include/codierr.h	23;"	d
CODIERR_DEVICE_INUSE	include/codierr.h	7;"	d
CODIERR_EUI64_FOUND_FAIL_ERROR	include/codierr.h	56;"	d
CODIERR_FORM_NETWORK_ERROR	include/codierr.h	52;"	d
CODIERR_FRAME_CONTROL_ERROR	include/codierr.h	44;"	d
CODIERR_FRAME_TYPE_ERROR	include/codierr.h	46;"	d
CODIERR_FULL_BINDING_INDEX	include/codierr.h	55;"	d
CODIERR_GET_BINDING_ERROR	include/codierr.h	60;"	d
CODIERR_GET_NEIGHBOR_ERROR	include/codierr.h	61;"	d
CODIERR_INUSE_ENDDEVICE	include/codierr.h	25;"	d
CODIERR_INVALID_BUFFER	include/codierr.h	11;"	d
CODIERR_INVALID_DATA	include/codierr.h	50;"	d
CODIERR_INVALID_DEVICE	include/codierr.h	5;"	d
CODIERR_INVALID_HANDLE	include/codierr.h	10;"	d
CODIERR_INVALID_ID	include/codierr.h	17;"	d
CODIERR_INVALID_INTERFACE	include/codierr.h	21;"	d
CODIERR_INVALID_KEY	include/codierr.h	26;"	d
CODIERR_INVALID_LENGTH	include/codierr.h	12;"	d
CODIERR_INVALID_METHOD	include/codierr.h	34;"	d
CODIERR_INVALID_OPTION	include/codierr.h	33;"	d
CODIERR_INVALID_PARAM	include/codierr.h	28;"	d
CODIERR_INVALID_PARENT	include/codierr.h	36;"	d
CODIERR_INVALID_TIMEOUT	include/codierr.h	13;"	d
CODIERR_KEY_FOUND_FAIL_ERROR	include/codierr.h	65;"	d
CODIERR_KEY_TABLE_DUPLICATION	include/codierr.h	62;"	d
CODIERR_LEAVE_NETWORK_ERROR	include/codierr.h	53;"	d
CODIERR_MEMORY_ERROR	include/codierr.h	8;"	d
CODIERR_NOERROR	include/codierr.h	4;"	d
CODIERR_NOT_CONNECTED	include/codierr.h	31;"	d
CODIERR_NOT_INITIALIZED	include/codierr.h	16;"	d
CODIERR_NOT_REGISTERED	include/codierr.h	18;"	d
CODIERR_NOT_STARTED	include/codierr.h	19;"	d
CODIERR_NOT_SUPPORTED	include/codierr.h	49;"	d
CODIERR_NO_NETWORK_ERROR	include/codierr.h	51;"	d
CODIERR_NULL_KEY_INDEX	include/codierr.h	63;"	d
CODIERR_OUT_OF_BINDING	include/codierr.h	24;"	d
CODIERR_PARENT_BINDING_ERROR	include/codierr.h	37;"	d
CODIERR_PAYLOAD_LENGTH_ERROR	include/codierr.h	72;"	d
CODIERR_PROGRESS	include/codierr.h	40;"	d
CODIERR_REPLY_TIMEOUT	include/codierr.h	27;"	d
CODIERR_REQUEST_ERROR	include/codierr.h	45;"	d
CODIERR_SEND_DATA_ERROR	include/codierr.h	71;"	d
CODIERR_SERIAL_ERROR	include/codierr.h	43;"	d
CODIERR_SERIAL_TIMEOUT	include/codierr.h	42;"	d
CODIERR_SET_BINDING_ERROR	include/codierr.h	57;"	d
CODIERR_SET_CHILD_ERROR	include/codierr.h	38;"	d
CODIERR_SET_KEY_ERROR	include/codierr.h	64;"	d
CODIERR_UNKNOWN_ERROR	include/codierr.h	30;"	d
CODISTATE_ERROR	include/codiTypedef.h	30;"	d
CODISTATE_JOIN_FAIL	include/codiTypedef.h	27;"	d
CODISTATE_NORMAL	include/codiTypedef.h	22;"	d
CODISTATE_NOT_CONNECTED	include/codiTypedef.h	24;"	d
CODISTATE_NOT_STARTED	include/codiTypedef.h	23;"	d
CODISTATE_NO_BEACONS	include/codiTypedef.h	28;"	d
CODISTATE_NO_RESPONSE	include/codiTypedef.h	29;"	d
CODISTATE_STACK_DOWN	include/codiTypedef.h	26;"	d
CODISTATE_STACK_NOT_READY	include/codiTypedef.h	25;"	d
CODIWAITREPLY	include/codiTypedef.h	/^}	CODIWAITREPLY;$/;"	t	typeref:struct:_tagCODIWAITREPLY
CODIWORKSTREAM	src/CoordinatorServer.h	/^}	CODIWORKSTREAM;$/;"	t	typeref:struct:_tagCODIWORKSTREAM
CODI_ACCESS_READ	include/codiDefine.h	48;"	d
CODI_ACCESS_WRITE	include/codiDefine.h	47;"	d
CODI_ACTIVESCAN_PAYLOAD	include/codiFrame.h	/^}	__ATTRIBUTE_PACKED__ CODI_ACTIVESCAN_PAYLOAD;$/;"	t	typeref:struct:_tagCODI_ACTIVESCAN_PAYLOAD
CODI_BAUD_100000	include/codiDefine.h	210;"	d
CODI_BAUD_115200	include/codiDefine.h	211;"	d
CODI_BAUD_1200	include/codiDefine.h	199;"	d
CODI_BAUD_14400	include/codiDefine.h	203;"	d
CODI_BAUD_19200	include/codiDefine.h	204;"	d
CODI_BAUD_2400	include/codiDefine.h	200;"	d
CODI_BAUD_28800	include/codiDefine.h	205;"	d
CODI_BAUD_300	include/codiDefine.h	196;"	d
CODI_BAUD_38400	include/codiDefine.h	206;"	d
CODI_BAUD_4800	include/codiDefine.h	201;"	d
CODI_BAUD_50000	include/codiDefine.h	207;"	d
CODI_BAUD_57600	include/codiDefine.h	208;"	d
CODI_BAUD_600	include/codiDefine.h	197;"	d
CODI_BAUD_76800	include/codiDefine.h	209;"	d
CODI_BAUD_900	include/codiDefine.h	198;"	d
CODI_BAUD_9600	include/codiDefine.h	202;"	d
CODI_BINDINGTABLE_FRAME	include/codiFrame.h	/^}	__ATTRIBUTE_PACKED__ CODI_BINDINGTABLE_FRAME;$/;"	t	typeref:struct:_tagCODI_BINDINGTABLE_FRAME
CODI_BINDING_ENTRY	include/codiFrame.h	/^}	__ATTRIBUTE_PACKED__ CODI_BINDING_ENTRY;$/;"	t	typeref:struct:_tagCODI_BINDING_ENTRY
CODI_BINDING_PAYLOAD	include/codiFrame.h	/^}	__ATTRIBUTE_PACKED__ CODI_BINDING_PAYLOAD;$/;"	t	typeref:struct:_tagCODI_BINDING_PAYLOAD
CODI_BIND_DELETE_BIND	include/codiDefine.h	229;"	d
CODI_BIND_FRAME	include/codiFrame.h	/^}	__ATTRIBUTE_PACKED__ CODI_BIND_FRAME;$/;"	t	typeref:struct:_tagCODI_BIND_FRAME
CODI_BIND_PAYLOAD	include/codiFrame.h	/^}	__ATTRIBUTE_PACKED__ CODI_BIND_PAYLOAD;$/;"	t	typeref:struct:_tagCODI_BIND_PAYLOAD
CODI_BIND_SET_BIND	include/codiDefine.h	228;"	d
CODI_BOOTLOAD_BOOTLOADER	include/codiDefine.h	35;"	d
CODI_BOOTLOAD_FRAME	include/codiFrame.h	/^}	__ATTRIBUTE_PACKED__ CODI_BOOTLOAD_FRAME;$/;"	t	typeref:struct:_tagCODI_BOOTLOAD_FRAME
CODI_BOOTLOAD_PAYLOAD	include/codiFrame.h	/^}	__ATTRIBUTE_PACKED__ CODI_BOOTLOAD_PAYLOAD;$/;"	t	typeref:struct:_tagCODI_BOOTLOAD_PAYLOAD
CODI_BOOTLOAD_RUN	include/codiDefine.h	34;"	d
CODI_BOOTLOAD_SET	include/codiDefine.h	256;"	d
CODI_BOOT_PAYLOAD	include/codiFrame.h	/^}	__ATTRIBUTE_PACKED__ CODI_BOOT_PAYLOAD;$/;"	t	typeref:struct:_tagCODI_BOOT_PAYLOAD
CODI_CMDERR_ADD_DUPLICATE_ERROR	include/codiDefine.h	155;"	d
CODI_CMDERR_ADD_ERROR	include/codiDefine.h	153;"	d
CODI_CMDERR_BINDING_IS_ACTIVE_ERROR	include/codiDefine.h	144;"	d
CODI_CMDERR_BIND_ADDRESS_DUPLICATION	include/codiDefine.h	139;"	d
CODI_CMDERR_DELETE_BINDING_ERROR	include/codiDefine.h	143;"	d
CODI_CMDERR_DEL_ERROR	include/codiDefine.h	154;"	d
CODI_CMDERR_DEL_KEY_ERROR	include/codiDefine.h	151;"	d
CODI_CMDERR_EUI64_FOUND_FAIL_ERROR	include/codiDefine.h	141;"	d
CODI_CMDERR_FORM_NETWORK_ERROR	include/codiDefine.h	137;"	d
CODI_CMDERR_FULL_BINDING_INDEX	include/codiDefine.h	140;"	d
CODI_CMDERR_GET_BINDING_ERROR	include/codiDefine.h	145;"	d
CODI_CMDERR_GET_NEIGHBOR_ERROR	include/codiDefine.h	146;"	d
CODI_CMDERR_INVALID_DATA	include/codiDefine.h	135;"	d
CODI_CMDERR_KEY_FOUND_FAIL_ERROR	include/codiDefine.h	150;"	d
CODI_CMDERR_KEY_TABLE_DUPLICATION	include/codiDefine.h	147;"	d
CODI_CMDERR_LEAVE_NETWORK_ERROR	include/codiDefine.h	138;"	d
CODI_CMDERR_NOT_SUPPORTED	include/codiDefine.h	134;"	d
CODI_CMDERR_NO_NETWORK_ERROR	include/codiDefine.h	136;"	d
CODI_CMDERR_NULL_KEY_INDEX	include/codiDefine.h	148;"	d
CODI_CMDERR_SET_BINDING_ERROR	include/codiDefine.h	142;"	d
CODI_CMDERR_SET_KEY_ERROR	include/codiDefine.h	149;"	d
CODI_CMD_ADD_EUI64	include/codiDefine.h	192;"	d
CODI_CMD_BIND	include/codiDefine.h	174;"	d
CODI_CMD_BINDING_TABLE	include/codiDefine.h	176;"	d
CODI_CMD_BOOTLOAD	include/codiDefine.h	185;"	d
CODI_CMD_DELETE_EUI64	include/codiDefine.h	193;"	d
CODI_CMD_DIRECT_COMM	include/codiDefine.h	189;"	d
CODI_CMD_EXTENDED_TIMEOUT	include/codiDefine.h	188;"	d
CODI_CMD_FORM_NETWORK	include/codiDefine.h	181;"	d
CODI_CMD_KEY_TABLE	include/codiDefine.h	190;"	d
CODI_CMD_KEY_TABLE_ENTRY	include/codiDefine.h	191;"	d
CODI_CMD_MANY_TO_ONE_NETWORK	include/codiDefine.h	184;"	d
CODI_CMD_MODULE_PARAM	include/codiDefine.h	169;"	d
CODI_CMD_MULTICAST_HOP	include/codiDefine.h	187;"	d
CODI_CMD_NEIGHBOR_TABLE	include/codiDefine.h	177;"	d
CODI_CMD_NETWORK_PARAM	include/codiDefine.h	171;"	d
CODI_CMD_PERMIT	include/codiDefine.h	180;"	d
CODI_CMD_PINGPONG	include/codiDefine.h	175;"	d
CODI_CMD_RESERVED2	include/codiDefine.h	178;"	d
CODI_CMD_RESET	include/codiDefine.h	182;"	d
CODI_CMD_ROUTE_DISCOVERY	include/codiDefine.h	186;"	d
CODI_CMD_SCAN_NETWORK	include/codiDefine.h	183;"	d
CODI_CMD_SCAN_PARAM	include/codiDefine.h	173;"	d
CODI_CMD_SECURITY_PARAM	include/codiDefine.h	172;"	d
CODI_CMD_SERIAL_PARAM	include/codiDefine.h	170;"	d
CODI_CMD_STACK_MEMORY	include/codiDefine.h	179;"	d
CODI_COMMAND_FRAME	include/codiFrame.h	/^}	__ATTRIBUTE_PACKED__ CODI_COMMAND_FRAME;$/;"	t	typeref:struct:_tagCODI_COMMAND_FRAME
CODI_COMTYPE_RS232	include/codiDefine.h	16;"	d
CODI_COMTYPE_SPI	include/codiDefine.h	17;"	d
CODI_COMTYPE_UNKNOWN	include/codiDefine.h	15;"	d
CODI_COMTYPE_VIRTUAL	include/codiDefine.h	18;"	d
CODI_DATAERR_BINDING_ERROR	include/codiDefine.h	161;"	d
CODI_DATAERR_DELIVERY_ERROR	include/codiDefine.h	160;"	d
CODI_DATAERR_PAYLOAD_LENGTH_ERROR	include/codiDefine.h	159;"	d
CODI_DATAERR_SEND_DATA_ERROR	include/codiDefine.h	158;"	d
CODI_DEVICE_ERROR	include/codiDefine.h	165;"	d
CODI_DIRECTCOMM_FRAME	include/codiFrame.h	/^}	__ATTRIBUTE_PACKED__ CODI_DIRECTCOMM_FRAME;$/;"	t	typeref:struct:_tagCODI_DIRECTCOMM_FRAME
CODI_DIRECTCOMM_PAYLOAD	include/codiFrame.h	/^}   __ATTRIBUTE_PACKED__ CODI_DIRECTCOMM_PAYLOAD;$/;"	t	typeref:struct:_tagCODI_DIRECTCOMM_PAYLOAD
CODI_ENERGYSCAN_PAYLOAD	include/codiFrame.h	/^}	__ATTRIBUTE_PACKED__ CODI_ENERGYSCAN_PAYLOAD;$/;"	t	typeref:struct:_tagCODI_ENERGYSCAN_PAYLOAD
CODI_ERROR_PAYLOAD	include/codiFrame.h	/^}	__ATTRIBUTE_PACKED__ CODI_ERROR_PAYLOAD;$/;"	t	typeref:struct:_tagCODI_ERROR_PAYLOAD
CODI_EXTENDEDTIMEOUT_FRAME	include/codiFrame.h	/^}	__ATTRIBUTE_PACKED__ CODI_EXTENDEDTIMEOUT_FRAME;$/;"	t	typeref:struct:_tagCODI_EXTENDEDTIMEOUT_FRAME
CODI_EXTENDEDTIMEOUT_PAYLOAD	include/codiFrame.h	/^}   __ATTRIBUTE_PACKED__ CODI_EXTENDEDTIMEOUT_PAYLOAD;$/;"	t	typeref:struct:_tagCODI_EXTENDEDTIMEOUT_PAYLOAD
CODI_EXTENDED_TIMEOUT_EXTENDED	include/codiDefine.h	261;"	d
CODI_EXTENDED_TIMEOUT_NORMAL	include/codiDefine.h	260;"	d
CODI_FLOW_REQUEST	include/codiDefine.h	50;"	d
CODI_FLOW_RESPONSE	include/codiDefine.h	51;"	d
CODI_FORMNETWORK_FORMNEWORK	include/codiDefine.h	233;"	d
CODI_FORMNETWORK_FRAME	include/codiFrame.h	/^}	__ATTRIBUTE_PACKED__ CODI_FORMNETWORK_FRAME;$/;"	t	typeref:struct:_tagCODI_FORMNETWORK_FRAME
CODI_FORMNETWORK_LEAVENETWORK	include/codiDefine.h	234;"	d
CODI_FORMNETWORK_PAYLOAD	include/codiFrame.h	/^}	__ATTRIBUTE_PACKED__ CODI_FORMNETWORK_PAYLOAD;$/;"	t	typeref:struct:_tagCODI_FORMNETWORK_PAYLOAD
CODI_FRAMEFLOW_ERROR	include/codiDefine.h	58;"	d
CODI_FRAMEFLOW_MASK	include/codiDefine.h	53;"	d
CODI_FRAMEFLOW_READ	include/codiDefine.h	55;"	d
CODI_FRAMEFLOW_READRESPONSE	include/codiDefine.h	60;"	d
CODI_FRAMEFLOW_REQUEST	include/codiDefine.h	56;"	d
CODI_FRAMEFLOW_RESPONSE	include/codiDefine.h	57;"	d
CODI_FRAMEFLOW_WRITE	include/codiDefine.h	54;"	d
CODI_FRAMEFLOW_WRITERESPONSE	include/codiDefine.h	61;"	d
CODI_FRAMETYPE_COMMAND	include/codiDefine.h	66;"	d
CODI_FRAMETYPE_DATA	include/codiDefine.h	67;"	d
CODI_FRAMETYPE_INFORMATION	include/codiDefine.h	65;"	d
CODI_FRAMETYPE_MASK	include/codiDefine.h	68;"	d
CODI_GENERAL_FRAME	include/codiFrame.h	/^}	__ATTRIBUTE_PACKED__ CODI_GENERAL_FRAME;$/;"	t	typeref:struct:_tagCODI_GENERAL_FRAME
CODI_HEADER	include/codiFrame.h	/^}	__ATTRIBUTE_PACKED__ CODI_HEADER;$/;"	t	typeref:struct:_tagCODI_HEADER
CODI_HEADER_LENGTH	src/CoordinatorDataStream.cpp	28;"	d	file:
CODI_IDENT	include/codiFrame.h	/^}	__ATTRIBUTE_PACKED__ CODI_IDENT;$/;"	t	typeref:struct:_tagCODI_IDENT
CODI_IDENTIFIER	include/codiTypedef.h	8;"	d
CODI_INFOERR_CRC16_ERROR	include/codiDefine.h	130;"	d
CODI_INFOERR_FRAME_CONTROL_ERROR	include/codiDefine.h	127;"	d
CODI_INFOERR_FRAME_TYPE_ERROR	include/codiDefine.h	129;"	d
CODI_INFOERR_REQUEST_ERROR	include/codiDefine.h	128;"	d
CODI_INFOERR_SERIAL_ERROR	include/codiDefine.h	126;"	d
CODI_INFOERR_SERIAL_TIME_OUT	include/codiDefine.h	125;"	d
CODI_INFO_ACTIVESCAN_FRAME	include/codiFrame.h	/^}	__ATTRIBUTE_PACKED__ CODI_INFO_ACTIVESCAN_FRAME;$/;"	t	typeref:struct:_tagCODI_INFO_ACTIVESCAN_FRAME
CODI_INFO_ACTIVE_SCAN	include/codiDefine.h	77;"	d
CODI_INFO_BOOT	include/codiDefine.h	72;"	d
CODI_INFO_BOOT_FRAME	include/codiFrame.h	/^}	__ATTRIBUTE_PACKED__ CODI_INFO_BOOT_FRAME;$/;"	t	typeref:struct:_tagCODI_INFO_BOOT_FRAME
CODI_INFO_ENERGYSCAN_FRAME	include/codiFrame.h	/^}	__ATTRIBUTE_PACKED__ CODI_INFO_ENERGYSCAN_FRAME;$/;"	t	typeref:struct:_tagCODI_INFO_ENERGYSCAN_FRAME
CODI_INFO_ENERGY_SCAN	include/codiDefine.h	76;"	d
CODI_INFO_ERROR	include/codiDefine.h	78;"	d
CODI_INFO_ERROR_FRAME	include/codiFrame.h	/^}	__ATTRIBUTE_PACKED__ CODI_INFO_ERROR_FRAME;$/;"	t	typeref:struct:_tagCODI_INFO_ERROR_FRAME
CODI_INFO_FRAME	include/codiFrame.h	/^}	__ATTRIBUTE_PACKED__ CODI_INFO_FRAME;$/;"	t	typeref:struct:_tagCODI_INFO_FRAME
CODI_INFO_JOIN	include/codiDefine.h	75;"	d
CODI_INFO_JOIN_FRAME	include/codiFrame.h	/^}	__ATTRIBUTE_PACKED__ CODI_INFO_JOIN_FRAME;$/;"	t	typeref:struct:_tagCODI_INFO_JOIN_FRAME
CODI_INFO_RESERVED0	include/codiDefine.h	74;"	d
CODI_INFO_ROUTERECORD_FRAME	include/codiFrame.h	/^}	__ATTRIBUTE_PACKED__ CODI_INFO_ROUTERECORD_FRAME;$/;"	t	typeref:struct:_tagCODI_INFO_ROUTERECORD_FRAME
CODI_INFO_ROUTE_RECORD	include/codiDefine.h	80;"	d
CODI_INFO_SCANCOMPLETE_FRAME	include/codiFrame.h	/^}	__ATTRIBUTE_PACKED__ CODI_INFO_SCANCOMPLETE_FRAME;$/;"	t	typeref:struct:_tagCODI_INFO_SCANCOMPLETE_FRAME
CODI_INFO_SCAN_COMPLETE	include/codiDefine.h	79;"	d
CODI_INFO_STACK_FRAME	include/codiFrame.h	/^}	__ATTRIBUTE_PACKED__ CODI_INFO_STACK_FRAME;$/;"	t	typeref:struct:_tagCODI_INFO_STACK_FRAME
CODI_INFO_STACK_STATUS	include/codiDefine.h	73;"	d
CODI_JOIN_PAYLOAD	include/codiFrame.h	/^}	__ATTRIBUTE_PACKED__ CODI_JOIN_PAYLOAD;$/;"	t	typeref:struct:_tagCODI_JOIN_PAYLOAD
CODI_KEY_FRAME	include/codiFrame.h	/^}	__ATTRIBUTE_PACKED__ CODI_KEY_FRAME;$/;"	t	typeref:struct:_tagCODI_KEY_FRAME
CODI_KEY_PAYLOAD	include/codiFrame.h	/^}	__ATTRIBUTE_PACKED__ CODI_KEY_PAYLOAD;$/;"	t	typeref:struct:_tagCODI_KEY_PAYLOAD
CODI_KEY_TABLE_ENTRY	include/codiFrame.h	/^}	__ATTRIBUTE_PACKED__ CODI_KEY_TABLE_ENTRY;$/;"	t	typeref:struct:_tagCODI_KEY_TABLE_ENTRY
CODI_KEY_TABLE_PAYLOAD	include/codiFrame.h	/^}	__ATTRIBUTE_PACKED__ CODI_KEY_TABLE_PAYLOAD;$/;"	t	typeref:struct:_tagCODI_KEY_TABLE_PAYLOAD
CODI_MANYTOONE_FRAME	include/codiFrame.h	/^}	__ATTRIBUTE_PACKED__ CODI_MANYTOONE_FRAME;$/;"	t	typeref:struct:_tagCODI_MANYTOONE_FRAME
CODI_MANYTOONE_HIGH_RAM	include/codiDefine.h	252;"	d
CODI_MANYTOONE_LOW_RAM	include/codiDefine.h	251;"	d
CODI_MANYTOONE_PAYLOAD	include/codiFrame.h	/^}	__ATTRIBUTE_PACKED__ CODI_MANYTOONE_PAYLOAD;$/;"	t	typeref:struct:_tagCODI_MANYTOONE_PAYLOAD
CODI_MANYTOONE_REQUEST	include/codiDefine.h	248;"	d
CODI_MAX_DATA_SIZE	include/codiDefine.h	8;"	d
CODI_MAX_FRAME_SIZE	include/codiDefine.h	6;"	d
CODI_MAX_PAYLOAD_SIZE	include/codiDefine.h	7;"	d
CODI_MAX_ROUTING_PATH	include/codiDefine.h	9;"	d
CODI_MODEMTYPE_XMODEM	include/codiDefine.h	30;"	d
CODI_MODEMTYPE_YMODEM	include/codiDefine.h	31;"	d
CODI_MODEMTYPE_ZMODEM	include/codiDefine.h	32;"	d
CODI_MODULE_FRAME	include/codiFrame.h	/^}	__ATTRIBUTE_PACKED__ CODI_MODULE_FRAME;$/;"	t	typeref:struct:_tagCODI_MODULE_FRAME
CODI_MODULE_PAYLOAD	include/codiFrame.h	/^}	__ATTRIBUTE_PACKED__ CODI_MODULE_PAYLOAD;$/;"	t	typeref:struct:_tagCODI_MODULE_PAYLOAD
CODI_MULTICASTHOP_FRAME	include/codiFrame.h	/^}	__ATTRIBUTE_PACKED__ CODI_MULTICASTHOP_FRAME;$/;"	t	typeref:struct:_tagCODI_MULTICASTHOP_FRAME
CODI_MULTICASTHOP_PAYLOAD	include/codiFrame.h	/^}   __ATTRIBUTE_PACKED__ CODI_MULTICASTHOP_PAYLOAD;$/;"	t	typeref:struct:_tagCODI_MULTICASTHOP_PAYLOAD
CODI_NEIGHBORTABLE_FRAME	include/codiFrame.h	/^}	__ATTRIBUTE_PACKED__ CODI_NEIGHBORTABLE_FRAME;$/;"	t	typeref:struct:_tagCODI_NEIGHBORTABLE_FRAME
CODI_NEIGHBOR_ENTRY	include/codiFrame.h	/^}	__ATTRIBUTE_PACKED__ CODI_NEIGHBOR_ENTRY;$/;"	t	typeref:struct:_tagCODI_NEIGHBOR_ENTRY
CODI_NEIGHBOR_PAYLOAD	include/codiFrame.h	/^}	__ATTRIBUTE_PACKED__ CODI_NEIGHBOR_PAYLOAD;$/;"	t	typeref:struct:_tagCODI_NEIGHBOR_PAYLOAD
CODI_NETWORK_FRAME	include/codiFrame.h	/^}	__ATTRIBUTE_PACKED__ CODI_NETWORK_FRAME;$/;"	t	typeref:struct:_tagCODI_NETWORK_FRAME
CODI_NETWORK_PAYLOAD	include/codiFrame.h	/^}	__ATTRIBUTE_PACKED__ CODI_NETWORK_PAYLOAD;$/;"	t	typeref:struct:_tagCODI_NETWORK_PAYLOAD
CODI_OPTION_AIMIR	include/codiDefine.h	26;"	d
CODI_OPTION_LINK	include/codiDefine.h	28;"	d
CODI_OPTION_SE1X	include/codiDefine.h	27;"	d
CODI_OPT_RTSCTS	include/codiDefine.h	20;"	d
CODI_PARITY_EVEN	include/codiDefine.h	217;"	d
CODI_PARITY_NONE	include/codiDefine.h	215;"	d
CODI_PARITY_ODD	include/codiDefine.h	216;"	d
CODI_PERMIT_FRAME	include/codiFrame.h	/^}	__ATTRIBUTE_PACKED__ CODI_PERMIT_FRAME;$/;"	t	typeref:struct:_tagCODI_PERMIT_FRAME
CODI_PERMIT_PAYLOAD	include/codiFrame.h	/^}	__ATTRIBUTE_PACKED__ CODI_PERMIT_PAYLOAD;$/;"	t	typeref:struct:_tagCODI_PERMIT_PAYLOAD
CODI_RADIO_STATUS	include/codiFrame.h	/^}	__ATTRIBUTE_PACKED__ CODI_RADIO_STATUS;$/;"	t	typeref:struct:_tagCODI_RADIO_STATUS
CODI_RESET_FRAME	include/codiFrame.h	/^}	__ATTRIBUTE_PACKED__ CODI_RESET_FRAME;$/;"	t	typeref:struct:_tagCODI_RESET_FRAME
CODI_RESET_PAYLOAD	include/codiFrame.h	/^}	__ATTRIBUTE_PACKED__ CODI_RESET_PAYLOAD;$/;"	t	typeref:struct:_tagCODI_RESET_PAYLOAD
CODI_RESET_SET	include/codiDefine.h	238;"	d
CODI_RK_AMR_FAIL	include/codiDefine.h	105;"	d
CODI_RK_ASSERT	include/codiDefine.h	91;"	d
CODI_RK_BOOTLOADER	include/codiDefine.h	94;"	d
CODI_RK_BOOTLOADER_IMG_BAD	include/codiDefine.h	100;"	d
CODI_RK_BROWNOUT	include/codiDefine.h	88;"	d
CODI_RK_CSTACK	include/codiDefine.h	93;"	d
CODI_RK_DELETE_BIND_FAIL	include/codiDefine.h	107;"	d
CODI_RK_EXTERNAL	include/codiDefine.h	85;"	d
CODI_RK_FACTORY_SETTING	include/codiDefine.h	101;"	d
CODI_RK_FAIL_CLOSE_CONNETION	include/codiDefine.h	106;"	d
CODI_RK_FIXED_INTERVAL	include/codiDefine.h	103;"	d
CODI_RK_FLASH_VERIFY_FAIL	include/codiDefine.h	98;"	d
CODI_RK_FLASH_WRITE_INHIBIT	include/codiDefine.h	99;"	d
CODI_RK_JTAG	include/codiDefine.h	90;"	d
CODI_RK_NO_JOIN	include/codiDefine.h	109;"	d
CODI_RK_PC_ROLLOVER	include/codiDefine.h	95;"	d
CODI_RK_POWERON	include/codiDefine.h	86;"	d
CODI_RK_PROTFAULT	include/codiDefine.h	97;"	d
CODI_RK_REED_SW	include/codiDefine.h	102;"	d
CODI_RK_RSTACK	include/codiDefine.h	92;"	d
CODI_RK_SCAN_FAIL	include/codiDefine.h	108;"	d
CODI_RK_SOFTWARE	include/codiDefine.h	96;"	d
CODI_RK_SOFT_REMOTE	include/codiDefine.h	104;"	d
CODI_RK_UNKNOWN	include/codiDefine.h	84;"	d
CODI_RK_WATCHDOG	include/codiDefine.h	87;"	d
CODI_ROUTEDISCOVERY_FRAME	include/codiFrame.h	/^}	__ATTRIBUTE_PACKED__ CODI_ROUTEDISCOVERY_FRAME;$/;"	t	typeref:struct:_tagCODI_ROUTEDISCOVERY_FRAME
CODI_ROUTEDISCOVERY_PAYLOAD	include/codiFrame.h	/^}   __ATTRIBUTE_PACKED__ CODI_ROUTEDISCOVERY_PAYLOAD;$/;"	t	typeref:struct:_tagCODI_ROUTEDISCOVERY_PAYLOAD
CODI_ROUTERECORD_PAYLOAD	include/codiFrame.h	/^}	__ATTRIBUTE_PACKED__ CODI_ROUTERECORD_PAYLOAD;$/;"	t	typeref:struct:_tagCODI_ROUTERECORD_PAYLOAD
CODI_ROUTE_FRAME	include/codiFrame.h	/^}	__ATTRIBUTE_PACKED__ CODI_ROUTE_FRAME;$/;"	t	typeref:struct:_tagCODI_ROUTE_FRAME
CODI_SCANCOMPLETE_PAYLOAD	include/codiFrame.h	/^}	__ATTRIBUTE_PACKED__ CODI_SCANCOMPLETE_PAYLOAD;$/;"	t	typeref:struct:_tagCODI_SCANCOMPLETE_PAYLOAD
CODI_SCANNETWORK_ENERGY	include/codiDefine.h	242;"	d
CODI_SCANNETWORK_FRAME	include/codiFrame.h	/^}	__ATTRIBUTE_PACKED__ CODI_SCANNETWORK_FRAME;$/;"	t	typeref:struct:_tagCODI_SCANNETWORK_FRAME
CODI_SCANNETWORK_NETWORK	include/codiDefine.h	243;"	d
CODI_SCANNETWORK_PAYLOAD	include/codiFrame.h	/^}	__ATTRIBUTE_PACKED__ CODI_SCANNETWORK_PAYLOAD;$/;"	t	typeref:struct:_tagCODI_SCANNETWORK_PAYLOAD
CODI_SCANNETWORK_STOP	include/codiDefine.h	244;"	d
CODI_SCAN_FRAME	include/codiFrame.h	/^}	__ATTRIBUTE_PACKED__ CODI_SCAN_FRAME;$/;"	t	typeref:struct:_tagCODI_SCAN_FRAME
CODI_SCAN_PAYLOAD	include/codiFrame.h	/^}	__ATTRIBUTE_PACKED__ CODI_SCAN_PAYLOAD;$/;"	t	typeref:struct:_tagCODI_SCAN_PAYLOAD
CODI_SECURITY_FRAME	include/codiFrame.h	/^}	__ATTRIBUTE_PACKED__ CODI_SECURITY_FRAME;$/;"	t	typeref:struct:_tagCODI_SECURITY_FRAME
CODI_SECURITY_PAYLOAD	include/codiFrame.h	/^}	__ATTRIBUTE_PACKED__ CODI_SECURITY_PAYLOAD;$/;"	t	typeref:struct:_tagCODI_SECURITY_PAYLOAD
CODI_SERIAL_FRAME	include/codiFrame.h	/^}	__ATTRIBUTE_PACKED__ CODI_SERIAL_FRAME;$/;"	t	typeref:struct:_tagCODI_SERIAL_FRAME
CODI_SERIAL_PAYLOAD	include/codiFrame.h	/^}	__ATTRIBUTE_PACKED__ CODI_SERIAL_PAYLOAD;$/;"	t	typeref:struct:_tagCODI_SERIAL_PAYLOAD
CODI_STACKMEMORY_FRAME	include/codiFrame.h	/^}	__ATTRIBUTE_PACKED__ CODI_STACKMEMORY_FRAME;$/;"	t	typeref:struct:_tagCODI_STACKMEMORY_FRAME
CODI_STACKMEMORY_PAYLOAD	include/codiFrame.h	/^}	__ATTRIBUTE_PACKED__ CODI_STACKMEMORY_PAYLOAD;$/;"	t	typeref:struct:_tagCODI_STACKMEMORY_PAYLOAD
CODI_STACK_DOWN	include/codiDefine.h	114;"	d
CODI_STACK_JOIN_FAILED	include/codiDefine.h	115;"	d
CODI_STACK_NO_BEACONS	include/codiDefine.h	117;"	d
CODI_STACK_PANID_CHANGE	include/codiDefine.h	116;"	d
CODI_STACK_PAYLOAD	include/codiFrame.h	/^}	__ATTRIBUTE_PACKED__ CODI_STACK_PAYLOAD;$/;"	t	typeref:struct:_tagCODI_STACK_PAYLOAD
CODI_STACK_UP	include/codiDefine.h	113;"	d
CODI_START_FLAG_FIRST	include/codiDefine.h	39;"	d
CODI_START_FLAG_SECOND	include/codiDefine.h	40;"	d
CODI_SUCCESS	include/codiDefine.h	121;"	d
CODI_TAIL	include/codiFrame.h	/^}	__ATTRIBUTE_PACKED__ CODI_TAIL;$/;"	t	typeref:struct:_tagCODI_TAIL
CODI_TAIL_LENGTH	src/CoordinatorDataStream.cpp	29;"	d	file:
CODI_TXPOWERMODE_ALTERNATE	include/codiDefine.h	223;"	d
CODI_TXPOWERMODE_BOOST	include/codiDefine.h	222;"	d
CODI_TXPOWERMODE_COMBINATION	include/codiDefine.h	224;"	d
CODI_TXPOWERMODE_DEFAULT	include/codiDefine.h	221;"	d
CODI_WRITE_FRAME	include/codiFrame.h	/^}	__ATTRIBUTE_PACKED__ CODI_WRITE_FRAME;$/;"	t	typeref:struct:_tagCODI_WRITE_FRAME
CODI_WRITE_PAYLOAD	include/codiFrame.h	/^}	__ATTRIBUTE_PACKED__ CODI_WRITE_PAYLOAD;$/;"	t	typeref:struct:_tagCODI_WRITE_PAYLOAD
CONSUMPTION_CURRENT	include/endiFrame.h	/^		WORD		CONSUMPTION_CURRENT;					\/\/ 현재까지 사용한 전류$/;"	m	struct:_tagENDI_BATTERY_ENTRY
CONSUMPTION_LOCATION	include/endiFrame.h	/^		char		CONSUMPTION_LOCATION[30];				\/\/ 설치 위치$/;"	m	struct:_tagENDI_AMR_INFO
COORDINATOR	include/codiTypedef.h	/^}	COORDINATOR;$/;"	t	typeref:struct:_tagCOORDINATOR
COndemander	samples/ge/Ondemander.cpp	/^COndemander::COndemander()$/;"	f	class:COndemander
COndemander	samples/ge/Ondemander.h	/^class COndemander$/;"	c
COperation	samples/ge/Operation.cpp	/^COperation::COperation()$/;"	f	class:COperation
COperation	samples/ge/Operation.h	/^class COperation$/;"	c
COptions	include/common/Options.h	/^class COptions$/;"	c
CPPSQLITE_ERROR	include/common/CppSQLite3.h	37;"	d
CPrivateProfile	include/common/PrivateProfile.h	/^class CPrivateProfile$/;"	c
CProfile	include/common/Profile.h	/^class CProfile$/;"	c
CQueue	include/common/Queue.h	/^class CQueue  $/;"	c
CSerialInterface	src/SerialInterface.cpp	/^CSerialInterface::CSerialInterface()$/;"	f	class:CSerialInterface
CSerialInterface	src/SerialInterface.h	/^class CSerialInterface : public CSerialServer, public CDeviceClass$/;"	c
CSerialServer	include/common/_UnixSerialServer.h	/^class CSerialServer$/;"	c
CSerialServer	include/common/_WinSerialServer.h	/^class CSerialServer : public CSerialWriter$/;"	c
CSerialWriter	include/common/_WinSerialWriter.h	/^class CSerialWriter  $/;"	c
CTCPClient	include/common/TCPClient.h	/^class CTCPClient : public CTCPSocket$/;"	c
CTCPMultiplexServer	include/common/TCPMultiplexServer.h	/^class CTCPMultiplexServer : public CTCPSocket$/;"	c
CTCPSocket	include/common/TCPSocket.h	/^class CTCPSocket  $/;"	c
CTimeoutThread	include/common/_UnixTimeoutThread.h	/^class CTimeoutThread$/;"	c
CTimeoutThread	include/common/_WinTimeoutThread.h	/^class CTimeoutThread : public CMultiThread$/;"	c
CUSTOMER_NAME	include/endiFrame.h	/^		char		CUSTOMER_NAME[20];						\/\/ 고객 이름$/;"	m	struct:_tagENDI_AMR_INFO
CVirtualInterface	src/VirtualInterface.cpp	/^CVirtualInterface::CVirtualInterface()$/;"	f	class:CVirtualInterface
CVirtualInterface	src/VirtualInterface.h	/^class CVirtualInterface : public CTimeoutThread, public CDeviceClass$/;"	c
CheckCoordinatorState	src/CoordinatorServer.cpp	/^void CCoordinatorServer::CheckCoordinatorState()$/;"	f	class:CCoordinatorServer
CheckPoint	include/common/MemoryDebug.h	18;"	d
ClearDataBuffer	src/EndDevicePool.cpp	/^int  CEndDevicePool::ClearDataBuffer(ENDDEVICE *pEndDevice)$/;"	f	class:CEndDevicePool
ClearOperation	samples/ge/Operation.h	29;"	d
CloseDirectConnection	src/CoordinatorServer.cpp	/^int CCoordinatorServer::CloseDirectConnection(ENDDEVICE *endi)$/;"	f	class:CCoordinatorServer
CloseEndDevice	src/CoordinatorServer.cpp	/^int CCoordinatorServer::CloseEndDevice(ENDDEVICE *endi)$/;"	f	class:CCoordinatorServer
Command	samples/ge/Ondemander.cpp	/^int	COndemander::Command(char *pszType, CMDPARAM *pCommand, METER_STAT *pStat)$/;"	f	class:COndemander
CommandEndDevice	src/CoordinatorServer.cpp	/^int CCoordinatorServer::CommandEndDevice(ENDDEVICE *endi, BYTE cmd, BYTE type, BYTE *data, int nLength, BYTE *result, int *nSize, int nTimeout)$/;"	f	class:CCoordinatorServer
CompareSeq	src/EndDevicePool.cpp	/^int CEndDevicePool::CompareSeq(BYTE previous, BYTE current)$/;"	f	class:CEndDevicePool
ConnectEndDevice	src/CoordinatorServer.cpp	/^int CCoordinatorServer::ConnectEndDevice(ENDDEVICE *endi, WORD nShortID, BYTE nHops, WORD *pRoutePath, int nTimeout, $/;"	f	class:CCoordinatorServer
ConnectParentDevice	src/CoordinatorServer.cpp	/^int CCoordinatorServer::ConnectParentDevice(COORDINATOR *codi, EUI64 *id, WORD shortid, BYTE hops, WORD *path, int nTimeout)$/;"	f	class:CCoordinatorServer
CppSQLite3Binary	include/common/CppSQLite3.h	/^class CppSQLite3Binary$/;"	c
CppSQLite3Buffer	include/common/CppSQLite3.h	/^class CppSQLite3Buffer$/;"	c
CppSQLite3DB	include/common/CppSQLite3.h	/^class CppSQLite3DB$/;"	c
CppSQLite3Exception	include/common/CppSQLite3.h	/^class CppSQLite3Exception$/;"	c
CppSQLite3Query	include/common/CppSQLite3.h	/^class CppSQLite3Query$/;"	c
CppSQLite3Statement	include/common/CppSQLite3.h	/^class CppSQLite3Statement$/;"	c
CppSQLite3Table	include/common/CppSQLite3.h	/^class CppSQLite3Table$/;"	c
DAEMON_STACK_SIZE	include/common/TCPSocket.h	31;"	d
DATASTREAM	include/typedef.h	/^}   DATASTREAM, *PDATASTREAM;$/;"	t	typeref:struct:_tagDATASTREAM
DEFAULT_CHUNK_GROW	include/common/Chunk.h	21;"	d
DEFAULT_CONNECT_TIMEOUT	include/common/TCPSocket.h	34;"	d
DEFAULT_DATASTREAM_GROW	include/common/DataStream.h	24;"	d
DEFAULT_HASH_GROW_SIZE	include/common/Hash.h	8;"	d
DEFAULT_KEEPALIVE_TIME	include/common/TCPSocket.h	35;"	d
DEFAULT_MAX_SESSION	include/common/TCPSocket.h	30;"	d
DEFAULT_SESSION_BUFFER	include/common/TCPSocket.h	33;"	d
DEFAULT_SESSION_STOP_TIMEOUT	include/common/TCPSocket.h	37;"	d
DEFAULT_SIO_BUFFER	include/common/_WinSerialServer.h	26;"	d
DEFAULT_SVR_SHUTDOWN_TIMEOUT	include/common/TCPSocket.h	36;"	d
DEFAULT_TERMINATE_TIMEOUT	include/common/_WinMultiThread.h	25;"	d
DEST	samples/aidon/Makefile	/^DEST        =$(TOP)\/bin$/;"	m
DEST	samples/bypass/Makefile	/^DEST        =$(TOP)\/bin$/;"	m
DEST	samples/dump/Makefile	/^DEST        =$(TOP)\/bin$/;"	m
DEST	samples/enditest/Makefile	/^DEST        =$(TOP)\/bin$/;"	m
DEST	samples/ge/Makefile	/^DEST        =$(TOP)\/bin$/;"	m
DEST	samples/init/Makefile	/^DEST        =$(TOP)\/bin$/;"	m
DEST	samples/rfmonitor/Makefile	/^DEST        =$(TOP)\/bin$/;"	m
DEST	samples/update/Makefile	/^DEST        =$(TOP)\/bin$/;"	m
DIGITAL_OUTPUT_REQUEST	include/endiDefine.h	302;"	d
DIGITAL_STATUS_REQUEST	include/endiDefine.h	301;"	d
DISABLE	include/typedef.h	48;"	d
DISTRIBUTECLI	include/typedef.h	/^}   DISTRIBUTECLI, *PDISTRIBUTECLI;$/;"	t	typeref:struct:_tagDISTRIBUTECLI
DISTRIBUTEITEM	include/typedef.h	/^}   DISTRIBUTEITEM, *PDISTRIBUTEITEM;$/;"	t	typeref:struct:_tagDISTRIBUTEITEM
DUMPSCRIPT	samples/dump/Makefile	/^DUMPSCRIPT  =$(TOP)\/bin\/dumpGPS.sh$/;"	m
DWORD	include/typedef.h	/^typedef unsigned int					DWORD;$/;"	t
DeleteEndDevice	src/EndDevicePool.cpp	/^void CEndDevicePool::DeleteEndDevice(ENDDEVICE *endi)$/;"	f	class:CEndDevicePool
DeleteOperation	samples/ge/Operation.h	28;"	d
DeleteWaitReply	src/CoordinatorWaitReply.cpp	/^void CCoordinatorWaitReply::DeleteWaitReply(CODIWAITREPLY *pReply)$/;"	f	class:CCoordinatorWaitReply
Difference	include/common/MemoryDebug.h	19;"	d
DisconnectEndDevice	src/CoordinatorServer.cpp	/^int CCoordinatorServer::DisconnectEndDevice(ENDDEVICE *endi)$/;"	f	class:CCoordinatorServer
DisconnectParentDevice	src/CoordinatorServer.cpp	/^int CCoordinatorServer::DisconnectParentDevice(COORDINATOR *codi, EUI64 *id, WORD shortid, BYTE hops, WORD *path)$/;"	f	class:CCoordinatorServer
Download	src/Coordinator.cpp	/^int CCoordinator::Download(COORDINATOR *codi, int nModemType, const char *pszFileName, const char *pszExt)$/;"	f	class:CCoordinator
DownloadCoordinator	src/CoordinatorServer.cpp	/^int	CCoordinatorServer::DownloadCoordinator(COORDINATOR *codi, int nType, const char *pszFileName, const char *pszExt)$/;"	f	class:CCoordinatorServer
ED_MODEL	samples/ge/ansi.h	/^		BYTE	ED_MODEL[8];$/;"	m	struct:_tagANSI_TABLE1
ENABLE	include/typedef.h	49;"	d
ENDDEVICE	include/codiTypedef.h	/^}	ENDDEVICE;$/;"	t	typeref:struct:_tagENDDEVICE
ENDDEVICEINFO	include/codiTypedef.h	/^}	ENDDEVICEINFO;$/;"	t	typeref:struct:_tagENDDEVICEINFO
ENDI	samples/bypass/bypass.cpp	/^} ENDI;$/;"	t	typeref:struct:__anon7	file:
ENDI	samples/dump/dump.cpp	/^} ENDI;$/;"	t	typeref:struct:__anon6	file:
ENDI	samples/rfmonitor/rfmonitor.cpp	/^} ENDI;$/;"	t	typeref:struct:__anon5	file:
ENDIOPT_SEQUENCE	include/codiTypedef.h	128;"	d
ENDIOPT_TIMEOUT	include/codiTypedef.h	129;"	d
ENDI_3PARTY_FRAME	include/endiFrame.h	/^}	__ATTRIBUTE_PACKED__ ENDI_3PARTY_FRAME;$/;"	t	typeref:struct:_tagENDI_3PARTY_FRAME
ENDI_3PARTY_HEADER	include/endiFrame.h	/^}   __ATTRIBUTE_PACKED__ ENDI_3PARTY_HEADER;$/;"	t	typeref:struct:_tagENDI_3PARTY_HEADER
ENDI_3PARTY_TAIL	include/endiFrame.h	/^}	__ATTRIBUTE_PACKED__ ENDI_3PARTY_TAIL;$/;"	t	typeref:struct:_tagENDI_3PARTY_TAIL
ENDI_AMRREAD_PAYLOAD	include/endiFrame.h	/^}	__ATTRIBUTE_PACKED__ ENDI_AMRREAD_PAYLOAD;$/;"	t	typeref:struct:_tagENDI_AMRREAD_PAYLOAD
ENDI_AMR_DATA	include/endiFrame.h	/^}	__ATTRIBUTE_PACKED__ ENDI_AMR_DATA;$/;"	t	typeref:struct:_tagENDI_AMR_DATA
ENDI_AMR_FRAME	include/endiFrame.h	/^}	__ATTRIBUTE_PACKED__ ENDI_AMR_FRAME;$/;"	t	typeref:struct:_tagENDI_AMR_FRAME
ENDI_AMR_INFO	include/endiFrame.h	/^}	__ATTRIBUTE_PACKED__ ENDI_AMR_INFO;$/;"	t	typeref:struct:_tagENDI_AMR_INFO
ENDI_AMR_PAYLOAD	include/endiFrame.h	/^}	__ATTRIBUTE_PACKED__ ENDI_AMR_PAYLOAD;$/;"	t	typeref:struct:_tagENDI_AMR_PAYLOAD
ENDI_AMR_READ_REQUEST	include/endiDefine.h	60;"	d
ENDI_AMR_READ_RESPONSE	include/endiDefine.h	61;"	d
ENDI_AMR_WRITE_REQUEST	include/endiDefine.h	58;"	d
ENDI_AMR_WRITE_RESPONSE	include/endiDefine.h	59;"	d
ENDI_BATTERYLOG_INFO	include/endiFrame.h	/^}	__ATTRIBUTE_PACKED__ ENDI_BATTERYLOG_INFO;$/;"	t	typeref:struct:_tagENDI_BATTERYLOG_INFO
ENDI_BATTERY_ENTRY	include/endiFrame.h	/^}	__ATTRIBUTE_PACKED__ ENDI_BATTERY_ENTRY;$/;"	t	typeref:struct:_tagENDI_BATTERY_ENTRY
ENDI_BYPASS_FRAME	include/endiFrame.h	/^}	__ATTRIBUTE_PACKED__ ENDI_BYPASS_FRAME;$/;"	t	typeref:struct:_tagENDI_BYPASS_FRAME
ENDI_BYPASS_PAYLOAD	include/endiFrame.h	/^}	__ATTRIBUTE_PACKED__ ENDI_BYPASS_PAYLOAD;$/;"	t	typeref:struct:_tagENDI_BYPASS_PAYLOAD
ENDI_CMD_DISCOVERY_REQUEST	include/endiDefine.h	130;"	d
ENDI_CMD_DISCOVERY_RESPONSE	include/endiDefine.h	131;"	d
ENDI_CMD_INSTALL_BOOTLOADER	include/endiDefine.h	88;"	d
ENDI_CMD_LAST_COMMAND	include/endiDefine.h	111;"	d
ENDI_CMD_READ_REQUEST	include/endiDefine.h	126;"	d
ENDI_CMD_READ_RESPONSE	include/endiDefine.h	127;"	d
ENDI_CMD_RESET	include/endiDefine.h	89;"	d
ENDI_CMD_SET_ACTIVE_KEEP_TIME	include/endiDefine.h	100;"	d
ENDI_CMD_SET_ACTIVE_MIN	include/endiDefine.h	97;"	d
ENDI_CMD_SET_ALARM_FLAG	include/endiDefine.h	93;"	d
ENDI_CMD_SET_ALARM_MASK	include/endiDefine.h	104;"	d
ENDI_CMD_SET_CURRENT_PULSE	include/endiDefine.h	91;"	d
ENDI_CMD_SET_HEART_BEAT_DAY	include/endiDefine.h	118;"	d
ENDI_CMD_SET_HEART_BEAT_HOUR	include/endiDefine.h	119;"	d
ENDI_CMD_SET_LAST_PULSE	include/endiDefine.h	92;"	d
ENDI_CMD_SET_LP_CHOICE	include/endiDefine.h	95;"	d
ENDI_CMD_SET_LP_PERIOD	include/endiDefine.h	94;"	d
ENDI_CMD_SET_METERING_DAY	include/endiDefine.h	98;"	d
ENDI_CMD_SET_METERING_FAIL_CNT	include/endiDefine.h	105;"	d
ENDI_CMD_SET_METERING_HOUR	include/endiDefine.h	99;"	d
ENDI_CMD_SET_METER_ROLLBACK	include/endiDefine.h	108;"	d
ENDI_CMD_SET_NETWORK_TYPE	include/endiDefine.h	106;"	d
ENDI_CMD_SET_OPER_DAY	include/endiDefine.h	96;"	d
ENDI_CMD_SET_PERMIT_MODE	include/endiDefine.h	102;"	d
ENDI_CMD_SET_PERMIT_STATE	include/endiDefine.h	103;"	d
ENDI_CMD_SET_POWER_QUALITY	include/endiDefine.h	107;"	d
ENDI_CMD_SET_PUSH_STRATEGY	include/endiDefine.h	109;"	d
ENDI_CMD_SET_RF_POWER	include/endiDefine.h	101;"	d
ENDI_CMD_SET_SMOKE_ALARM	include/endiDefine.h	115;"	d
ENDI_CMD_SET_SMOKE_ALARM_LEVEL	include/endiDefine.h	117;"	d
ENDI_CMD_SET_SMOKE_RF_POWER_MODE	include/endiDefine.h	120;"	d
ENDI_CMD_SET_SMOKE_STATUS_REQUEST	include/endiDefine.h	116;"	d
ENDI_CMD_SET_TIME	include/endiDefine.h	90;"	d
ENDI_CMD_VERIFY_EEPROM	include/endiDefine.h	87;"	d
ENDI_CMD_WRITE_REQUEST	include/endiDefine.h	124;"	d
ENDI_CMD_WRITE_RESPONSE	include/endiDefine.h	125;"	d
ENDI_COMMAND_FRAME	include/endiFrame.h	/^}	__ATTRIBUTE_PACKED__ ENDI_COMMAND_FRAME;$/;"	t	typeref:struct:_tagENDI_COMMAND_FRAME
ENDI_COMMAND_PAYLOAD	include/endiFrame.h	/^}	__ATTRIBUTE_PACKED__ ENDI_COMMAND_PAYLOAD;$/;"	t	typeref:struct:_tagENDI_COMMAND_PAYLOAD
ENDI_DATATYPE_AMR	include/endiDefine.h	8;"	d
ENDI_DATATYPE_BYPASS	include/endiDefine.h	6;"	d
ENDI_DATATYPE_COMMAND	include/endiDefine.h	16;"	d
ENDI_DATATYPE_DIO	include/endiDefine.h	24;"	d
ENDI_DATATYPE_DISCOVERY	include/endiDefine.h	18;"	d
ENDI_DATATYPE_EVENT	include/endiDefine.h	13;"	d
ENDI_DATATYPE_LINK	include/endiDefine.h	14;"	d
ENDI_DATATYPE_LONG_ROM_READ	include/endiDefine.h	15;"	d
ENDI_DATATYPE_MBUS	include/endiDefine.h	23;"	d
ENDI_DATATYPE_MBUS_NEW	include/endiDefine.h	28;"	d
ENDI_DATATYPE_MCCB	include/endiDefine.h	10;"	d
ENDI_DATATYPE_METERING	include/endiDefine.h	12;"	d
ENDI_DATATYPE_NAN	include/endiDefine.h	26;"	d
ENDI_DATATYPE_NETWORK_LEAVE	include/endiDefine.h	7;"	d
ENDI_DATATYPE_PUSH	include/endiDefine.h	30;"	d
ENDI_DATATYPE_ROM_READ	include/endiDefine.h	9;"	d
ENDI_DATATYPE_STATE	include/endiDefine.h	17;"	d
ENDI_DATATYPE_SUPER_PARENT	include/endiDefine.h	22;"	d
ENDI_DATATYPE_TIMESYNC	include/endiDefine.h	11;"	d
ENDI_DATA_FRAME	include/endiFrame.h	/^}	__ATTRIBUTE_PACKED__ ENDI_DATA_FRAME;$/;"	t	typeref:struct:_tagENDI_DATA_FRAME
ENDI_DIO_FRAME	include/endiFrame.h	/^}	__ATTRIBUTE_PACKED__ ENDI_DIO_FRAME;$/;"	t	typeref:struct:_tagENDI_DIO_FRAME
ENDI_DIO_PAYLOAD	include/endiFrame.h	/^}	__ATTRIBUTE_PACKED__ ENDI_DIO_PAYLOAD;$/;"	t	typeref:struct:_tagENDI_DIO_PAYLOAD
ENDI_DISCOVERY_FRAME	include/endiFrame.h	/^}	__ATTRIBUTE_PACKED__ ENDI_DISCOVERY_FRAME;$/;"	t	typeref:struct:_tagENDI_DISCOVERY_FRAME
ENDI_DISCOVERY_PAYLOAD	include/endiFrame.h	/^}	__ATTRIBUTE_PACKED__ ENDI_DISCOVERY_PAYLOAD;$/;"	t	typeref:struct:_tagENDI_DISCOVERY_PAYLOAD
ENDI_ERROR_FRAME	include/endiFrame.h	/^}	__ATTRIBUTE_PACKED__ ENDI_ERROR_FRAME;$/;"	t	typeref:struct:_tagENDI_ERROR_FRAME
ENDI_ERROR_PAYLOAD	include/endiFrame.h	/^}	__ATTRIBUTE_PACKED__ ENDI_ERROR_PAYLOAD;$/;"	t	typeref:struct:_tagENDI_ERROR_PAYLOAD
ENDI_EVENTLOG_INFO	include/endiFrame.h	/^}	__ATTRIBUTE_PACKED__ ENDI_EVENTLOG_INFO;$/;"	t	typeref:struct:_tagENDI_EVENTLOG_INFO
ENDI_EVENT_ATTACHMENT	include/endiDefine.h	146;"	d
ENDI_EVENT_BACK_PULSE	include/endiDefine.h	145;"	d
ENDI_EVENT_BATT_DISCHARGING_ENABLE	include/endiDefine.h	144;"	d
ENDI_EVENT_CASE_OPEN	include/endiDefine.h	140;"	d
ENDI_EVENT_ENTRY	include/endiFrame.h	/^}	__ATTRIBUTE_PACKED__ ENDI_EVENT_ENTRY;$/;"	t	typeref:struct:_tagENDI_EVENT_ENTRY
ENDI_EVENT_FIRE	include/endiDefine.h	148;"	d
ENDI_EVENT_FRAME	include/endiFrame.h	/^}	__ATTRIBUTE_PACKED__ ENDI_EVENT_FRAME;$/;"	t	typeref:struct:_tagENDI_EVENT_FRAME
ENDI_EVENT_LOW_BATTERY	include/endiDefine.h	136;"	d
ENDI_EVENT_LX_MISSING	include/endiDefine.h	138;"	d
ENDI_EVENT_MAGNETIC_DETACH	include/endiDefine.h	142;"	d
ENDI_EVENT_MAGNETIC_TAMPER	include/endiDefine.h	141;"	d
ENDI_EVENT_PAYLOAD	include/endiFrame.h	/^}	__ATTRIBUTE_PACKED__ ENDI_EVENT_PAYLOAD;$/;"	t	typeref:struct:_tagENDI_EVENT_PAYLOAD
ENDI_EVENT_POWER_OUTAGE	include/endiDefine.h	135;"	d
ENDI_EVENT_POWER_RECOVER	include/endiDefine.h	137;"	d
ENDI_EVENT_PULSE_CUT	include/endiDefine.h	143;"	d
ENDI_EVENT_STATE_ALARM	include/endiDefine.h	147;"	d
ENDI_EVENT_STATUS	include/endiFrame.h	/^}	__ATTRIBUTE_PACKED__ ENDI_EVENT_STATUS;$/;"	t	typeref:struct:_tagENDI_EVENT_STATUS
ENDI_EVENT_TILT_ALARM	include/endiDefine.h	139;"	d
ENDI_EVENT_TYPE_ATTACHMENT	include/endiDefine.h	173;"	d
ENDI_EVENT_TYPE_BATT_DISC_EN	include/endiDefine.h	169;"	d
ENDI_EVENT_TYPE_BOOTUP	include/endiDefine.h	181;"	d
ENDI_EVENT_TYPE_CASE_OPEN	include/endiDefine.h	161;"	d
ENDI_EVENT_TYPE_CPULSE_ERROR	include/endiDefine.h	183;"	d
ENDI_EVENT_TYPE_DETACHEMENT	include/endiDefine.h	165;"	d
ENDI_EVENT_TYPE_EEPROM_LP_FAIL	include/endiDefine.h	182;"	d
ENDI_EVENT_TYPE_FACTORY_SETTING	include/endiDefine.h	155;"	d
ENDI_EVENT_TYPE_INVALID_METERING	include/endiDefine.h	180;"	d
ENDI_EVENT_TYPE_KEEP_ALIVE_FAIL	include/endiDefine.h	164;"	d
ENDI_EVENT_TYPE_LOW_BATTERY	include/endiDefine.h	160;"	d
ENDI_EVENT_TYPE_LP_PERIOD_CHANGE	include/endiDefine.h	156;"	d
ENDI_EVENT_TYPE_LP_ROLLBACK	include/endiDefine.h	184;"	d
ENDI_EVENT_TYPE_LX_MISSING	include/endiDefine.h	158;"	d
ENDI_EVENT_TYPE_METER_FW_UPGRADE_FAIL	include/endiDefine.h	185;"	d
ENDI_EVENT_TYPE_MSP430_RESET	include/endiDefine.h	176;"	d
ENDI_EVENT_TYPE_MSP430_STATUS	include/endiDefine.h	175;"	d
ENDI_EVENT_TYPE_NETWORK_JOIN	include/endiDefine.h	153;"	d
ENDI_EVENT_TYPE_NETWORK_LEAVE	include/endiDefine.h	154;"	d
ENDI_EVENT_TYPE_NETWORK_TYPE	include/endiDefine.h	170;"	d
ENDI_EVENT_TYPE_NET_JOIN_LIMITED	include/endiDefine.h	177;"	d
ENDI_EVENT_TYPE_NET_KEY_SWITCHING	include/endiDefine.h	179;"	d
ENDI_EVENT_TYPE_NO_PARENT	include/endiDefine.h	168;"	d
ENDI_EVENT_TYPE_OPTICAL_CMD	include/endiDefine.h	171;"	d
ENDI_EVENT_TYPE_POWER_OUTAGE	include/endiDefine.h	152;"	d
ENDI_EVENT_TYPE_PULSE_BACK	include/endiDefine.h	172;"	d
ENDI_EVENT_TYPE_PULSE_MO	include/endiDefine.h	166;"	d
ENDI_EVENT_TYPE_REPEATER_STATUS	include/endiDefine.h	178;"	d
ENDI_EVENT_TYPE_RESERVED_SRAM_CRACK	include/endiDefine.h	163;"	d
ENDI_EVENT_TYPE_RESET	include/endiDefine.h	151;"	d
ENDI_EVENT_TYPE_SCAN_FAIL	include/endiDefine.h	159;"	d
ENDI_EVENT_TYPE_STATE_ALARM	include/endiDefine.h	174;"	d
ENDI_EVENT_TYPE_TAMPER	include/endiDefine.h	162;"	d
ENDI_EVENT_TYPE_TIME_OFFSET	include/endiDefine.h	157;"	d
ENDI_EVENT_TYPE_WKAE_UP	include/endiDefine.h	167;"	d
ENDI_IDENTIFIER	include/codiTypedef.h	9;"	d
ENDI_LEAVE_FRAME	include/endiFrame.h	/^}	__ATTRIBUTE_PACKED__ ENDI_LEAVE_FRAME;$/;"	t	typeref:struct:_tagENDI_LEAVE_FRAME
ENDI_LEAVE_NETWORK_REQUEST	include/endiDefine.h	52;"	d
ENDI_LEAVE_NETWORK_RESPONSE	include/endiDefine.h	53;"	d
ENDI_LEAVE_NETWORK_SELF	include/endiDefine.h	54;"	d
ENDI_LEAVE_PAYLOAD	include/endiFrame.h	/^}	__ATTRIBUTE_PACKED__ ENDI_LEAVE_PAYLOAD;$/;"	t	typeref:struct:_tagENDI_LEAVE_PAYLOAD
ENDI_LINKCLOSE_REQUEST	include/endiDefine.h	42;"	d
ENDI_LINKOPEN_REQUEST	include/endiDefine.h	43;"	d
ENDI_LINKOPEN_RESPONSE	include/endiDefine.h	44;"	d
ENDI_LINKSRC_PDA	include/endiDefine.h	48;"	d
ENDI_LINK_FRAME	include/endiFrame.h	/^}	__ATTRIBUTE_PACKED__ ENDI_LINK_FRAME;$/;"	t	typeref:struct:_tagENDI_LINK_FRAME
ENDI_LINK_PAYLOAD	include/endiFrame.h	/^}	__ATTRIBUTE_PACKED__ ENDI_LINK_PAYLOAD;$/;"	t	typeref:struct:_tagENDI_LINK_PAYLOAD
ENDI_LONG_ROMREAD_PAYLOAD	include/endiFrame.h	/^}   __ATTRIBUTE_PACKED__ ENDI_LONG_ROMREAD_PAYLOAD;$/;"	t	typeref:struct:_tagENDI_LONG_ROMREAD_PAYLOAD
ENDI_LONG_ROM_FRAME	include/endiFrame.h	/^}	__ATTRIBUTE_PACKED__ ENDI_LONG_ROM_FRAME;$/;"	t	typeref:struct:_tagENDI_LONG_ROM_FRAME
ENDI_LONG_ROM_PAYLOAD	include/endiFrame.h	/^}	__ATTRIBUTE_PACKED__ ENDI_LONG_ROM_PAYLOAD;$/;"	t	typeref:struct:_tagENDI_LONG_ROM_PAYLOAD
ENDI_LPLOG_INFO	include/endiFrame.h	/^}	__ATTRIBUTE_PACKED__ ENDI_LPLOG_INFO;$/;"	t	typeref:struct:_tagENDI_LPLOG_INFO
ENDI_LP_ENTRY	include/endiFrame.h	/^}	__ATTRIBUTE_PACKED__ ENDI_LP_ENTRY;$/;"	t	typeref:struct:_tagENDI_LP_ENTRY
ENDI_MAX_POOL_COUNT	src/EndDevicePool.h	4;"	d
ENDI_MCCB_FRAME	include/endiFrame.h	/^}	__ATTRIBUTE_PACKED__ ENDI_MCCB_FRAME;$/;"	t	typeref:struct:_tagENDI_MCCB_FRAME
ENDI_MCCB_PAYLOAD	include/endiFrame.h	/^}	__ATTRIBUTE_PACKED__ ENDI_MCCB_PAYLOAD;$/;"	t	typeref:struct:_tagENDI_MCCB_PAYLOAD
ENDI_MCCB_REQUEST	include/endiDefine.h	363;"	d
ENDI_MCCB_RESPONSE	include/endiDefine.h	364;"	d
ENDI_METERING_FRAME	include/endiFrame.h	/^}	__ATTRIBUTE_PACKED__ ENDI_METERING_FRAME;$/;"	t	typeref:struct:_tagENDI_METERING_FRAME
ENDI_METERING_INFO	include/endiFrame.h	/^}   __ATTRIBUTE_PACKED__ ENDI_METERING_INFO;$/;"	t	typeref:struct:_tagENDI_METERING_INFO
ENDI_METERING_PAYLOAD	include/endiFrame.h	/^}	__ATTRIBUTE_PACKED__ ENDI_METERING_PAYLOAD;$/;"	t	typeref:struct:_tagENDI_METERING_PAYLOAD
ENDI_NAN_FRAME	include/endiFrame.h	/^}	__ATTRIBUTE_PACKED__ ENDI_NAN_FRAME;$/;"	t	typeref:struct:_tagENDI_NAN_FRAME
ENDI_NAN_PAYLOAD	include/endiFrame.h	/^}	__ATTRIBUTE_PACKED__ ENDI_NAN_PAYLOAD;$/;"	t	typeref:struct:_tagENDI_NAN_PAYLOAD
ENDI_NETWORK_INFO	include/endiFrame.h	/^}	__ATTRIBUTE_PACKED__ ENDI_NETWORK_INFO;$/;"	t	typeref:struct:_tagENDI_NETWORK_INFO
ENDI_NODE_INFO	include/endiFrame.h	/^}	__ATTRIBUTE_PACKED__ ENDI_NODE_INFO;$/;"	t	typeref:struct:_tagENDI_NODE_INFO
ENDI_PUSH_BASEPULSE	include/endiFrame.h	/^}   __ATTRIBUTE_PACKED__ ENDI_PUSH_BASEPULSE;$/;"	t	typeref:struct:_tagENDI_PUSH_BASEPULSE
ENDI_PUSH_EVT_HEADER	include/endiFrame.h	/^}   __ATTRIBUTE_PACKED__ ENDI_PUSH_EVT_HEADER;$/;"	t	typeref:struct:_tagENDI_PUSH_EVT_HEADER
ENDI_PUSH_FRAME	include/endiFrame.h	/^}	__ATTRIBUTE_PACKED__ ENDI_PUSH_FRAME;$/;"	t	typeref:struct:_tagENDI_PUSH_FRAME
ENDI_PUSH_HEADER	include/endiFrame.h	/^}   __ATTRIBUTE_PACKED__ ENDI_PUSH_HEADER;$/;"	t	typeref:struct:_tagENDI_PUSH_HEADER
ENDI_PUSH_LP	include/endiFrame.h	/^}   __ATTRIBUTE_PACKED__ ENDI_PUSH_LP;$/;"	t	typeref:struct:_tagENDI_PUSH_LP
ENDI_PUSH_LPINFO	include/endiFrame.h	/^}   __ATTRIBUTE_PACKED__ ENDI_PUSH_LPINFO;$/;"	t	typeref:struct:_tagENDI_PUSH_LPINFO
ENDI_ROMAP_ALARM_FLAG	include/endiDefine.h	240;"	d
ENDI_ROMAP_ALARM_MASK	include/endiDefine.h	245;"	d
ENDI_ROMAP_BATTERY_LOGDATA	include/endiDefine.h	263;"	d
ENDI_ROMAP_BATTERY_POINTER	include/endiDefine.h	262;"	d
ENDI_ROMAP_CDMA_CSQ	include/endiDefine.h	220;"	d
ENDI_ROMAP_CDMA_FW_BUILD	include/endiDefine.h	219;"	d
ENDI_ROMAP_CDMA_FW_VERSION	include/endiDefine.h	218;"	d
ENDI_ROMAP_CHANNEL	include/endiDefine.h	195;"	d
ENDI_ROMAP_CONSUMPTION_LOCATION	include/endiDefine.h	228;"	d
ENDI_ROMAP_CURRENT_SCALE	include/endiDefine.h	223;"	d
ENDI_ROMAP_CUSTOMER_NAME	include/endiDefine.h	230;"	d
ENDI_ROMAP_DAY_OF_SCANNING	include/endiDefine.h	256;"	d
ENDI_ROMAP_EVENT_LOGDATA	include/endiDefine.h	268;"	d
ENDI_ROMAP_EVENT_POINTER	include/endiDefine.h	267;"	d
ENDI_ROMAP_EXT_PANID	include/endiDefine.h	201;"	d
ENDI_ROMAP_FIRMWARE_BUILD	include/endiDefine.h	207;"	d
ENDI_ROMAP_FIRMWARE_VERSION	include/endiDefine.h	206;"	d
ENDI_ROMAP_FIXED_RESET	include/endiDefine.h	231;"	d
ENDI_ROMAP_GE_METER_ANSI_KEY	include/endiDefine.h	254;"	d
ENDI_ROMAP_GE_METER_TYPE	include/endiDefine.h	255;"	d
ENDI_ROMAP_HARDWARE_VERSION	include/endiDefine.h	209;"	d
ENDI_ROMAP_INTERFACE_VERSION	include/endiDefine.h	211;"	d
ENDI_ROMAP_LAST_PACKET_TIME	include/endiDefine.h	221;"	d
ENDI_ROMAP_LINK_KEY	include/endiDefine.h	199;"	d
ENDI_ROMAP_LP_CHOICE	include/endiDefine.h	239;"	d
ENDI_ROMAP_MANUAL_ENABLE	include/endiDefine.h	194;"	d
ENDI_ROMAP_METERING_DAY	include/endiDefine.h	233;"	d
ENDI_ROMAP_METERING_FAIL_CNT	include/endiDefine.h	244;"	d
ENDI_ROMAP_METERING_HOUR	include/endiDefine.h	234;"	d
ENDI_ROMAP_METER_CONSTANT	include/endiDefine.h	252;"	d
ENDI_ROMAP_METER_LPLOGDATA	include/endiDefine.h	274;"	d
ENDI_ROMAP_METER_LPPERIOD	include/endiDefine.h	272;"	d
ENDI_ROMAP_METER_LPPOINTER	include/endiDefine.h	273;"	d
ENDI_ROMAP_METER_SERIAL_NUMBER	include/endiDefine.h	227;"	d
ENDI_ROMAP_NAZC_NUMBER	include/endiDefine.h	238;"	d
ENDI_ROMAP_NETWORK_KEY	include/endiDefine.h	200;"	d
ENDI_ROMAP_NETWORK_TYPE	include/endiDefine.h	246;"	d
ENDI_ROMAP_NODE_KIND	include/endiDefine.h	205;"	d
ENDI_ROMAP_NO_JOIN_CNT	include/endiDefine.h	241;"	d
ENDI_ROMAP_PANID	include/endiDefine.h	196;"	d
ENDI_ROMAP_PERMIT_MODE	include/endiDefine.h	242;"	d
ENDI_ROMAP_PERMIT_STATE	include/endiDefine.h	243;"	d
ENDI_ROMAP_PROTOCOL_VERSION	include/endiDefine.h	210;"	d
ENDI_ROMAP_PUSH_STRATEGY	include/endiDefine.h	257;"	d
ENDI_ROMAP_REPEATING_DAY	include/endiDefine.h	235;"	d
ENDI_ROMAP_REPEATING_HOUR	include/endiDefine.h	236;"	d
ENDI_ROMAP_REPEATING_SETUP_SEC	include/endiDefine.h	237;"	d
ENDI_ROMAP_RESET_COUNT	include/endiDefine.h	212;"	d
ENDI_ROMAP_RESET_REASON	include/endiDefine.h	213;"	d
ENDI_ROMAP_SECURITY_ENABLE	include/endiDefine.h	198;"	d
ENDI_ROMAP_SOFTWARE_VERSION	include/endiDefine.h	208;"	d
ENDI_ROMAP_SOLAR_LOGDATA	include/endiDefine.h	279;"	d
ENDI_ROMAP_SOLAR_POINTER	include/endiDefine.h	278;"	d
ENDI_ROMAP_SP_NETWORK	include/endiDefine.h	214;"	d
ENDI_ROMAP_SUB_FW_BUILD	include/endiDefine.h	217;"	d
ENDI_ROMAP_SUB_FW_VERSION	include/endiDefine.h	216;"	d
ENDI_ROMAP_TEST_FLAG	include/endiDefine.h	232;"	d
ENDI_ROMAP_TXPOWER	include/endiDefine.h	197;"	d
ENDI_ROMAP_VENDOR	include/endiDefine.h	229;"	d
ENDI_ROMAP_VOLTAGE_SCALE	include/endiDefine.h	222;"	d
ENDI_ROMREAD_PAYLOAD	include/endiFrame.h	/^}   __ATTRIBUTE_PACKED__ ENDI_ROMREAD_PAYLOAD;$/;"	t	typeref:struct:_tagENDI_ROMREAD_PAYLOAD
ENDI_ROM_FRAME	include/endiFrame.h	/^}	__ATTRIBUTE_PACKED__ ENDI_ROM_FRAME;$/;"	t	typeref:struct:_tagENDI_ROM_FRAME
ENDI_ROM_PAYLOAD	include/endiFrame.h	/^}	__ATTRIBUTE_PACKED__ ENDI_ROM_PAYLOAD;$/;"	t	typeref:struct:_tagENDI_ROM_PAYLOAD
ENDI_ROM_READ_REQUEST	include/endiDefine.h	83;"	d
ENDI_ROM_READ_RESPONSE	include/endiDefine.h	84;"	d
ENDI_ROM_WRITE_REQUEST	include/endiDefine.h	81;"	d
ENDI_ROM_WRITE_RESPONSE	include/endiDefine.h	82;"	d
ENDI_SOLARLOG_ENTRY	include/endiFrame.h	/^}	__ATTRIBUTE_PACKED__ ENDI_SOLARLOG_ENTRY;$/;"	t	typeref:struct:_tagENDI_SOLARLOG_ENTRY
ENDI_SOLARLOG_INFO	include/endiFrame.h	/^}	__ATTRIBUTE_PACKED__ ENDI_SOLARLOG_INFO;$/;"	t	typeref:struct:_tagENDI_SOLARLOG_INFO
ENDI_SOLARVOLT_ENTRY	include/endiFrame.h	/^}	__ATTRIBUTE_PACKED__ ENDI_SOLARVOLT_ENTRY;$/;"	t	typeref:struct:_tagENDI_SOLARVOLT_ENTRY
ENDI_SPTYPE_DEL_REQUEST	include/endiDefine.h	37;"	d
ENDI_SPTYPE_DEL_RESPONSE	include/endiDefine.h	38;"	d
ENDI_SPTYPE_SET_REQUEST	include/endiDefine.h	35;"	d
ENDI_SPTYPE_SET_RESPONSE	include/endiDefine.h	36;"	d
ENDI_STATE_FRAME	include/endiFrame.h	/^}	__ATTRIBUTE_PACKED__ ENDI_STATE_FRAME;$/;"	t	typeref:struct:_tagENDI_STATE_FRAME
ENDI_STATE_PAYLOAD	include/endiFrame.h	/^}	__ATTRIBUTE_PACKED__ ENDI_STATE_PAYLOAD;$/;"	t	typeref:struct:_tagENDI_STATE_PAYLOAD
ENDI_SUPER_PARENT_FRAME	include/endiFrame.h	/^}	__ATTRIBUTE_PACKED__ ENDI_SUPER_PARENT_FRAME;$/;"	t	typeref:struct:_tagENDI_SUPER_PARENT_FRAME
ENDI_SUPER_PARENT_PAYLOAD	include/endiFrame.h	/^}	__ATTRIBUTE_PACKED__ ENDI_SUPER_PARENT_PAYLOAD;$/;"	t	typeref:struct:_tagENDI_SUPER_PARENT_PAYLOAD
ENDI_TIMESYNC_FRAME	include/endiFrame.h	/^}	__ATTRIBUTE_PACKED__ ENDI_TIMESYNC_FRAME;$/;"	t	typeref:struct:_tagENDI_TIMESYNC_FRAME
ENDI_TIMESYNC_PAYLOAD	include/endiFrame.h	/^}	__ATTRIBUTE_PACKED__ ENDI_TIMESYNC_PAYLOAD;$/;"	t	typeref:struct:_tagENDI_TIMESYNC_PAYLOAD
ERRMSG	samples/bypass/bypass.cpp	37;"	d	file:
ERRMSG	samples/dump/dump.cpp	37;"	d	file:
ERRMSG	samples/rfmonitor/rfmonitor.cpp	36;"	d	file:
ERROR_PKT_COUNT	samples/ge/ansi.h	/^		UINT	ERROR_PKT_COUNT;$/;"	m	struct:_tagSTAT_TABLE
ETHER_TYPE_DHCP	include/typedef.h	55;"	d
ETHER_TYPE_LAN	include/typedef.h	54;"	d
ETHER_TYPE_PPP	include/typedef.h	57;"	d
ETHER_TYPE_PPPOE	include/typedef.h	56;"	d
EUI64	include/typedef.h	/^} 	__ATTRIBUTE_PACKED__ EUI64, *PEUI64;$/;"	t	typeref:struct:_tagEUI64
EVENTHANDLE	include/common/Event.h	/^}   EVENTHANDLE, *PEVENTHANDLE;$/;"	t	typeref:struct:_tagEVENTHANDLE
EVENTWRITEITEM	include/typedef.h	/^}	__ATTRIBUTE_PACKED__ EVENTWRITEITEM, *PEVENTWRITEITEM;$/;"	t	typeref:struct:_tagEVENTWRITEITEM
EVENT_FLAG_ALERT	include/typedef.h	316;"	d
EVENT_FLAG_SENT	include/typedef.h	317;"	d
EVENT_LOG_ADDRESS	include/endiDefine.h	345;"	d
EVENT_POINTER	include/endiFrame.h	/^		BYTE		EVENT_POINTER;							\/\/ 이벤트 포인터$/;"	m	struct:_tagENDI_EVENTLOG_INFO
EVENT_STATUS	include/endiFrame.h	/^		BYTE		EVENT_STATUS[4];						\/\/ 이벤트 상태$/;"	m	struct:_tagENDI_EVENT_ENTRY
EVENT_TYPE	include/endiFrame.h	/^		BYTE		EVENT_TYPE;								\/\/ 이벤트 유형$/;"	m	struct:_tagENDI_EVENT_ENTRY
EVENT_TYPE_ACTIVE	include/common/_WinMultiThread.h	28;"	d
EVENT_TYPE_TERMINATE	include/common/_WinMultiThread.h	27;"	d
EVEN_PARITY	include/common/_UnixSerialServer.h	30;"	d
EVTCLASS_CRITICAL	include/typedef.h	73;"	d
EVTCLASS_INFO	include/typedef.h	77;"	d
EVTCLASS_MAJOR	include/typedef.h	74;"	d
EVTCLASS_MINOR	include/typedef.h	75;"	d
EVTCLASS_NORMAL	include/typedef.h	76;"	d
EVTCLASS_USER	include/typedef.h	78;"	d
EXT_EEPROM0_ADDRESS_END	include/endiDefine.h	312;"	d
EXT_EEPROM0_ADDRESS_START	include/endiDefine.h	311;"	d
EXT_EEPROM0_DEV_ADDRESS	include/endiDefine.h	305;"	d
EXT_EEPROM1_ADDRESS_END	include/endiDefine.h	314;"	d
EXT_EEPROM1_ADDRESS_START	include/endiDefine.h	313;"	d
EXT_EEPROM1_DEV_ADDRESS	include/endiDefine.h	306;"	d
EXT_EEPROM2_ADDRESS_END	include/endiDefine.h	316;"	d
EXT_EEPROM2_ADDRESS_START	include/endiDefine.h	315;"	d
EXT_EEPROM2_DEV_ADDRESS	include/endiDefine.h	307;"	d
EXT_EEPROM3_ADDRESS_END	include/endiDefine.h	318;"	d
EXT_EEPROM3_ADDRESS_START	include/endiDefine.h	317;"	d
EXT_EEPROM3_DEV_ADDRESS	include/endiDefine.h	308;"	d
EXT_EEPROM4_ADDRESS_END	include/endiDefine.h	320;"	d
EXT_EEPROM4_ADDRESS_START	include/endiDefine.h	319;"	d
EXT_EEPROM4_DEV_ADDRESS	include/endiDefine.h	309;"	d
EXT_PANID	include/endiFrame.h	/^		BYTE		EXT_PANID[8];							\/\/ Extended Pan ID$/;"	m	struct:_tagENDI_NETWORK_INFO
EXT_nRST	include/gpio/gpio.h	61;"	d
EnableFlowControl	src/DeviceClass.cpp	/^BOOL CDeviceClass::EnableFlowControl(COORDINATOR *codi, BOOL bEnable)$/;"	f	class:CDeviceClass
EnableFlowControl	src/SerialInterface.cpp	/^BOOL CSerialInterface::EnableFlowControl(COORDINATOR *codi, BOOL bEnable)$/;"	f	class:CSerialInterface
EndDeviceNotifyStackStatus	src/EndDevicePool.cpp	/^void CEndDevicePool::EndDeviceNotifyStackStatus(BYTE status)$/;"	f	class:CEndDevicePool
EndDeviceRecvCallback	src/EndDevicePool.cpp	/^BOOL CEndDevicePool::EndDeviceRecvCallback(COORDINATOR *codi, ENDI_DATA_FRAME *pFrame, int nLength, int nTLength, BYTE LQI, signed char RSSI)$/;"	f	class:CEndDevicePool
EndDeviceSendCallback	src/EndDevicePool.cpp	/^void CEndDevicePool::EndDeviceSendCallback(COORDINATOR *codi, ENDI_DATA_FRAME *pFrame, int nLength)$/;"	f	class:CEndDevicePool
EndDeviceTest	samples/enditest/enditest.cpp	/^void EndDeviceTest(HANDLE codi)$/;"	f
EndiBind	src/Coordinator.cpp	/^int	CCoordinator::EndiBind(COORDINATOR *codi, EUI64 *id, BYTE type, int nTimeout, BOOL bExtendedTimeout)$/;"	f	class:CCoordinator
EndiBypass	src/Coordinator.cpp	/^int CCoordinator::EndiBypass(COORDINATOR *codi, BYTE *payload, int nLength)$/;"	f	class:CCoordinator
EndiBypass	src/Coordinator.cpp	/^int CCoordinator::EndiBypass(ENDDEVICE *endi, BYTE *payload, int nLength, int nTimeout)$/;"	f	class:CCoordinator
EndiClose	src/Coordinator.cpp	/^int CCoordinator::EndiClose(ENDDEVICE *endi)$/;"	f	class:CCoordinator
EndiCommandRead	src/Coordinator.cpp	/^int CCoordinator::EndiCommandRead(ENDDEVICE *endi, BYTE cmd, BYTE *data, int nLength, BYTE *result, int *nSize, int nTimeout)$/;"	f	class:CCoordinator
EndiCommandWrite	src/Coordinator.cpp	/^int CCoordinator::EndiCommandWrite(ENDDEVICE *endi, BYTE cmd, BYTE *data, int nLength, BYTE *result, int *nSize, int nTimeout)$/;"	f	class:CCoordinator
EndiConnect	src/Coordinator.cpp	/^int CCoordinator::EndiConnect(ENDDEVICE *endi, WORD shortid, BYTE hops, WORD *path, int nTimeout, BOOL bExtenedTimeout, BOOL bDirect, BOOL bEndDevice)$/;"	f	class:CCoordinator
EndiDisconnect	src/Coordinator.cpp	/^int CCoordinator::EndiDisconnect(ENDDEVICE *endi)$/;"	f	class:CCoordinator
EndiGetDevice	src/Coordinator.cpp	/^HANDLE CCoordinator::EndiGetDevice(EUI64 *id)$/;"	f	class:CCoordinator
EndiGetOption	src/Coordinator.cpp	/^int CCoordinator::EndiGetOption(ENDDEVICE *endi, int nOption, int *nValue)$/;"	f	class:CCoordinator
EndiLeave	src/Coordinator.cpp	/^int CCoordinator::EndiLeave(ENDDEVICE *endi, BYTE joinTime, BYTE channel, WORD panid, int nTimeout)$/;"	f	class:CCoordinator
EndiLink	src/Coordinator.cpp	/^int	CCoordinator::EndiLink(COORDINATOR *codi, EUI64 *id, BYTE seq, BYTE type, int nTimeout)$/;"	f	class:CCoordinator
EndiOpen	src/Coordinator.cpp	/^int CCoordinator::EndiOpen(COORDINATOR *codi, ENDDEVICE **endi, EUI64 *id)$/;"	f	class:CCoordinator
EndiReadAmr	src/Coordinator.cpp	/^int CCoordinator::EndiReadAmr(ENDDEVICE *endi, BYTE *data, int *nLength, int nTimeout)$/;"	f	class:CCoordinator
EndiReadLongRom	src/Coordinator.cpp	/^int CCoordinator::EndiReadLongRom(ENDDEVICE *endi, UINT addr, int nLength, BYTE *data, int *nSize, int nTimeout)$/;"	f	class:CCoordinator
EndiReadRom	src/Coordinator.cpp	/^int CCoordinator::EndiReadRom(ENDDEVICE *endi, WORD addr, int nLength, BYTE *data, int *nSize, int nTimeout)$/;"	f	class:CCoordinator
EndiSend	src/Coordinator.cpp	/^int CCoordinator::EndiSend(ENDDEVICE *endi, BYTE rw, BYTE type, BYTE *payload, int nLength, int nTimeout)$/;"	f	class:CCoordinator
EndiSendRecv	src/Coordinator.cpp	/^int CCoordinator::EndiSendRecv(ENDDEVICE *endi, BYTE rw, BYTE type, BYTE *payload, int nLength, BYTE *data, int *datalen, int nTimeout)$/;"	f	class:CCoordinator
EndiSetOption	src/Coordinator.cpp	/^int CCoordinator::EndiSetOption(ENDDEVICE *endi, int nOption, int nValue)$/;"	f	class:CCoordinator
EndiWrite	src/Coordinator.cpp	/^int	CCoordinator::EndiWrite(COORDINATOR *codi, EUI64 *id, BYTE seq, BYTE type, BYTE *data, int nLength, int nTimeout)$/;"	f	class:CCoordinator
EndiWriteAmr	src/Coordinator.cpp	/^int CCoordinator::EndiWriteAmr(ENDDEVICE *endi, WORD mask, BYTE *data, int nLength, int nTimeout)$/;"	f	class:CCoordinator
EndiWriteCid	src/Coordinator.cpp	/^int CCoordinator::EndiWriteCid(ENDDEVICE *endi, BYTE *value,int valuelen,  BYTE *data, int *datalen, int nTimeout)$/;"	f	class:CCoordinator
EndiWriteLongRom	src/Coordinator.cpp	/^int CCoordinator::EndiWriteLongRom(COORDINATOR *codi, UINT addr, BYTE *data, int nLength)$/;"	f	class:CCoordinator
EndiWriteLongRom	src/Coordinator.cpp	/^int CCoordinator::EndiWriteLongRom(ENDDEVICE *endi, UINT addr, BYTE *data, int nLength, BYTE *replay, int *nSize, int nTimeout)$/;"	f	class:CCoordinator
EndiWriteMccb	src/Coordinator.cpp	/^int CCoordinator::EndiWriteMccb(ENDDEVICE *endi, BYTE value, BYTE *data, int nTimeout)$/;"	f	class:CCoordinator
EndiWriteRom	src/Coordinator.cpp	/^int CCoordinator::EndiWriteRom(COORDINATOR *codi, WORD addr, BYTE *data, int nLength)$/;"	f	class:CCoordinator
EndiWriteRom	src/Coordinator.cpp	/^int CCoordinator::EndiWriteRom(ENDDEVICE *endi, WORD addr, BYTE *data, int nLength, int nTimeout)$/;"	f	class:CCoordinator
ErrorMessage	src/Coordinator.cpp	/^const char *CCoordinator::ErrorMessage(int nError)$/;"	f	class:CCoordinator
Exit	src/Coordinator.cpp	/^int CCoordinator::Exit()$/;"	f	class:CCoordinator
FALSE	include/typedef.h	42;"	d
FIRMWARE_BUILD	include/endiFrame.h	/^		BYTE		FIRMWARE_BUILD;							\/\/$/;"	m	struct:_tagENDI_NODE_INFO
FIRMWARE_VERSION	include/endiFrame.h	/^		BYTE		FIRMWARE_VERSION;						\/\/$/;"	m	struct:_tagENDI_NODE_INFO
FIXED_RESET	include/endiFrame.h	/^		BYTE		FIXED_RESET;							\/\/ 0~23 : 하루에 주기적으로 리셋할 시각$/;"	m	struct:_tagENDI_AMR_INFO
FRAMEDATA	include/codiTypedef.h	/^}   FRAMEDATA;$/;"	t	typeref:struct:_tagFRAMEDATA
FREE	include/common/MemoryDebug.h	14;"	d
FREE	include/common/MemoryDebug.h	8;"	d
FW_IMAGE_BYTES	include/endiDefine.h	325;"	d
FW_IMAGE_CRC	include/endiDefine.h	326;"	d
FW_IMAGE_DATA	include/endiDefine.h	327;"	d
FW_IMAGE_STATUS	include/endiDefine.h	323;"	d
FW_REVISION_NUMBER	samples/ge/ansi.h	/^		BYTE	FW_REVISION_NUMBER;$/;"	m	struct:_tagANSI_TABLE1
FW_UPDATE_STATUS	include/endiDefine.h	324;"	d
FW_VERSION_NUMBER	samples/ge/ansi.h	/^		BYTE	FW_VERSION_NUMBER;$/;"	m	struct:_tagANSI_TABLE1
FindCoordinatorByHandle	src/CoordinatorServer.cpp	/^COORDINATOR *CCoordinatorServer::FindCoordinatorByHandle(COORDINATOR *pCoordinator)$/;"	f	class:CCoordinatorServer
FindCoordinatorByName	src/CoordinatorServer.cpp	/^COORDINATOR *CCoordinatorServer::FindCoordinatorByName(char *pszName)$/;"	f	class:CCoordinatorServer
FindEndDeviceByID	src/EndDevicePool.cpp	/^ENDDEVICE *CEndDevicePool::FindEndDeviceByID(EUI64 *id)$/;"	f	class:CEndDevicePool
FindOperation	samples/ge/Operation.h	27;"	d
FreeEndDevice	src/EndDevicePool.cpp	/^void CEndDevicePool::FreeEndDevice(ENDDEVICE *endi)$/;"	f	class:CEndDevicePool
FreeNode	include/common/LinkedList.h	/^inline void CLinkedList<TYPE>::FreeNode(int nNode)$/;"	f	class:CLinkedList
GETABLE	samples/ge/i210.cpp	/^}   __attribute__ ((packed)) GETABLE;$/;"	t	typeref:struct:_tagGETABLE	file:
GET_FRAME_FLOW	include/codiDefine.h	45;"	d
GET_FRAME_MODE	include/codiDefine.h	44;"	d
GEUI64	include/typedef.h	/^}   __ATTRIBUTE_PACKED__ GEUI64, *PGEUI64;$/;"	t	typeref:struct:_tagGEUI64
GE_IEC_I210	samples/ge/GeMeter.h	99;"	d
GE_IEC_KV2C	samples/ge/GeMeter.h	100;"	d
GE_MAIN	samples/ge/i210.cpp	/^int CI210Parser::GE_MAIN(CMDPARAM *pCommand, METER_STAT *pStat)$/;"	f	class:CI210Parser
GMTTIMESTAMP	include/typedef.h	/^} 	__ATTRIBUTE_PACKED__ GMTTIMESTAMP, *PGMTTIMESTAMP;$/;"	t	typeref:struct:_tagGMTTIMESTAMP
GMT_TIME	include/endiFrame.h	/^		GMTTIMESTAMP GMT_TIME;								\/\/ 이벤트 발생 시간$/;"	m	struct:_tagENDI_EVENT_ENTRY
GPIOERR_MASK	include/gpio/GPIOAPI.h	39;"	d
GPIOHIGH	include/gpio/gpio.h	57;"	d
GPIOINTENTRY	include/gpio/gpio.h	/^}    GPIOINTENTRY;$/;"	t	typeref:struct:_tagGPIOINTENTRY
GPIOLOW	include/gpio/gpio.h	58;"	d
GPIONOTIFY_BATTERY_CHARG	include/gpio/GPIOAPI.h	25;"	d
GPIONOTIFY_BATTERY_FAIL	include/gpio/GPIOAPI.h	28;"	d
GPIONOTIFY_BATT_ADC	include/gpio/GPIOAPI.h	36;"	d
GPIONOTIFY_COORDINATOR	include/gpio/GPIOAPI.h	34;"	d
GPIONOTIFY_DCD	include/gpio/GPIOAPI.h	26;"	d
GPIONOTIFY_DOOR	include/gpio/GPIOAPI.h	24;"	d
GPIONOTIFY_FLASH	include/gpio/GPIOAPI.h	30;"	d
GPIONOTIFY_HEATER	include/gpio/GPIOAPI.h	23;"	d
GPIONOTIFY_LOWBAT	include/gpio/GPIOAPI.h	22;"	d
GPIONOTIFY_MAIN_ADC	include/gpio/GPIOAPI.h	37;"	d
GPIONOTIFY_MEMORY	include/gpio/GPIOAPI.h	29;"	d
GPIONOTIFY_MOBILE	include/gpio/GPIOAPI.h	31;"	d
GPIONOTIFY_PWR	include/gpio/GPIOAPI.h	21;"	d
GPIONOTIFY_RING	include/gpio/GPIOAPI.h	27;"	d
GPIONOTIFY_RUNNING	include/gpio/GPIOAPI.h	32;"	d
GPIONOTIFY_TEMP	include/gpio/GPIOAPI.h	33;"	d
GPIOSET	include/gpio/gpio.h	56;"	d
GPIO_CTL_MASK	include/gpio/gpio.h	49;"	d
GPIO_DIR_IN	include/gpio/gpio.h	15;"	d
GPIO_DIR_IN	include/gpio/gpio.h	44;"	d
GPIO_DIR_OUT	include/gpio/gpio.h	45;"	d
GPIO_DIR_OUT_HIGH	include/gpio/gpio.h	17;"	d
GPIO_DIR_OUT_LOW	include/gpio/gpio.h	16;"	d
GPIO_HIGH	include/gpio/gpio.h	19;"	d
GPIO_HIGH	include/gpio/gpio.h	47;"	d
GPIO_IOCTL_DIR	include/gpio/gpio.h	40;"	d
GPIO_IOCTL_IN	include/gpio/gpio.h	41;"	d
GPIO_IOCTL_OUT	include/gpio/gpio.h	42;"	d
GPIO_LOW	include/gpio/gpio.h	18;"	d
GPIO_LOW	include/gpio/gpio.h	46;"	d
GPIO_MAJOR_DEF	include/gpio/gpio.h	26;"	d
GPIO_NAME	include/gpio/gpio.h	29;"	d
GPIO_NAME	include/gpio/gpio.h	31;"	d
GPIO_NAME	include/gpio/gpio.h	34;"	d
GPIO_NUM_MASK	include/gpio/gpio.h	50;"	d
GPIO_ON	include/gpio/gpio.h	20;"	d
GPIO_VERSION	include/gpio/gpio.h	37;"	d
GP_485_TX_EN_OUT	include/gpio/gpiomap.h	32;"	d
GP_BATT_CHG_EN_OUT	include/gpio/gpiomap.h	33;"	d
GP_BATT_CHG_EN_OUT	include/gpio/gpiomap.h	99;"	d
GP_BATT_CHG_STATUS_INPUT	include/gpio/gpiomap.h	16;"	d
GP_BATT_CHG_STATUS_INPUT	include/gpio/gpiomap.h	62;"	d
GP_BATT_SW_OUT	include/gpio/gpiomap.h	30;"	d
GP_BATT_SW_OUT	include/gpio/gpiomap.h	76;"	d
GP_BATT_SW_OUT	include/gpio/gpiomap.h	78;"	d
GP_CASE_OPEN_INPUT	include/gpio/gpiomap.h	14;"	d
GP_CODI_CTS_OUT	include/gpio/gpiomap.h	94;"	d
GP_CODI_PCTL_OUT	include/gpio/gpiomap.h	20;"	d
GP_CODI_PCTL_OUT	include/gpio/gpiomap.h	72;"	d
GP_CODI_RST_OUT	include/gpio/gpiomap.h	26;"	d
GP_CODI_RST_OUT	include/gpio/gpiomap.h	98;"	d
GP_CODI_RTS_INPUT	include/gpio/gpiomap.h	58;"	d
GP_CODI_RXD_OUT	include/gpio/gpiomap.h	93;"	d
GP_CODI_TXD_INPUT	include/gpio/gpiomap.h	57;"	d
GP_CONSOLE_RXD_OUT	include/gpio/gpiomap.h	95;"	d
GP_CONSOLE_TXD_INPUT	include/gpio/gpiomap.h	59;"	d
GP_DEBUG_LED1_OUT	include/gpio/gpiomap.h	34;"	d
GP_DEBUG_LED1_OUT	include/gpio/gpiomap.h	66;"	d
GP_DEBUG_LED2_OUT	include/gpio/gpiomap.h	35;"	d
GP_DEBUG_LED2_OUT	include/gpio/gpiomap.h	67;"	d
GP_DEBUG_LED3_OUT	include/gpio/gpiomap.h	25;"	d
GP_DEBUG_LED3_OUT	include/gpio/gpiomap.h	68;"	d
GP_DEBUG_LED4_OUT	include/gpio/gpiomap.h	69;"	d
GP_DOOR_OPEN_INPUT	include/gpio/gpiomap.h	44;"	d
GP_EXT_CTS_OUT	include/gpio/gpiomap.h	97;"	d
GP_EXT_RTS_INPUT	include/gpio/gpiomap.h	61;"	d
GP_GPS_RXD_OUT	include/gpio/gpiomap.h	96;"	d
GP_GPS_TXD_INPUT	include/gpio/gpiomap.h	60;"	d
GP_GSM_CTS_OUT	include/gpio/gpiomap.h	92;"	d
GP_GSM_DCD_INPUT	include/gpio/gpiomap.h	54;"	d
GP_GSM_DSR_INPUT	include/gpio/gpiomap.h	55;"	d
GP_GSM_DTR_OUT	include/gpio/gpiomap.h	91;"	d
GP_GSM_EMERGOFF_OUT	include/gpio/gpiomap.h	104;"	d
GP_GSM_IGT_OUT	include/gpio/gpiomap.h	89;"	d
GP_GSM_INIT_PCTL_OUT	include/gpio/gpiomap.h	31;"	d
GP_GSM_INT_INPUT	include/gpio/gpiomap.h	40;"	d
GP_GSM_PCTL_OUT	include/gpio/gpiomap.h	22;"	d
GP_GSM_PCTL_OUT	include/gpio/gpiomap.h	81;"	d
GP_GSM_RI_INPUT	include/gpio/gpiomap.h	56;"	d
GP_GSM_RST_OUT	include/gpio/gpiomap.h	27;"	d
GP_GSM_RTS_INPUT	include/gpio/gpiomap.h	53;"	d
GP_GSM_RXD_OUT	include/gpio/gpiomap.h	90;"	d
GP_GSM_SYNC_INPUT	include/gpio/gpiomap.h	12;"	d
GP_GSM_SYNC_INPUT	include/gpio/gpiomap.h	51;"	d
GP_GSM_TXD_INPUT	include/gpio/gpiomap.h	52;"	d
GP_INT_ETH_INPUT	include/gpio/gpiomap.h	46;"	d
GP_LED_READY_OUT	include/gpio/gpiomap.h	88;"	d
GP_LOW_BATT_INPUT	include/gpio/gpiomap.h	13;"	d
GP_LOW_BATT_INPUT	include/gpio/gpiomap.h	50;"	d
GP_NAND_ALE_OUT	include/gpio/gpiomap.h	103;"	d
GP_NAND_CE_OUT	include/gpio/gpiomap.h	101;"	d
GP_NAND_CLE_OUT	include/gpio/gpiomap.h	102;"	d
GP_NPLC_PCTL_OUT	include/gpio/gpiomap.h	21;"	d
GP_NPLC_RST_OUT	include/gpio/gpiomap.h	23;"	d
GP_PWR_FAIL_INPUT	include/gpio/gpiomap.h	15;"	d
GP_PWR_FAIL_INPUT	include/gpio/gpiomap.h	45;"	d
GP_RF_SIG_OUT	include/gpio/gpiomap.h	28;"	d
GP_SSP_EXTCLK_INPUT	include/gpio/gpiomap.h	49;"	d
GP_SSP_RXD_INPUT	include/gpio/gpiomap.h	48;"	d
GP_SSP_SCLK_OUT	include/gpio/gpiomap.h	85;"	d
GP_SSP_SFRM_OUT	include/gpio/gpiomap.h	86;"	d
GP_SSP_TXD_OUT	include/gpio/gpiomap.h	87;"	d
GP_STA_GREEN_OUT	include/gpio/gpiomap.h	19;"	d
GP_STA_GREEN_OUT	include/gpio/gpiomap.h	83;"	d
GP_STA_RED_OUT	include/gpio/gpiomap.h	82;"	d
GP_SW_RST_OUT	include/gpio/gpiomap.h	100;"	d
GP_SW_RST_OUT	include/gpio/gpiomap.h	24;"	d
GP_TEMP_OS_INPUT	include/gpio/gpiomap.h	43;"	d
GP_UART_INT0_INPUT	include/gpio/gpiomap.h	42;"	d
GP_UART_INT1_INPUT	include/gpio/gpiomap.h	47;"	d
GP_WDI_OUT	include/gpio/gpiomap.h	84;"	d
GP_ZB_INT_INPUT	include/gpio/gpiomap.h	41;"	d
GROUPCOMMANDINFO	include/typedef.h	/^}	__ATTRIBUTE_PACKED__ GROUPCOMMANDINFO, *PGROUPCOMMANDINFO;$/;"	t	typeref:struct:_tagGROUPCOMMANDINFO
GROUPINFO	include/typedef.h	/^}	__ATTRIBUTE_PACKED__ GROUPINFO, *PGROUPINFO;$/;"	t	typeref:struct:_tagGROUPINFO
GROUP_MEMBER_SIZE	include/typedef.h	100;"	d
GSM_TYPE_MC55	include/typedef.h	80;"	d
GeCheckDataFrame	samples/ge/i210.cpp	/^BYTE CI210Parser::GeCheckDataFrame(ONDEMANDPARAM *pOndemand, BYTE *pRcvFrame, WORD nLength)$/;"	f	class:CI210Parser
GeCksumCalc	samples/ge/i210.cpp	/^BYTE CI210Parser::GeCksumCalc(BYTE *buff, WORD len)$/;"	f	class:CI210Parser
GeCrcAdd	samples/ge/i210.cpp	/^void CI210Parser::GeCrcAdd(BYTE *buf, BYTE kind, WORD len)$/;"	f	class:CI210Parser
GeCrcCalc	samples/ge/i210.cpp	/^WORD CI210Parser::GeCrcCalc(BYTE *buff, BYTE kind, WORD len)$/;"	f	class:CI210Parser
GeCrcCheck	samples/ge/i210.cpp	/^BYTE CI210Parser::GeCrcCheck(BYTE *buf, WORD len)$/;"	f	class:CI210Parser
GeMakeFrameHeader	samples/ge/i210.cpp	/^void CI210Parser::GeMakeFrameHeader(ONDEMANDPARAM *pOndemand, BYTE kind, BYTE *msg)$/;"	f	class:CI210Parser
Get	include/common/LinkedList.h	/^inline POSITION CLinkedList<TYPE>::Get(TYPE destElement)$/;"	f	class:CLinkedList
Get	include/common/LinkedList.h	/^inline TYPE CLinkedList<TYPE>::Get()$/;"	f	class:CLinkedList
Get	include/common/LinkedList.h	/^inline TYPE CLinkedList<TYPE>::Get(POSITION pos)$/;"	f	class:CLinkedList
GetBlockCount	include/common/LinkedList.h	/^inline int CLinkedList<TYPE>::GetBlockCount()$/;"	f	class:CLinkedList
GetCommandError	src/CoordinatorFrame.cpp	/^int	CCoordinatorFrame::GetCommandError(BYTE code)$/;"	f	class:CCoordinatorFrame
GetCommandTypeName	src/CoordinatorMessage.cpp	/^const char *GetCommandTypeName(BYTE nType)$/;"	f
GetCoordinatorProperty	src/CoordinatorServer.cpp	/^int CCoordinatorServer::GetCoordinatorProperty(COORDINATOR *codi, BYTE nProperty, BYTE *payload, int *nLength, int nTimeout)$/;"	f	class:CCoordinatorServer
GetCount	include/common/LinkedList.h	/^inline int CLinkedList<TYPE>::GetCount()$/;"	f	class:CLinkedList
GetDataTypeName	src/CoordinatorMessage.cpp	/^const char *GetDataTypeName(BYTE nType)$/;"	f
GetDescription	samples/ge/MeterParser.cpp	/^char *CMeterParser::GetDescription()$/;"	f	class:CMeterParser
GetEndDeviceByID	src/CoordinatorServer.cpp	/^HANDLE CCoordinatorServer::GetEndDeviceByID(EUI64 *id)$/;"	f	class:CCoordinatorServer
GetEndDeviceByID	src/EndDevicePool.cpp	/^ENDDEVICE *CEndDevicePool::GetEndDeviceByID(EUI64 *id)$/;"	f	class:CEndDevicePool
GetEndDeviceSequence	src/CoordinatorFrame.cpp	/^BYTE CCoordinatorFrame::GetEndDeviceSequence(ENDDEVICE *endi)$/;"	f	class:CCoordinatorFrame
GetEndiInfo	samples/bypass/bypass.cpp	/^ENDI * GetEndiInfo(EUI64 * pId)$/;"	f
GetEndiInfo	samples/dump/dump.cpp	/^ENDI * GetEndiInfo(EUI64 * pId)$/;"	f
GetEndiInfo	samples/rfmonitor/rfmonitor.cpp	/^ENDI * GetEndiInfo(EUI64 * pId, BYTE LQI, signed char RSSI)$/;"	f
GetErrorTypeName	src/CoordinatorMessage.cpp	/^const char *GetErrorTypeName(BYTE nError)$/;"	f
GetFD	src/DeviceClass.cpp	/^int CDeviceClass::GetFD(COORDINATOR *codi)$/;"	f	class:CDeviceClass
GetFD	src/SerialInterface.cpp	/^int CSerialInterface::GetFD(COORDINATOR *codi)$/;"	f	class:CSerialInterface
GetFD	src/VirtualInterface.cpp	/^int CVirtualInterface::GetFD(COORDINATOR *codi)$/;"	f	class:CVirtualInterface
GetFirst	include/common/LinkedList.h	/^inline TYPE CLinkedList<TYPE>::GetFirst(POSITION& pos)$/;"	f	class:CLinkedList
GetHandle	src/Coordinator.cpp	/^HANDLE CCoordinator::GetHandle(COORDINATOR *codi)$/;"	f	class:CCoordinator
GetHead	include/common/LinkedList.h	/^inline TYPE CLinkedList<TYPE>::GetHead()$/;"	f	class:CLinkedList
GetHeadPosition	include/common/LinkedList.h	/^inline POSITION CLinkedList<TYPE>::GetHeadPosition()$/;"	f	class:CLinkedList
GetInformationTypeName	src/CoordinatorMessage.cpp	/^const char *GetInformationTypeName(BYTE nType)$/;"	f
GetLastCommunicationTime	src/Coordinator.cpp	/^cetime_t CCoordinator::GetLastCommunicationTime(COORDINATOR *codi)$/;"	f	class:CCoordinator
GetMessage	samples/ge/i210.cpp	/^void CI210Parser::GetMessage(ONDEMANDPARAM *pOndemand, CChunk *pChunk, char *pszFrame, WORD nLength, int nOption)$/;"	f	class:CI210Parser
GetName	samples/ge/MeterParser.cpp	/^char *CMeterParser::GetName()$/;"	f	class:CMeterParser
GetNext	include/common/LinkedList.h	/^inline TYPE CLinkedList<TYPE>::GetNext(POSITION& pos)$/;"	f	class:CLinkedList
GetNextData	src/EndDevicePool.cpp	/^FRAMEDATA*  CEndDevicePool::GetNextData(ENDDEVICE *pEndDevice)$/;"	f	class:CEndDevicePool
GetNextData	src/EndDevicePool.cpp	/^FRAMEDATA*  CEndDevicePool::GetNextData(EUI64 * id)$/;"	f	class:CEndDevicePool
GetOption	src/Coordinator.cpp	/^int CCoordinator::GetOption(COORDINATOR *codi, int *nOption)$/;"	f	class:CCoordinator
GetOptionCoordinator	src/CoordinatorServer.cpp	/^int CCoordinatorServer::GetOptionCoordinator(COORDINATOR *codi, int *nOption)$/;"	f	class:CCoordinatorServer
GetOptionEndDevice	src/CoordinatorServer.cpp	/^int CCoordinatorServer::GetOptionEndDevice(ENDDEVICE *endi, int nOption, int *nValue)$/;"	f	class:CCoordinatorServer
GetPacketName	samples/ge/i210.cpp	/^const char *CI210Parser::GetPacketName(int nType)$/;"	f	class:CI210Parser
GetPrev	include/common/LinkedList.h	/^inline TYPE CLinkedList<TYPE>::GetPrev(POSITION& pos)$/;"	f	class:CLinkedList
GetProperty	src/Coordinator.cpp	/^int CCoordinator::GetProperty(COORDINATOR *codi, BYTE nProperty, BYTE *payload, int *nLength, int nTimeout)$/;"	f	class:CCoordinator
GetSequence	src/CoordinatorFrame.cpp	/^BYTE CCoordinatorFrame::GetSequence()$/;"	f	class:CCoordinatorFrame
GetState	src/Coordinator.cpp	/^int CCoordinator::GetState(COORDINATOR *codi)$/;"	f	class:CCoordinator
GetStateMessage	samples/bypass/bypass.cpp	/^const char *GetStateMessage(int nState)$/;"	f
GetStateMessage	samples/dump/dump.cpp	/^const char *GetStateMessage(int nState)$/;"	f
GetStateMessage	samples/enditest/enditest.cpp	/^const char *GetStateMessage(int nState)$/;"	f
GetStateMessage	samples/init/init.cpp	/^const char *GetStateMessage(int nState)$/;"	f
GetStateMessage	samples/rfmonitor/rfmonitor.cpp	/^const char *GetStateMessage(int nState)$/;"	f
GetStateMessage	samples/update/update.cpp	/^const char *GetStateMessage(int nState)$/;"	f
GetTail	include/common/LinkedList.h	/^inline TYPE CLinkedList<TYPE>::GetTail()$/;"	f	class:CLinkedList
GetTailPosition	include/common/LinkedList.h	/^inline POSITION CLinkedList<TYPE>::GetTailPosition()$/;"	f	class:CLinkedList
GetType	samples/ge/MeterParser.cpp	/^int CMeterParser::GetType()$/;"	f	class:CMeterParser
GetVersion	src/Coordinator.cpp	/^int CCoordinator::GetVersion(BYTE *nMajor, BYTE *nMinor, BYTE *nRevision)$/;"	f	class:CCoordinator
GetWatchdogState	src/Coordinator.cpp	/^BOOL CCoordinator::GetWatchdogState(COORDINATOR *codi)$/;"	f	class:CCoordinator
GetWorkerCount	samples/ge/Operation.cpp	/^int	COperation::GetWorkerCount()$/;"	f	class:COperation
GrowBlockSize	include/common/LinkedList.h	/^inline void CLinkedList<TYPE>::GrowBlockSize()$/;"	f	class:CLinkedList
HANDLE	include/typedef.h	/^typedef void *							HANDLE;$/;"	t
HARDWARE_VERSION	include/endiFrame.h	/^		BYTE		HARDWARE_VERSION;						\/\/$/;"	m	struct:_tagENDI_NODE_INFO
HASHENTRY	include/common/Hash.h	/^}	HASHENTRY, *PHASHENTRY;$/;"	t	typeref:struct:_tagHASHENTRY
HW_REVISION_NUMBER	samples/ge/ansi.h	/^		BYTE	HW_REVISION_NUMBER;$/;"	m	struct:_tagANSI_TABLE1
HW_VERSION_NUMBER	samples/ge/ansi.h	/^		BYTE	HW_VERSION_NUMBER;$/;"	m	struct:_tagANSI_TABLE1
HostToBigInt	include/common/CommonUtil.h	36;"	d
HostToBigLong	include/common/CommonUtil.h	37;"	d
HostToBigShort	include/common/CommonUtil.h	35;"	d
HostToBigWord24	include/common/CommonUtil.h	38;"	d
HostToCondInt	include/common/CommonUtil.h	56;"	d
HostToCondLong	include/common/CommonUtil.h	57;"	d
HostToCondShort	include/common/CommonUtil.h	55;"	d
HostToCondWord24	include/common/CommonUtil.h	58;"	d
HostToLittleInt	include/common/CommonUtil.h	46;"	d
HostToLittleLong	include/common/CommonUtil.h	47;"	d
HostToLittleShort	include/common/CommonUtil.h	45;"	d
HostToLittleWord24	include/common/CommonUtil.h	48;"	d
INCLUDES	samples/aidon/Makefile	/^INCLUDES    =-I.$/;"	m
INCLUDES	samples/bypass/Makefile	/^INCLUDES    =-I.$/;"	m
INCLUDES	samples/dump/Makefile	/^INCLUDES    =-I.$/;"	m
INCLUDES	samples/enditest/Makefile	/^INCLUDES    =-I.$/;"	m
INCLUDES	samples/ge/Makefile	/^INCLUDES    =-I.$/;"	m
INCLUDES	samples/init/Makefile	/^INCLUDES    =-I.$/;"	m
INCLUDES	samples/rfmonitor/Makefile	/^INCLUDES    =-I.$/;"	m
INCLUDES	samples/update/Makefile	/^INCLUDES    =-I.$/;"	m
INCLUDES	src/Makefile	/^INCLUDES    =$(SYSINCPATH) -I. -I..\/include$/;"	m
INITIAL_POSITION	include/typedef.h	97;"	d
INT	include/typedef.h	/^typedef signed int					    INT;$/;"	t
INTERFACE_VERSION	include/endiFrame.h	/^		BYTE		INTERFACE_VERSION;						\/\/$/;"	m	struct:_tagENDI_NODE_INFO
INVALID_SOCKET	include/common/TCPSocket.h	27;"	d
IPADDR	include/typedef.h	/^} 	__ATTRIBUTE_PACKED__ IPADDR, *PIPADDR;$/;"	t	typeref:struct:_tagIPADDR
InitPool	src/EndDevicePool.cpp	/^void CEndDevicePool::InitPool()$/;"	f	class:CEndDevicePool
Initialize	src/Coordinator.cpp	/^int CCoordinator::Initialize()$/;"	f	class:CCoordinator
IsConnected	src/Coordinator.cpp	/^BOOL CCoordinator::IsConnected(ENDDEVICE *endi)$/;"	f	class:CCoordinator
IsError	src/Coordinator.cpp	/^BOOL CCoordinator::IsError(ENDDEVICE *endi)$/;"	f	class:CCoordinator
IsInitialized	src/Coordinator.cpp	/^BOOL CCoordinator::IsInitialized()$/;"	f	class:CCoordinator
IsPossibleSeq	src/EndDevicePool.cpp	/^BOOL CEndDevicePool::IsPossibleSeq(BYTE previous, BYTE current)$/;"	f	class:CEndDevicePool
IsSequenceMessage	src/CoordinatorUtility.cpp	/^BOOL IsSequenceMessage(BYTE type)$/;"	f
IsStarted	src/Coordinator.cpp	/^BOOL CCoordinator::IsStarted(COORDINATOR *codi)$/;"	f	class:CCoordinator
IsSuperParent	src/Coordinator.cpp	/^BOOL CCoordinator::IsSuperParent(COORDINATOR *codi)$/;"	f	class:CCoordinator
IsValidSeq	src/EndDevicePool.cpp	/^BOOL CEndDevicePool::IsValidSeq(BYTE previous, BYTE current)$/;"	f	class:CEndDevicePool
KEYTOSTR	src/CoordinatorUtility.cpp	/^int	KEYTOSTR(BYTE *key, char *pszString, int len)$/;"	f
KEY_TABLE_SIZE	include/codiFrame.h	/^        BYTE        KEY_TABLE_SIZE;                         \/\/ Issue #2490 : Key Table Size 추가$/;"	m	struct:_tagCODI_STACKMEMORY_PAYLOAD
LAST_BLOCK_ELEMENT	samples/ge/ansi.h	/^		WORD	LAST_BLOCK_ELEMENT;$/;"	m	struct:_tagANSI_TABLE63
LAST_BLOCK_SEQ_NBR	samples/ge/ansi.h	/^		UINT	LAST_BLOCK_SEQ_NBR;$/;"	m	struct:_tagANSI_TABLE63
LIB_NAME	src/Makefile	/^LIB_NAME    =libcodiapi$(CROSS_NAME).$(LIB_EXT)$/;"	m
LIB_PATH	samples/bypass/Makefile	/^LIB_PATH    =-L$(TOP)\/lib$/;"	m
LIB_PATH	samples/dump/Makefile	/^LIB_PATH    =-L$(TOP)\/lib$/;"	m
LIB_PATH	samples/enditest/Makefile	/^LIB_PATH    =-L$(TOP)\/lib$/;"	m
LIB_PATH	samples/ge/Makefile	/^LIB_PATH    =-L$(TOP)\/lib$/;"	m
LIB_PATH	samples/init/Makefile	/^LIB_PATH    =-L$(TOP)\/lib$/;"	m
LIB_PATH	samples/rfmonitor/Makefile	/^LIB_PATH    =-L$(TOP)\/lib$/;"	m
LIB_PATH	samples/update/Makefile	/^LIB_PATH    =-L$(TOP)\/lib$/;"	m
LINKNODE	include/common/LinkedList.h	/^}	LINKNODE, *PLINKNODE;$/;"	t	class:CLinkedList	typeref:struct:CLinkedList::_tagLINKNODE
LINKNODE	include/typedef.h	/^}	LINKNODE, *PLINKNODE;$/;"	t	typeref:struct:_tagLINKNODE
LINK_KEY	include/endiFrame.h	/^		BYTE		LINK_KEY[16];							\/\/ Link key$/;"	m	struct:_tagENDI_NETWORK_INFO
LONG	include/typedef.h	/^typedef long long				        LONG;$/;"	t
LPDATE	include/endiFrame.h	/^		TIMEDATE	LPDATE;									\/\/ LP 기록 날짜(년, 월, 일)$/;"	m	struct:_tagENDI_LP_ENTRY
LPPERIOD	include/endiFrame.h	/^		BYTE		LPPERIOD;								\/\/ LP 주기$/;"	m	struct:_tagENDI_LPLOG_INFO
LPPOINTER	include/endiFrame.h	/^		BYTE		LPPOINTER;								\/\/ LP 포인터$/;"	m	struct:_tagENDI_LPLOG_INFO
LPSTR	include/typedef.h	/^typedef char *					        LPSTR;$/;"	t
LP_CHOICE	include/endiFrame.h	/^		BYTE		LP_CHOICE;								\/\/ 배터리 노드의 LP 데이터의 일자를 선택하는 값$/;"	m	struct:_tagENDI_AMR_INFO
LP_DATA	include/endiFrame.h	/^		BYTE		LP_DATA[192];							\/\/ LP Data는 2byte$/;"	m	struct:_tagENDI_LP_ENTRY
LP_FLAGS	samples/ge/ansi.h	/^		WORD	LP_FLAGS;$/;"	m	struct:_tagANSI_TABLE61
LP_FORMATS	samples/ge/ansi.h	/^		BYTE	LP_FORMATS;$/;"	m	struct:_tagANSI_TABLE61
LP_MEMORY_LEN	samples/ge/ansi.h	/^		UINT	LP_MEMORY_LEN;$/;"	m	struct:_tagANSI_TABLE61
LP_SET_STATUS_FLAGS	samples/ge/ansi.h	/^		BYTE	LP_SET_STATUS_FLAGS;$/;"	m	struct:_tagANSI_TABLE63
LQI	include/codiFrame.h	/^		BYTE				LQI;							\/\/ LQI$/;"	m	struct:_tagCODI_RADIO_STATUS
LQI	include/codiTypedef.h	/^    BYTE                    LQI;$/;"	m	struct:_tagFRAMEDATA
LQI	include/endiFrame.h	/^		BYTE					LQI;						    \/\/ LQI$/;"	m	struct:_tagENDI_METERING_INFO
LQI	include/endiFrame.h	/^		BYTE					LQI;						    \/\/ LQI$/;"	m	struct:_tagENDI_STATE_PAYLOAD
LQI	samples/rfmonitor/rfmonitor.cpp	/^    BYTE        LQI;$/;"	m	struct:__anon5	file:
LeaveEndDevice	src/CoordinatorServer.cpp	/^int CCoordinatorServer::LeaveEndDevice(ENDDEVICE *endi, BYTE joinTime, BYTE channel, WORD panid, int nTimeout)$/;"	f	class:CCoordinatorServer
LinkCloseEndDevice	src/CoordinatorServer.cpp	/^int CCoordinatorServer::LinkCloseEndDevice(COORDINATOR *codi, EUI64 *id, BYTE seq, int nTimeout)$/;"	f	class:CCoordinatorServer
LinkCloseEndDevice	src/CoordinatorServer.cpp	/^int CCoordinatorServer::LinkCloseEndDevice(ENDDEVICE *endi, int nTimeout)$/;"	f	class:CCoordinatorServer
LinkEndDevice	src/CoordinatorServer.cpp	/^int	CCoordinatorServer::LinkEndDevice(COORDINATOR *codi, EUI64 *id, BYTE seq, BYTE type, int nTimeout)$/;"	f	class:CCoordinatorServer
LinkEndDevice	src/CoordinatorServer.cpp	/^int	CCoordinatorServer::LinkEndDevice(COORDINATOR *codi, EUI64 *id, BYTE seq, int nTimeout)$/;"	f	class:CCoordinatorServer
LockEndDevice	src/EndDevicePool.cpp	/^void CEndDevicePool::LockEndDevice(ENDDEVICE *pEndDevice)$/;"	f	class:CEndDevicePool
LockOperation	samples/ge/Operation.h	23;"	d
MAGIC_GPIO	include/gpio/gpio.h	39;"	d
MAKE	Makefile	/^MAKE 	= make$/;"	m
MAKE	samples/Makefile	/^MAKE 	= make$/;"	m
MALLOC	include/common/MemoryDebug.h	12;"	d
MALLOC	include/common/MemoryDebug.h	6;"	d
MANUAL_ENABLE	include/endiFrame.h	/^		BYTE		MANUAL_ENABLE;							\/\/ 0=자동 스캔으로 조인$/;"	m	struct:_tagENDI_NETWORK_INFO
MANUFACTURER	samples/ge/ansi.h	/^		BYTE	MANUFACTURER[4];$/;"	m	struct:_tagANSI_TABLE1
MAX	include/typedef.h	104;"	d
MAXIMUM_SIO_BUFFER	include/common/_WinSerialServer.h	27;"	d
MAX_CHILDREN	include/codiFrame.h	/^        BYTE        MAX_CHILDREN;                           \/\/ Ember Child Table Size$/;"	m	struct:_tagCODI_STACKMEMORY_PAYLOAD
MAX_GUID_STRING	include/typedef.h	51;"	d
MAX_HASH_KEY_SIZE	include/common/Hash.h	7;"	d
MAX_HOPS	include/codiFrame.h	/^		BYTE		MAX_HOPS;								\/\/$/;"	m	struct:_tagCODI_STACKMEMORY_PAYLOAD
MAX_INT_TIME_SET1	samples/ge/ansi.h	/^		BYTE	MAX_INT_TIME_SET1;$/;"	m	struct:_tagANSI_TABLE61
MAX_OPTION_BUFFER	include/common/Options.h	5;"	d
MAX_REPLY_MSEC	samples/ge/ansi.h	/^		UINT	MAX_REPLY_MSEC;$/;"	m	struct:_tagSTAT_TABLE
MAX_SESSION_WINDOW	include/typedef.h	52;"	d
MBUS1_ADDRESS	include/endiDefine.h	283;"	d
MBUS1_ENABLE	include/endiDefine.h	282;"	d
MBUS1_LPLOGDATA	include/endiDefine.h	286;"	d
MBUS1_LPPONTER	include/endiDefine.h	285;"	d
MBUS1_TYPE	include/endiDefine.h	284;"	d
MBUS2_ADDRESS	include/endiDefine.h	289;"	d
MBUS2_ENABLE	include/endiDefine.h	288;"	d
MBUS2_LPLOGDATA	include/endiDefine.h	292;"	d
MBUS2_LPPONTER	include/endiDefine.h	291;"	d
MBUS2_TYPE	include/endiDefine.h	290;"	d
MBUS3_ADDRESS	include/endiDefine.h	295;"	d
MBUS3_ENABLE	include/endiDefine.h	294;"	d
MBUS3_LPLOGDATA	include/endiDefine.h	298;"	d
MBUS3_LPPONTER	include/endiDefine.h	297;"	d
MBUS3_TYPE	include/endiDefine.h	296;"	d
MBUS_DATA_FRAME	include/endiFrame.h	/^}   __ATTRIBUTE_PACKED__ MBUS_DATA_FRAME;$/;"	t	typeref:struct:_tagMBUS_DATA_FRAME
MBUS_METERING_PAYLOAD	include/endiFrame.h	/^}   __ATTRIBUTE_PACKED__ MBUS_METERING_PAYLOAD;$/;"	t	typeref:struct:_tagMBUS_METERING_PAYLOAD
MBUS_TYPE0_LP_ADDRESS	include/endiDefine.h	354;"	d
MBUS_TYPE1_LP_ADDRESS	include/endiDefine.h	357;"	d
MD5_CTX	include/common/MD5.h	/^    } MD5_CTX;$/;"	t	class:CMD5	typeref:struct:CMD5::__anon2
MEMBERINFO	include/typedef.h	/^}	 MEMBERINFO, *PMEMBREINFO;$/;"	t	typeref:struct:_tagMEMBERINFO
METERBUF_SIZE	samples/ge/GeMeter.h	64;"	d
METERING_CYCLE_DAILY	include/typedef.h	69;"	d
METERING_CYCLE_DEFAULT	include/typedef.h	71;"	d
METERING_CYCLE_IMMEDIATELY	include/typedef.h	68;"	d
METERING_CYCLE_WEEKLY	include/typedef.h	70;"	d
METERING_DAY	include/endiFrame.h	/^		UINT		METERING_DAY;							\/\/ 검침 일자 MASK$/;"	m	struct:_tagENDI_AMR_INFO
METERING_HOUR	include/endiFrame.h	/^		BYTE		METERING_HOUR[12];						\/\/ 검침 시간 MASK$/;"	m	struct:_tagENDI_AMR_INFO
METERING_TYPE_BYPASS	samples/ge/MeterParser.h	10;"	d
METERING_TYPE_ROUTINE	samples/ge/MeterParser.h	8;"	d
METERING_TYPE_SPECIAL	samples/ge/MeterParser.h	9;"	d
METER_BUF	samples/ge/GeMeter.h	/^}__attribute__ ((packed)) METER_BUF;$/;"	t	typeref:struct:_meterbuf
METER_CONFIG	samples/ge/GeMeter.h	/^}__attribute__ ((packed)) METER_CONFIG;$/;"	t	typeref:struct:_meterconfig
METER_ID	samples/ge/ansi.h	/^		BYTE	METER_ID[20];$/;"	m	struct:_tagANSI_TABLE5
METER_LP_ADDRESS	include/endiDefine.h	348;"	d
METER_RETRY	samples/ge/GeMeter.h	63;"	d
METER_SERIAL_NUMBER	include/endiFrame.h	/^		char		METER_SERIAL_NUMBER[20];				\/\/ 메타 시리얼 번호$/;"	m	struct:_tagENDI_AMR_INFO
METER_STAT	include/typedef.h	/^}	METER_STAT;$/;"	t	typeref:struct:_tagMETER_STAT
METER_TYPE_AIDON	samples/ge/Operation.h	14;"	d
METER_TYPE_GE	samples/ge/Operation.h	15;"	d
MFG_SERIAL_NUMBER	samples/ge/ansi.h	/^		BYTE	MFG_SERIAL_NUMBER[16];$/;"	m	struct:_tagANSI_TABLE1
MIN	include/typedef.h	103;"	d
MIN_REPLY_MSEC	samples/ge/ansi.h	/^		UINT	MIN_REPLY_MSEC;$/;"	m	struct:_tagSTAT_TABLE
MOBILE_MODE_ALWAYS	include/typedef.h	66;"	d
MOBILE_MODE_CSD	include/typedef.h	64;"	d
MOBILE_MODE_PACKET	include/typedef.h	65;"	d
MOBILE_TYPE_CDMA	include/typedef.h	61;"	d
MOBILE_TYPE_GSM	include/typedef.h	60;"	d
MOBILE_TYPE_NONE	include/typedef.h	59;"	d
MOBILE_TYPE_PSTN	include/typedef.h	62;"	d
MOMENTARY_INTERVAL_PF	samples/ge/ansi.h	/^		BYTE	MOMENTARY_INTERVAL_PF;$/;"	m	struct:_tagANSI_TABLE113
MainProcedure	samples/aidon/aidon.cpp	/^void MainProcedure(HANDLE codi)$/;"	f
MainProcedure	samples/bypass/bypass.cpp	/^void MainProcedure(HANDLE codi, int nPermit, signed char nRfPower, int nPowerMode)$/;"	f
MainProcedure	samples/dump/dump.cpp	/^void MainProcedure(HANDLE codi, int nPermit, signed char nRfPower, int nPowerMode)$/;"	f
MainProcedure	samples/enditest/enditest.cpp	/^void MainProcedure(HANDLE codi)$/;"	f
MainProcedure	samples/ge/ge.cpp	/^void MainProcedure(HANDLE codi)$/;"	f
MainProcedure	samples/init/init.cpp	/^void MainProcedure(HANDLE codi)$/;"	f
MainProcedure	samples/rfmonitor/rfmonitor.cpp	/^void MainProcedure(HANDLE codi, int nPermit)$/;"	f
MainProcedure	samples/update/update.cpp	/^void MainProcedure(HANDLE codi)$/;"	f
MakeCommandFrame	src/CoordinatorFrame.cpp	/^int CCoordinatorFrame::MakeCommandFrame(CODI_COMMAND_FRAME *pFrame, BYTE flow, BYTE cmd, BYTE *payload, int nLength)$/;"	f	class:CCoordinatorFrame
MakeDataFrame	src/CoordinatorFrame.cpp	/^int CCoordinatorFrame::MakeDataFrame(ENDDEVICE *endi, ENDI_DATA_FRAME *pFrame, BYTE flow, BYTE type, BYTE *payload, int nLength)$/;"	f	class:CCoordinatorFrame
MakeDataFrameByID	src/CoordinatorFrame.cpp	/^int	CCoordinatorFrame::MakeDataFrameByID(EUI64 *id, ENDI_DATA_FRAME *pFrame, BYTE flow, BYTE seq, BYTE type, BYTE *payload, int nLength)$/;"	f	class:CCoordinatorFrame
MakeFrameHeader	src/CoordinatorFrame.cpp	/^void CCoordinatorFrame::MakeFrameHeader(CODI_HEADER *pHeader, BYTE seq, BYTE ctrl, BYTE type, BYTE len)$/;"	f	class:CCoordinatorFrame
MakeFrameTail	src/CoordinatorFrame.cpp	/^void CCoordinatorFrame::MakeFrameTail(BYTE *pFrame)$/;"	f	class:CCoordinatorFrame
MakeMulticastFrame	src/CoordinatorFrame.cpp	/^int CCoordinatorFrame::MakeMulticastFrame(ENDI_DATA_FRAME *pFrame, BYTE seq, BYTE type, BYTE *payload, int nLength)$/;"	f	class:CCoordinatorFrame
MtorSensor	samples/rfmonitor/rfmonitor.cpp	/^void MtorSensor(HANDLE codi) $/;"	f
Multicast	src/Coordinator.cpp	/^int CCoordinator::Multicast(COORDINATOR *codi, BYTE type, BYTE *payload, int nLength)$/;"	f	class:CCoordinator
MulticastToEndDevice	src/CoordinatorServer.cpp	/^int CCoordinatorServer::MulticastToEndDevice(COORDINATOR *codi, BYTE type, BYTE *payload, int nLength)$/;"	f	class:CCoordinatorServer
NAZC_NUMBER	include/endiFrame.h	/^		UINT		NAZC_NUMBER;							\/\/ NAZC 번호$/;"	m	struct:_tagENDI_AMR_INFO
NBR_BLKS_SET1	samples/ge/ansi.h	/^		WORD	NBR_BLKS_SET1;$/;"	m	struct:_tagANSI_TABLE61
NBR_BLK_INTS_SET1	samples/ge/ansi.h	/^		WORD	NBR_BLK_INTS_SET1;$/;"	m	struct:_tagANSI_TABLE61
NBR_CHNS_SET1	samples/ge/ansi.h	/^		BYTE	NBR_CHNS_SET1;$/;"	m	struct:_tagANSI_TABLE61
NBR_UNREAD_BLOCKS	samples/ge/ansi.h	/^		WORD	NBR_UNREAD_BLOCKS;$/;"	m	struct:_tagANSI_TABLE63
NBR_VALID_BLOCKS	samples/ge/ansi.h	/^		WORD	NBR_VALID_BLOCKS;$/;"	m	struct:_tagANSI_TABLE63
NBR_VALID_INT	samples/ge/ansi.h	/^		WORD	NBR_VALID_INT;$/;"	m	struct:_tagANSI_TABLE63
NEIGHBOR_TABLE_SIZE	include/codiFrame.h	/^		BYTE		NEIGHBOR_TABLE_SIZE;					\/\/$/;"	m	struct:_tagCODI_STACKMEMORY_PAYLOAD
NETWORK_KEY	include/endiFrame.h	/^		BYTE		NETWORK_KEY[16];						\/\/ Network key$/;"	m	struct:_tagENDI_NETWORK_INFO
NODE	include/typedef.h	/^}	NODE, *PNODE;$/;"	t	typeref:struct:_tagNODE
NODEITEM	include/typedef.h	/^}	NODEITEM, *PNODEITEM;$/;"	t	typeref:struct:_tagNODEITEM
NODETYPE_COORDINATOR	include/codiTypedef.h	16;"	d
NODETYPE_END_DEVICE	include/codiTypedef.h	18;"	d
NODETYPE_MOBILE_END_DEVICE	include/codiTypedef.h	20;"	d
NODETYPE_ROUTER	include/codiTypedef.h	17;"	d
NODETYPE_SLEEPY_END_DEVICE	include/codiTypedef.h	19;"	d
NODETYPE_UNKNOWN	include/codiTypedef.h	15;"	d
NODE_INVALID_LINK	include/common/LinkedList.h	21;"	d
NODE_KIND	include/endiFrame.h	/^		char		NODE_KIND[20];							\/\/ 해당 모델 이름(ASCII)$/;"	m	struct:_tagENDI_NODE_INFO
NONE_PARITY	include/common/_UnixSerialServer.h	29;"	d
NewEndDevice	src/EndDevicePool.cpp	/^int CEndDevicePool::NewEndDevice(COORDINATOR *codi, ENDDEVICE **endi, EUI64 *id)$/;"	f	class:CEndDevicePool
NewNode	include/common/LinkedList.h	/^inline int CLinkedList<TYPE>::NewNode(BOOL bAddTail)$/;"	f	class:CLinkedList
NewOperation	samples/ge/Operation.h	26;"	d
OBJECTS	samples/aidon/Makefile	/^OBJECTS = $(SOURCES:.cpp=.o)$/;"	m
OBJECTS	samples/bypass/Makefile	/^OBJECTS = $(SOURCES:.cpp=.o)$/;"	m
OBJECTS	samples/dump/Makefile	/^OBJECTS = $(SOURCES:.cpp=.o)$/;"	m
OBJECTS	samples/enditest/Makefile	/^OBJECTS = $(SOURCES:.cpp=.o)$/;"	m
OBJECTS	samples/ge/Makefile	/^OBJECTS = $(SOURCES:.cpp=.o)$/;"	m
OBJECTS	samples/init/Makefile	/^OBJECTS = $(SOURCES:.cpp=.o)$/;"	m
OBJECTS	samples/rfmonitor/Makefile	/^OBJECTS = $(SOURCES:.cpp=.o)$/;"	m
OBJECTS	samples/update/Makefile	/^OBJECTS = $(SOURCES:.cpp=.o)$/;"	m
OBJECTS	src/Makefile	/^OBJECTS =$(SOURCES:.cpp=.o)$/;"	m
ODD_PARITY	include/common/_UnixSerialServer.h	31;"	d
OFFSET	include/endiFrame.h	/^		BYTE		OFFSET;									\/\/ 바로 직전 전압 데이터 차$/;"	m	struct:_tagENDI_BATTERY_ENTRY
OID3	include/typedef.h	/^}	__ATTRIBUTE_PACKED__ OID3, *POID3;$/;"	t	typeref:struct:_tagOID3
ONDEMANDPARAM	samples/ge/Operation.h	/^}	ONDEMANDPARAM;$/;"	t	typeref:struct:_tagONDEMANDPARAM
ONDEMAND_ERROR_BUSY	samples/ge/Operation.h	19;"	d
ONDEMAND_ERROR_FAIL	samples/ge/Operation.h	18;"	d
ONDEMAND_ERROR_NOT_CONNECT	samples/ge/Operation.h	20;"	d
ONDEMAND_ERROR_OK	samples/ge/Operation.h	17;"	d
ONDEMAND_ERROR_PARAM	samples/ge/Operation.h	21;"	d
ONDEMAND_OPR_CHECK	samples/ge/Operation.h	12;"	d
ONDEMAND_OPR_DATA	samples/ge/Operation.h	11;"	d
ONDEMAND_OPR_READ	samples/ge/Operation.h	9;"	d
ONDEMAND_OPR_WRITE	samples/ge/Operation.h	10;"	d
OPTION_MAX	samples/ge/GeMeter.h	91;"	d
ORDER	include/typedef.h	/^} ORDER;$/;"	t	typeref:enum:__anon1
ORDER_ASC	include/typedef.h	/^    ORDER_ASC = 3$/;"	e	enum:__anon1
ORDER_DESC	include/typedef.h	/^    ORDER_DESC = 2, \/\/ $/;"	e	enum:__anon1
ORDER_LSB	include/typedef.h	/^    ORDER_LSB = 0,  \/\/ Little Endian$/;"	e	enum:__anon1
ORDER_MSB	include/typedef.h	/^    ORDER_MSB = 1,  \/\/ Big Endian$/;"	e	enum:__anon1
OTA_EM250	include/endiDefine.h	331;"	d
OTA_STR711	include/endiDefine.h	330;"	d
OnActiveThread	src/CoordinatorServer.cpp	/^BOOL CCoordinatorServer::OnActiveThread()$/;"	f	class:CCoordinatorServer
OnActiveThread	src/VirtualInterface.cpp	/^BOOL CVirtualInterface::OnActiveThread()$/;"	f	class:CVirtualInterface
OnCommand	samples/ge/MeterParser.cpp	/^int CMeterParser::OnCommand(CMDPARAM *pCommand, METER_STAT *pStat)$/;"	f	class:CMeterParser
OnCommand	samples/ge/i210.cpp	/^int CI210Parser::OnCommand(CMDPARAM *pCommand, METER_STAT *pStat)$/;"	f	class:CI210Parser
OnCommandFrame	src/CoordinatorServer.cpp	/^void CCoordinatorServer::OnCommandFrame(COORDINATOR *codi, CODI_COMMAND_FRAME *pFrame, int nLength)$/;"	f	class:CCoordinatorServer
OnCommandReadFrame	src/CoordinatorServer.cpp	/^void CCoordinatorServer::OnCommandReadFrame(COORDINATOR *codi, CODI_COMMAND_FRAME *pFrame, int nLength)$/;"	f	class:CCoordinatorServer
OnCommandReplyMessage	src/CoordinatorWaitReply.cpp	/^void CCoordinatorWaitReply::OnCommandReplyMessage(COORDINATOR *codi, CODI_COMMAND_FRAME *pFrame, int nLength)$/;"	f	class:CCoordinatorWaitReply
OnCommandWriteFrame	src/CoordinatorServer.cpp	/^void CCoordinatorServer::OnCommandWriteFrame(COORDINATOR *codi, CODI_COMMAND_FRAME *pFrame, int nLength)$/;"	f	class:CCoordinatorServer
OnData	samples/ge/MeterParser.cpp	/^void CMeterParser::OnData(ONDEMANDPARAM *pOndemand, char *pszData, BYTE nLength)$/;"	f	class:CMeterParser
OnData	samples/ge/Ondemander.cpp	/^void COndemander::OnData(EUI64 *id, char *pszData, BYTE nLength)$/;"	f	class:COndemander
OnData	samples/ge/i210.cpp	/^void CI210Parser::OnData(ONDEMANDPARAM *pOndemand, char *pszData, BYTE nLength)$/;"	f	class:CI210Parser
OnDataFrame	src/CoordinatorServer.cpp	/^void CCoordinatorServer::OnDataFrame(COORDINATOR *codi, ENDI_DATA_FRAME *pFrame, int nLength)$/;"	f	class:CCoordinatorServer
OnDataReplyMessage	src/CoordinatorWaitReply.cpp	/^void CCoordinatorWaitReply::OnDataReplyMessage(COORDINATOR *codi, ENDI_DATA_FRAME *pFrame)$/;"	f	class:CCoordinatorWaitReply
OnError	src/CoordinatorServer.cpp	/^void CCoordinatorServer::OnError(COORDINATOR *codi, int nError)$/;"	f	class:CCoordinatorServer
OnError	src/DeviceClass.cpp	/^void CDeviceClass::OnError(COORDINATOR *codi, int nError)$/;"	f	class:CDeviceClass
OnError	src/SerialInterface.cpp	/^void CSerialInterface::OnError(COORDINATOR *codi, int nError)$/;"	f	class:CSerialInterface
OnErrorSession	src/SerialInterface.cpp	/^void CSerialInterface::OnErrorSession(WORKSESSION *pSession, int nError)$/;"	f	class:CSerialInterface
OnInformationFrame	src/CoordinatorServer.cpp	/^void CCoordinatorServer::OnInformationFrame(COORDINATOR *codi, CODI_INFO_FRAME *pFrame, int nLength)$/;"	f	class:CCoordinatorServer
OnPrevSend	src/DeviceClass.cpp	/^void CDeviceClass::OnPrevSend(COORDINATOR *codi, BYTE *pBuffer, int nLength)$/;"	f	class:CDeviceClass
OnPrevSend	src/SerialInterface.cpp	/^void CSerialInterface::OnPrevSend(COORDINATOR *codi, BYTE *pBuffer, int nLength)$/;"	f	class:CSerialInterface
OnPrevSendFrame	src/CoordinatorServer.cpp	/^void CCoordinatorServer::OnPrevSendFrame(COORDINATOR *codi, BYTE *pBuffer, int nLength)$/;"	f	class:CCoordinatorServer
OnPrevSendSession	src/SerialInterface.cpp	/^void CSerialInterface::OnPrevSendSession(WORKSESSION *pSession, char* pszBuffer, int nLength)$/;"	f	class:CSerialInterface
OnReceiveCoordinator	src/CoordinatorDataStream.cpp	/^void CCoordinatorDataStream::OnReceiveCoordinator(COORDINATOR *codi, CODI_GENERAL_FRAME *pFrame, int nLength)$/;"	f	class:CCoordinatorDataStream
OnReceiveCoordinator	src/CoordinatorServer.cpp	/^void CCoordinatorServer::OnReceiveCoordinator(COORDINATOR *codi, CODI_GENERAL_FRAME *pFrame, int nLength)$/;"	f	class:CCoordinatorServer
OnReceiveFrame	src/CoordinatorServer.cpp	/^void CCoordinatorServer::OnReceiveFrame(COORDINATOR *codi, BYTE *pBuffer, int nLength)$/;"	f	class:CCoordinatorServer
OnReceiveSession	src/SerialInterface.cpp	/^BOOL CSerialInterface::OnReceiveSession(WORKSESSION *pSession, char* pszBuffer, int nLength)$/;"	f	class:CSerialInterface
OnRecv	src/DeviceClass.cpp	/^void CDeviceClass::OnRecv(COORDINATOR *codi, BYTE *pBuffer, int nLength)$/;"	f	class:CDeviceClass
OnRecv	src/SerialInterface.cpp	/^void CSerialInterface::OnRecv(COORDINATOR *codi, BYTE *pBuffer, int nLength)$/;"	f	class:CSerialInterface
OnRecv	src/VirtualInterface.cpp	/^void CVirtualInterface::OnRecv(COORDINATOR *codi, BYTE *pBuffer, int nLength)$/;"	f	class:CVirtualInterface
OnSend	src/DeviceClass.cpp	/^void CDeviceClass::OnSend(COORDINATOR *codi, BYTE *pBuffer, int nLength)$/;"	f	class:CDeviceClass
OnSend	src/SerialInterface.cpp	/^void CSerialInterface::OnSend(COORDINATOR *codi, BYTE *pBuffer, int nLength)$/;"	f	class:CSerialInterface
OnSend	src/VirtualInterface.cpp	/^void CVirtualInterface::OnSend(COORDINATOR *codi, BYTE *pBuffer, int nLength)$/;"	f	class:CVirtualInterface
OnSendFrame	src/CoordinatorServer.cpp	/^void CCoordinatorServer::OnSendFrame(COORDINATOR *codi, BYTE *pBuffer, int nLength)$/;"	f	class:CCoordinatorServer
OnSendSession	src/SerialInterface.cpp	/^void CSerialInterface::OnSendSession(WORKSESSION *pSession, char* pszBuffer, int nLength)$/;"	f	class:CSerialInterface
OnTimeoutThread	src/CoordinatorServer.cpp	/^BOOL CCoordinatorServer::OnTimeoutThread()$/;"	f	class:CCoordinatorServer
OnTimeoutThread	src/VirtualInterface.cpp	/^BOOL CVirtualInterface::OnTimeoutThread()$/;"	f	class:CVirtualInterface
OpenEndDevice	src/CoordinatorServer.cpp	/^int CCoordinatorServer::OpenEndDevice(COORDINATOR *codi, ENDDEVICE **endi, EUI64 *id)$/;"	f	class:CCoordinatorServer
PACKAGEINFO	include/typedef.h	/^}	PACKAGEINFO;$/;"	t	typeref:struct:_tagPACKAGEINFO
PACKET_BUFFER_COUNT	include/codiFrame.h	/^		BYTE		PACKET_BUFFER_COUNT;					\/\/$/;"	m	struct:_tagCODI_STACKMEMORY_PAYLOAD
PACKET_HEADER	samples/ge/GeMeter.h	/^}	__attribute__ ((packed)) PACKET_HEADER;$/;"	t	typeref:struct:_tagPACKET_HEADER
PACKET_TABLE	samples/ge/GeMeter.h	/^}	__attribute__ ((packed)) PACKET_TABLE;$/;"	t	typeref:struct:_tagPACKET_TABLE
PACKET_TABLE_HEADER	samples/ge/GeMeter.h	/^}	__attribute__ ((packed)) PACKET_TABLE_HEADER;$/;"	t	typeref:struct:_tagPACKET_TABLE_HEADER
PACKET_TAIL	samples/ge/GeMeter.h	/^}	__attribute__ ((packed)) PACKET_TAIL;$/;"	t	typeref:struct:_tagPACKET_TAIL
PANID	include/endiFrame.h	/^		WORD		PANID;									\/\/ 지그비 네트워크 PAN ID (manual 1 일때)$/;"	m	struct:_tagENDI_NETWORK_INFO
PARAM	samples/ge/ansi.h	/^		BYTE	PARAM[8];$/;"	m	struct:_tagANSI_TABLE7
PARSE_TYPE_READ	samples/ge/MeterParser.h	12;"	d
PARSE_TYPE_TIMESYNC	samples/ge/MeterParser.h	14;"	d
PARSE_TYPE_WRITE	samples/ge/MeterParser.h	13;"	d
PCHUNK	include/common/Chunk.h	/^}	CHUNK, *PCHUNK;$/;"	t	typeref:struct:_tagCHUNK
PDATASTREAM	include/typedef.h	/^}   DATASTREAM, *PDATASTREAM;$/;"	t	typeref:struct:_tagDATASTREAM
PDISTRIBUTECLI	include/typedef.h	/^}   DISTRIBUTECLI, *PDISTRIBUTECLI;$/;"	t	typeref:struct:_tagDISTRIBUTECLI
PDISTRIBUTEITEM	include/typedef.h	/^}   DISTRIBUTEITEM, *PDISTRIBUTEITEM;$/;"	t	typeref:struct:_tagDISTRIBUTEITEM
PEUI64	include/typedef.h	/^} 	__ATTRIBUTE_PACKED__ EUI64, *PEUI64;$/;"	t	typeref:struct:_tagEUI64
PEVENTHANDLE	include/common/Event.h	/^}   EVENTHANDLE, *PEVENTHANDLE;$/;"	t	typeref:struct:_tagEVENTHANDLE
PEVENTWRITEITEM	include/typedef.h	/^}	__ATTRIBUTE_PACKED__ EVENTWRITEITEM, *PEVENTWRITEITEM;$/;"	t	typeref:struct:_tagEVENTWRITEITEM
PFNENUMPROFILE	include/common/PrivateProfile.h	/^typedef void (*PFNENUMPROFILE)(PPOBJECT *pObject, void *pParam);$/;"	t
PFNGPIOCALLBACK	include/gpio/GPIOAPI.h	/^typedef void (*PFNGPIOCALLBACK)(int nNotify, int nState, void *pParam, void *pArgment);$/;"	t
PFNUSERHOOKER	include/gpio/GPIOAPI.h	/^typedef int (*PFNUSERHOOKER)(int nType, int nValue);$/;"	t
PGEUI64	include/typedef.h	/^}   __ATTRIBUTE_PACKED__ GEUI64, *PGEUI64;$/;"	t	typeref:struct:_tagGEUI64
PGMTTIMESTAMP	include/typedef.h	/^} 	__ATTRIBUTE_PACKED__ GMTTIMESTAMP, *PGMTTIMESTAMP;$/;"	t	typeref:struct:_tagGMTTIMESTAMP
PGROUPCOMMANDINFO	include/typedef.h	/^}	__ATTRIBUTE_PACKED__ GROUPCOMMANDINFO, *PGROUPCOMMANDINFO;$/;"	t	typeref:struct:_tagGROUPCOMMANDINFO
PGROUPINFO	include/typedef.h	/^}	__ATTRIBUTE_PACKED__ GROUPINFO, *PGROUPINFO;$/;"	t	typeref:struct:_tagGROUPINFO
PHASHENTRY	include/common/Hash.h	/^}	HASHENTRY, *PHASHENTRY;$/;"	t	typeref:struct:_tagHASHENTRY
PIPADDR	include/typedef.h	/^} 	__ATTRIBUTE_PACKED__ IPADDR, *PIPADDR;$/;"	t	typeref:struct:_tagIPADDR
PLINKNODE	include/common/LinkedList.h	/^}	LINKNODE, *PLINKNODE;$/;"	t	class:CLinkedList	typeref:struct:CLinkedList::_tagLINKNODE
PLINKNODE	include/typedef.h	/^}	LINKNODE, *PLINKNODE;$/;"	t	typeref:struct:_tagLINKNODE
PMEMBREINFO	include/typedef.h	/^}	 MEMBERINFO, *PMEMBREINFO;$/;"	t	typeref:struct:_tagMEMBERINFO
PNODE	include/typedef.h	/^}	NODE, *PNODE;$/;"	t	typeref:struct:_tagNODE
PNODEITEM	include/typedef.h	/^}	NODEITEM, *PNODEITEM;$/;"	t	typeref:struct:_tagNODEITEM
POID3	include/typedef.h	/^}	__ATTRIBUTE_PACKED__ OID3, *POID3;$/;"	t	typeref:struct:_tagOID3
POSITION	include/common/LinkedList.h	/^typedef int						POSITION;$/;"	t
POSITION	include/typedef.h	/^typedef int								POSITION;$/;"	t
PPOBJECT	include/common/PrivateProfile.h	/^}	PPOBJECT;$/;"	t	typeref:struct:_tagPPOBJECT
PRINT	samples/bypass/bypass.cpp	36;"	d	file:
PRINT	samples/dump/dump.cpp	36;"	d	file:
PRINT	samples/rfmonitor/rfmonitor.cpp	35;"	d	file:
PROTOCOL_VERSION	include/endiFrame.h	/^		BYTE		PROTOCOL_VERSION;						\/\/$/;"	m	struct:_tagENDI_NODE_INFO
PTCPDATASTREAM	include/typedef.h	/^}   TCPDATASTREAM, *PTCPDATASTREAM;$/;"	t	typeref:struct:_tagTCPDATASTREAM
PTHREADEVENTLIST	include/common/_WinMultiThread.h	/^}	THREADEVENTLIST, *PTHREADEVENTLIST;$/;"	t	typeref:struct:_THREADEVENTLIST
PTIMEDATE	include/typedef.h	/^} 	__ATTRIBUTE_PACKED__ TIMEDATE, *PTIMEDATE;$/;"	t	typeref:struct:_tagTIMEDATE
PTIMESTAMP	include/typedef.h	/^} 	__ATTRIBUTE_PACKED__ TIMESTAMP, *PTIMESTAMP;$/;"	t	typeref:struct:_tagTIMESTAMP
PTIMESTAMP5	include/typedef.h	/^} 	__ATTRIBUTE_PACKED__ TIMESTAMP5, *PTIMESTAMP5;$/;"	t	typeref:struct:_tagTIMESTAMP5
PTIMESTAMP6	include/typedef.h	/^} 	__ATTRIBUTE_PACKED__ TIMESTAMP6, *PTIMESTAMP6;$/;"	t	typeref:struct:_tagTIMESTAMP6
PTIMETICK	include/typedef.h	/^} 	TIMETICK, *PTIMETICK;$/;"	t	typeref:struct:_tagTIMETICK
PUSERINFO	include/typedef.h	/^}	USERINFO, *PUSERINFO;$/;"	t	typeref:struct:_tagUSERINFO
PUSH_EVENT	include/endiFrame.h	/^}   __ATTRIBUTE_PACKED__ PUSH_EVENT;$/;"	t	typeref:struct:_tagPUSH_EVENT
PUSH_METERING_TYPE_DATA	include/endiDefine.h	335;"	d
PUSH_METERING_TYPE_EVENT	include/endiDefine.h	336;"	d
PWORKSESSION	include/typedef.h	/^}   WORKSESSION, *PWORKSESSION;$/;"	t	typeref:struct:_tagWORKSESSION
PWRITEREQUEST	include/common/_WinSerialWriter.h	/^} WRITEREQUEST, *PWRITEREQUEST;$/;"	t	typeref:struct:_tagWRITEREQUEST
P_STAT_ERR_CODE	samples/ge/GeMeter.h	74;"	d
P_STAT_ERR_CRC	samples/ge/GeMeter.h	70;"	d
P_STAT_ERR_FRT	samples/ge/GeMeter.h	72;"	d
P_STAT_ERR_ID	samples/ge/GeMeter.h	71;"	d
P_STAT_ERR_LNT	samples/ge/GeMeter.h	73;"	d
P_STAT_NOANSWER	samples/ge/GeMeter.h	69;"	d
P_STAT_OK	samples/ge/GeMeter.h	67;"	d
PartialReadMessage	samples/ge/i210.cpp	/^void CI210Parser::PartialReadMessage(ONDEMANDPARAM *pOndemand, CChunk *pChunk, char *pszFrame, WORD nLength, int nOption)$/;"	f	class:CI210Parser
Playback	src/Coordinator.cpp	/^int CCoordinator::Playback(COORDINATOR *codi, BYTE *frame, int nLength)$/;"	f	class:CCoordinator
PlaybackCoordinator	src/CoordinatorServer.cpp	/^int	CCoordinatorServer::PlaybackCoordinator(COORDINATOR *codi, BYTE *frame, int nLength)$/;"	f	class:CCoordinatorServer
PowerControl	samples/aidon/aidon.cpp	/^void PowerControl(BOOL bOnOff)$/;"	f
PowerControl	samples/bypass/bypass.cpp	/^void PowerControl(BOOL bOnOff)$/;"	f
PowerControl	samples/dump/dump.cpp	/^void PowerControl(BOOL bOnOff)$/;"	f
PowerControl	samples/enditest/enditest.cpp	/^void PowerControl(BOOL bOnOff)$/;"	f
PowerControl	samples/ge/ge.cpp	/^void PowerControl(BOOL bOnOff)$/;"	f
PowerControl	samples/init/init.cpp	/^void PowerControl(BOOL bOnOff)$/;"	f
PowerControl	samples/rfmonitor/rfmonitor.cpp	/^void PowerControl(BOOL bOnOff)$/;"	f
PowerControl	samples/update/update.cpp	/^void PowerControl(BOOL bOnOff)$/;"	f
PreadTableSum	samples/ge/i210.cpp	/^WORD CI210Parser::PreadTableSum(ONDEMANDPARAM *pOndemand, char *pszFrame, BYTE nIndex, WORD nLength)$/;"	f	class:CI210Parser
PrintCommandFrameHeader	src/CoordinatorMessage.cpp	/^void PrintCommandFrameHeader(CODI_COMMAND_FRAME *pFrame, int nLength)$/;"	f
PrintDataFrameHeader	src/CoordinatorMessage.cpp	/^void PrintDataFrameHeader(ENDI_DATA_FRAME *pFrame, int nLength)$/;"	f
PrintInformationFrameHeader	src/CoordinatorMessage.cpp	/^void PrintInformationFrameHeader(CODI_INFO_FRAME *pFrame, int nLength)$/;"	f
Put	include/common/LinkedList.h	/^inline POSITION CLinkedList<TYPE>::Put(TYPE newElement)$/;"	f	class:CLinkedList
READ_IDENT_ONLY	samples/ge/GeMeter.h	90;"	d
READ_OPTION_CURRENT	samples/ge/GeMeter.h	80;"	d
READ_OPTION_EVENTLOG	samples/ge/GeMeter.h	89;"	d
READ_OPTION_FULL	samples/ge/GeMeter.h	79;"	d
READ_OPTION_PREVIOUS	samples/ge/GeMeter.h	81;"	d
READ_OPTION_RELAY	samples/ge/GeMeter.h	82;"	d
READ_OPTION_TEST	samples/ge/GeMeter.h	88;"	d
REALLOC	include/common/MemoryDebug.h	13;"	d
REALLOC	include/common/MemoryDebug.h	7;"	d
RECV_PKT_COUNT	samples/ge/ansi.h	/^		UINT	RECV_PKT_COUNT;$/;"	m	struct:_tagSTAT_TABLE
RELAY_ACTIVATION_OFF	samples/ge/GeMeter.h	93;"	d
RELAY_ACTIVATION_ON	samples/ge/GeMeter.h	94;"	d
RELAY_SWITCH_OFF	samples/ge/GeMeter.h	96;"	d
RELAY_SWITCH_ON	samples/ge/GeMeter.h	95;"	d
REPEATING_DAY	include/endiFrame.h	/^		UINT		REPEATING_DAY;							\/\/$/;"	m	struct:_tagENDI_AMR_INFO
REPEATING_HOUR	include/endiFrame.h	/^		BYTE		REPEATING_HOUR[12];						\/\/$/;"	m	struct:_tagENDI_AMR_INFO
REPEATING_SETUP_SEC	include/endiFrame.h	/^		WORD		REPEATING_SETUP_SEC;					\/\/ 					$/;"	m	struct:_tagENDI_AMR_INFO
RESERVED0	include/endiFrame.h	/^		BYTE		RESERVED0[10];							\/\/$/;"	m	struct:_tagENDI_NODE_INFO
RESET_COUNT	include/endiFrame.h	/^		WORD		RESET_COUNT;							\/\/ 리셋 카운터$/;"	m	struct:_tagENDI_NODE_INFO
RESET_REASON	include/endiFrame.h	/^		BYTE		RESET_REASON;							\/\/ 마지막 리셋 코드$/;"	m	struct:_tagENDI_NODE_INFO
RESP_DATA_RCD	samples/ge/ansi.h	/^		BYTE	RESP_DATA_RCD[8];$/;"	m	struct:_tagANSI_TABLE8
RESULT_CODE	samples/ge/ansi.h	/^		BYTE	RESULT_CODE;$/;"	m	struct:_tagANSI_TABLE8
RMS_VOLTAGE_PHA	samples/ge/ansi.h	/^		WORD	RMS_VOLTAGE_PHA;$/;"	m	struct:_tagANSI_TABLE113
RMS_VOLTAGE_PHC	samples/ge/ansi.h	/^		WORD	RMS_VOLTAGE_PHC;$/;"	m	struct:_tagANSI_TABLE113
ROM_READONLY	include/endiDefine.h	189;"	d
ROM_REWRITE	include/endiDefine.h	190;"	d
ROUTE_TABLE_SIZE	include/codiFrame.h	/^		BYTE		ROUTE_TABLE_SIZE;						\/\/$/;"	m	struct:_tagCODI_STACKMEMORY_PAYLOAD
RSSI	include/codiFrame.h	/^		signed char			RSSI;							\/\/ RSSI (sign)$/;"	m	struct:_tagCODI_RADIO_STATUS
RSSI	include/codiTypedef.h	/^    signed char             RSSI;$/;"	m	struct:_tagFRAMEDATA
RSSI	include/endiFrame.h	/^		signed char				RSSI;						    \/\/ RSSI$/;"	m	struct:_tagENDI_METERING_INFO
RSSI	include/endiFrame.h	/^		signed char				RSSI;						    \/\/ RSSI$/;"	m	struct:_tagENDI_STATE_PAYLOAD
RSSI	samples/rfmonitor/rfmonitor.cpp	/^    signed char RSSI;$/;"	m	struct:__anon5	file:
RST_AUTORESET	include/typedef.h	92;"	d
RST_COMMAND	include/typedef.h	90;"	d
RST_LOWBATT	include/typedef.h	94;"	d
RST_SYSMONITOR	include/typedef.h	93;"	d
RST_UNKNOWN	include/typedef.h	89;"	d
RST_UPFIRM	include/typedef.h	91;"	d
RST_WATCHDOG	include/typedef.h	95;"	d
RUN_STR711	include/endiDefine.h	332;"	d
ReadAmrEndDevice	src/CoordinatorServer.cpp	/^int CCoordinatorServer::ReadAmrEndDevice(ENDDEVICE *endi, BYTE *data, int *nLength, int nTimeout)$/;"	f	class:CCoordinatorServer
ReadLongRomEndDevice	src/CoordinatorServer.cpp	/^int CCoordinatorServer::ReadLongRomEndDevice(ENDDEVICE *endi, UINT addr, int nLength, BYTE *data, int *nSize, int nTimeout)$/;"	f	class:CCoordinatorServer
ReadRomEndDevice	src/CoordinatorServer.cpp	/^int CCoordinatorServer::ReadRomEndDevice(ENDDEVICE *endi, WORD addr, int nLength, BYTE *data, int *nSize, int nTimeout)$/;"	f	class:CCoordinatorServer
ReceiveStreamWorker	src/CoordinatorServer.cpp	/^void CCoordinatorServer::ReceiveStreamWorker(COORDINATOR *codi, CODI_GENERAL_FRAME *pFrame, int nLength)$/;"	f	class:CCoordinatorServer
Register	src/Coordinator.cpp	/^int CCoordinator::Register(COORDINATOR **codi, CODIDEVICE *pDevice)$/;"	f	class:CCoordinator
RegisterCoordinator	src/CoordinatorServer.cpp	/^int CCoordinatorServer::RegisterCoordinator(COORDINATOR **pReturn, CODIDEVICE *pDevice)$/;"	f	class:CCoordinatorServer
RelayStatusTable	samples/ge/i210.cpp	/^void CI210Parser::RelayStatusTable(ONDEMANDPARAM *pOndemand, CChunk *pChunk, char *pszFrame, WORD nLength, int nOption)$/;"	f	class:CI210Parser
RemoveAll	include/common/LinkedList.h	/^inline void CLinkedList<TYPE>::RemoveAll()$/;"	f	class:CLinkedList
RemoveAt	include/common/LinkedList.h	/^inline void CLinkedList<TYPE>::RemoveAt(POSITION pos)$/;"	f	class:CLinkedList
RemoveAt	include/common/LinkedList.h	/^inline void CLinkedList<TYPE>::RemoveAt(TYPE destElement)$/;"	f	class:CLinkedList
RemoveCoordinator	src/CoordinatorServer.cpp	/^BOOL CCoordinatorServer::RemoveCoordinator(COORDINATOR *codi)$/;"	f	class:CCoordinatorServer
ReportError	samples/aidon/aidon.cpp	/^void ReportError(const char *pszName, int nError)$/;"	f
ReportError	samples/bypass/bypass.cpp	/^void ReportError(char *pszName, int nError)$/;"	f
ReportError	samples/dump/dump.cpp	/^void ReportError(char *pszName, int nError)$/;"	f
ReportError	samples/enditest/enditest.cpp	/^void ReportError(const char *pszName, int nError)$/;"	f
ReportError	samples/ge/ge.cpp	/^void ReportError(char *pszName, int nError)$/;"	f
ReportError	samples/init/init.cpp	/^void ReportError(char *pszName, int nError)$/;"	f
ReportError	samples/rfmonitor/rfmonitor.cpp	/^void ReportError(char *pszName, int nError)$/;"	f
ReportError	samples/update/update.cpp	/^void ReportError(char *pszName, int nError)$/;"	f
Reset	src/Coordinator.cpp	/^int CCoordinator::Reset(COORDINATOR *codi)$/;"	f	class:CCoordinator
ResetConnection	src/EndDevicePool.cpp	/^void CEndDevicePool::ResetConnection()$/;"	f	class:CEndDevicePool
ResetCoordinator	src/CoordinatorServer.cpp	/^int CCoordinatorServer::ResetCoordinator(COORDINATOR *codi)$/;"	f	class:CCoordinatorServer
ResetPool	src/EndDevicePool.cpp	/^void CEndDevicePool::ResetPool()$/;"	f	class:CEndDevicePool
SECURITY_ENABLE	include/endiFrame.h	/^		BYTE		SECURITY_ENABLE;						\/\/ 0=AES-128 Key disable$/;"	m	struct:_tagENDI_NETWORK_INFO
SEND_PKT_COUNT	samples/ge/ansi.h	/^		UINT	SEND_PKT_COUNT;$/;"	m	struct:_tagSTAT_TABLE
SENSOR_CONNECT_MSEC	samples/ge/ansi.h	/^		UINT	SENSOR_CONNECT_MSEC;$/;"	m	struct:_tagSTAT_TABLE
SEQ_NBR	samples/ge/ansi.h	/^		BYTE	SEQ_NBR;$/;"	m	struct:_tagANSI_TABLE8
SEQ_NUM	samples/ge/ansi.h	/^		BYTE	SEQ_NUM;$/;"	m	struct:_tagANSI_TABLE7
SESSION_STACK_SIZE	include/common/TCPSocket.h	32;"	d
SHARED_LIB_PATH	src/Makefile	/^SHARED_LIB_PATH    =$(TOP)\/bin\/lib$/;"	m
SIODATASTREAM	include/typedef.h	/^typedef TCPDATASTREAM	SIODATASTREAM;$/;"	t
SOCKET	include/common/TCPSocket.h	/^typedef int								SOCKET;$/;"	t
SOFTWARE_VERSION	include/codiFrame.h	/^		WORD        SOFTWARE_VERSION;                       \/\/ Issue #2079 : Ember Software Version 정보 추가$/;"	m	struct:_tagCODI_STACKMEMORY_PAYLOAD
SOFTWARE_VERSION	include/endiFrame.h	/^		BYTE		SOFTWARE_VERSION;						\/\/ Version 1.0 => 0x10$/;"	m	struct:_tagENDI_NODE_INFO
SOLAR_AD_VOLT	include/endiFrame.h	/^        WORD        SOLAR_AD_VOLT;                          \/\/ Solar Cell의 메인 전원 전압 (수집값의 2배를 해줘야 한다)$/;"	m	struct:_tagENDI_NODE_INFO
SOLAR_AD_VOLT	include/endiFrame.h	/^        WORD        SOLAR_AD_VOLT;                          \/\/ Solar Cell의 메인 전원 전압 (수집값의 2배를 해줘야 한다)$/;"	m	struct:_tagENDI_SOLARVOLT_ENTRY
SOLAR_B_DC_VOLT	include/endiFrame.h	/^        WORD        SOLAR_B_DC_VOLT;                        \/\/ Solar 리피터로 들어오는 보드 VCC$/;"	m	struct:_tagENDI_NODE_INFO
SOLAR_B_DC_VOLT	include/endiFrame.h	/^        WORD        SOLAR_B_DC_VOLT;                        \/\/ Solar 리피터로 들어오는 보드 VCC$/;"	m	struct:_tagENDI_SOLARVOLT_ENTRY
SOLAR_CHG_BATT_VOLT	include/endiFrame.h	/^        WORD        SOLAR_CHG_BATT_VOLT;                    \/\/ Solar Cell의 충전용 배터리 전압$/;"	m	struct:_tagENDI_NODE_INFO
SOLAR_CHG_BATT_VOLT	include/endiFrame.h	/^        WORD        SOLAR_CHG_BATT_VOLT;                    \/\/ Solar Cell의 충전용 배터리 전압$/;"	m	struct:_tagENDI_SOLARVOLT_ENTRY
SOLAR_DATE	include/endiFrame.h	/^		TIMEDATE	         SOLAR_DATE;					\/\/ LOG 기록 날짜(년, 월, 일)$/;"	m	struct:_tagENDI_SOLARLOG_ENTRY
SOLAR_LOG_ADDRESS	include/endiDefine.h	351;"	d
SOLAR_POINTER	include/endiFrame.h	/^		BYTE		SOLAR_POINTER;							\/\/ Solar LOG 포인터$/;"	m	struct:_tagENDI_SOLARLOG_INFO
SOLAR_VOLT	include/endiFrame.h	/^        ENDI_SOLARVOLT_ENTRY SOLAR_VOLT[24 * 4];            \/\/ 전원 LOG 정보$/;"	m	struct:_tagENDI_SOLARLOG_ENTRY
SOURCES	samples/aidon/Makefile	/^SOURCES = aidon.cpp$/;"	m
SOURCES	samples/bypass/Makefile	/^SOURCES = $(wildcard *.cpp)$/;"	m
SOURCES	samples/dump/Makefile	/^SOURCES = $(wildcard *.cpp)$/;"	m
SOURCES	samples/enditest/Makefile	/^SOURCES = enditest.cpp$/;"	m
SOURCES	samples/ge/Makefile	/^SOURCES = ge.cpp	\\$/;"	m
SOURCES	samples/init/Makefile	/^SOURCES = init.cpp$/;"	m
SOURCES	samples/rfmonitor/Makefile	/^SOURCES = $(wildcard *.cpp)$/;"	m
SOURCES	samples/update/Makefile	/^SOURCES = update.cpp$/;"	m
SOURCES	src/Makefile	/^SOURCES = codiapi.cpp \\$/;"	m
SOURCE_ROUTE_TABLE_SIZE	include/codiFrame.h	/^        BYTE        SOURCE_ROUTE_TABLE_SIZE;                \/\/ Source Routing Table size$/;"	m	struct:_tagCODI_STACKMEMORY_PAYLOAD
SQLiteVersion	include/common/CppSQLite3.h	/^    static const char* SQLiteVersion() { return SQLITE_VERSION; }$/;"	f	class:CppSQLite3DB
STATE_AIDON	samples/aidon/aidon.cpp	153;"	d	file:
STATE_AIDON	samples/ge/ge.cpp	153;"	d	file:
STATE_AIDON_REPLY	samples/aidon/aidon.cpp	157;"	d	file:
STATE_AIDON_REPLY	samples/ge/ge.cpp	157;"	d	file:
STATE_AIDON_SEND	samples/aidon/aidon.cpp	156;"	d	file:
STATE_AIDON_SEND	samples/ge/ge.cpp	156;"	d	file:
STATE_BINDING_TABLE	samples/enditest/enditest.cpp	58;"	d	file:
STATE_BINDING_TABLE	samples/init/init.cpp	58;"	d	file:
STATE_BINDING_TABLE	samples/update/update.cpp	58;"	d	file:
STATE_BP_CR	samples/bypass/bypass.cpp	633;"	d	file:
STATE_BP_CR	samples/dump/dump.cpp	633;"	d	file:
STATE_BP_DONE	samples/bypass/bypass.cpp	635;"	d	file:
STATE_BP_DONE	samples/dump/dump.cpp	635;"	d	file:
STATE_BP_HEADER	samples/bypass/bypass.cpp	632;"	d	file:
STATE_BP_HEADER	samples/dump/dump.cpp	632;"	d	file:
STATE_BP_IDENT	samples/bypass/bypass.cpp	631;"	d	file:
STATE_BP_IDENT	samples/dump/dump.cpp	631;"	d	file:
STATE_BP_LF	samples/bypass/bypass.cpp	634;"	d	file:
STATE_BP_LF	samples/dump/dump.cpp	634;"	d	file:
STATE_CLOSE	samples/aidon/aidon.cpp	159;"	d	file:
STATE_CLOSE	samples/ge/ge.cpp	159;"	d	file:
STATE_CONNECT	samples/aidon/aidon.cpp	155;"	d	file:
STATE_CONNECT	samples/ge/ge.cpp	155;"	d	file:
STATE_DATA	src/CoordinatorDataStream.cpp	34;"	d	file:
STATE_DISCONNECT	samples/aidon/aidon.cpp	158;"	d	file:
STATE_DISCONNECT	samples/ge/ge.cpp	158;"	d	file:
STATE_DONE	samples/ge/i210.cpp	38;"	d	file:
STATE_DONE	samples/update/update.cpp	67;"	d	file:
STATE_DONE	src/CoordinatorDataStream.cpp	36;"	d	file:
STATE_DOWNLOAD	samples/update/update.cpp	65;"	d	file:
STATE_ERROR	src/CoordinatorDataStream.cpp	35;"	d	file:
STATE_GE	samples/ge/ge.cpp	160;"	d	file:
STATE_HEADER	src/CoordinatorDataStream.cpp	33;"	d	file:
STATE_INIT	samples/aidon/aidon.cpp	144;"	d	file:
STATE_INIT	samples/bypass/bypass.cpp	250;"	d	file:
STATE_INIT	samples/dump/dump.cpp	250;"	d	file:
STATE_INIT	samples/enditest/enditest.cpp	52;"	d	file:
STATE_INIT	samples/ge/ge.cpp	144;"	d	file:
STATE_INIT	samples/init/init.cpp	52;"	d	file:
STATE_INIT	samples/rfmonitor/rfmonitor.cpp	290;"	d	file:
STATE_INIT	samples/update/update.cpp	52;"	d	file:
STATE_METERING	samples/aidon/aidon.cpp	152;"	d	file:
STATE_METERING	samples/ge/ge.cpp	152;"	d	file:
STATE_METERING_ERROR	samples/aidon/aidon.cpp	160;"	d	file:
STATE_METERING_ERROR	samples/ge/ge.cpp	161;"	d	file:
STATE_MODULE_PARAM	samples/aidon/aidon.cpp	146;"	d	file:
STATE_MODULE_PARAM	samples/enditest/enditest.cpp	54;"	d	file:
STATE_MODULE_PARAM	samples/ge/ge.cpp	146;"	d	file:
STATE_MODULE_PARAM	samples/init/init.cpp	54;"	d	file:
STATE_MODULE_PARAM	samples/update/update.cpp	54;"	d	file:
STATE_MTOR	samples/rfmonitor/rfmonitor.cpp	297;"	d	file:
STATE_NEIGHBOR_TABLE	samples/enditest/enditest.cpp	59;"	d	file:
STATE_NEIGHBOR_TABLE	samples/init/init.cpp	59;"	d	file:
STATE_NEIGHBOR_TABLE	samples/update/update.cpp	59;"	d	file:
STATE_NETWORK_PARAM	samples/aidon/aidon.cpp	148;"	d	file:
STATE_NETWORK_PARAM	samples/enditest/enditest.cpp	56;"	d	file:
STATE_NETWORK_PARAM	samples/ge/ge.cpp	148;"	d	file:
STATE_NETWORK_PARAM	samples/init/init.cpp	56;"	d	file:
STATE_NETWORK_PARAM	samples/update/update.cpp	56;"	d	file:
STATE_OK	samples/ge/i210.cpp	37;"	d	file:
STATE_OPEN	samples/aidon/aidon.cpp	154;"	d	file:
STATE_OPEN	samples/ge/ge.cpp	154;"	d	file:
STATE_OPEN	samples/ge/i210.cpp	32;"	d	file:
STATE_PERMIT	samples/aidon/aidon.cpp	151;"	d	file:
STATE_PERMIT	samples/bypass/bypass.cpp	252;"	d	file:
STATE_PERMIT	samples/dump/dump.cpp	252;"	d	file:
STATE_PERMIT	samples/enditest/enditest.cpp	61;"	d	file:
STATE_PERMIT	samples/ge/ge.cpp	151;"	d	file:
STATE_PERMIT	samples/init/init.cpp	61;"	d	file:
STATE_PERMIT	samples/rfmonitor/rfmonitor.cpp	292;"	d	file:
STATE_PERMIT	samples/update/update.cpp	61;"	d	file:
STATE_POWER_MODE	samples/bypass/bypass.cpp	255;"	d	file:
STATE_POWER_MODE	samples/dump/dump.cpp	255;"	d	file:
STATE_POWER_MODE	samples/rfmonitor/rfmonitor.cpp	295;"	d	file:
STATE_READY	samples/aidon/aidon.cpp	145;"	d	file:
STATE_READY	samples/bypass/bypass.cpp	251;"	d	file:
STATE_READY	samples/dump/dump.cpp	251;"	d	file:
STATE_READY	samples/enditest/enditest.cpp	53;"	d	file:
STATE_READY	samples/ge/ge.cpp	145;"	d	file:
STATE_READY	samples/init/init.cpp	53;"	d	file:
STATE_READY	samples/rfmonitor/rfmonitor.cpp	291;"	d	file:
STATE_READY	samples/update/update.cpp	53;"	d	file:
STATE_RESET	samples/bypass/bypass.cpp	256;"	d	file:
STATE_RESET	samples/dump/dump.cpp	256;"	d	file:
STATE_RESET	samples/enditest/enditest.cpp	64;"	d	file:
STATE_RESET	samples/init/init.cpp	64;"	d	file:
STATE_RESET	samples/rfmonitor/rfmonitor.cpp	296;"	d	file:
STATE_RESET	samples/update/update.cpp	64;"	d	file:
STATE_RETRY	samples/ge/i210.cpp	36;"	d	file:
STATE_RF_POWER	samples/bypass/bypass.cpp	254;"	d	file:
STATE_RF_POWER	samples/dump/dump.cpp	254;"	d	file:
STATE_RF_POWER	samples/rfmonitor/rfmonitor.cpp	294;"	d	file:
STATE_SECURITY_PARAM	samples/aidon/aidon.cpp	149;"	d	file:
STATE_SECURITY_PARAM	samples/enditest/enditest.cpp	57;"	d	file:
STATE_SECURITY_PARAM	samples/ge/ge.cpp	149;"	d	file:
STATE_SECURITY_PARAM	samples/init/init.cpp	57;"	d	file:
STATE_SECURITY_PARAM	samples/update/update.cpp	57;"	d	file:
STATE_SEND_COMMAND	samples/ge/i210.cpp	34;"	d	file:
STATE_SERIAL_PARAM	samples/aidon/aidon.cpp	147;"	d	file:
STATE_SERIAL_PARAM	samples/enditest/enditest.cpp	55;"	d	file:
STATE_SERIAL_PARAM	samples/ge/ge.cpp	147;"	d	file:
STATE_SERIAL_PARAM	samples/init/init.cpp	55;"	d	file:
STATE_SERIAL_PARAM	samples/update/update.cpp	55;"	d	file:
STATE_SET_FORMNETWORK	samples/enditest/enditest.cpp	63;"	d	file:
STATE_SET_FORMNETWORK	samples/init/init.cpp	63;"	d	file:
STATE_SET_FORMNETWORK	samples/update/update.cpp	63;"	d	file:
STATE_SET_PERMIT	samples/bypass/bypass.cpp	253;"	d	file:
STATE_SET_PERMIT	samples/dump/dump.cpp	253;"	d	file:
STATE_SET_PERMIT	samples/enditest/enditest.cpp	62;"	d	file:
STATE_SET_PERMIT	samples/init/init.cpp	62;"	d	file:
STATE_SET_PERMIT	samples/rfmonitor/rfmonitor.cpp	293;"	d	file:
STATE_SET_PERMIT	samples/update/update.cpp	62;"	d	file:
STATE_STACK_MEMORY	samples/aidon/aidon.cpp	150;"	d	file:
STATE_STACK_MEMORY	samples/enditest/enditest.cpp	60;"	d	file:
STATE_STACK_MEMORY	samples/ge/ge.cpp	150;"	d	file:
STATE_STACK_MEMORY	samples/init/init.cpp	60;"	d	file:
STATE_STACK_MEMORY	samples/update/update.cpp	60;"	d	file:
STATE_STX	src/CoordinatorDataStream.cpp	31;"	d	file:
STATE_STX_NEXT	src/CoordinatorDataStream.cpp	32;"	d	file:
STATE_TEST	samples/enditest/enditest.cpp	65;"	d	file:
STATE_TIMESYNC	samples/rfmonitor/rfmonitor.cpp	298;"	d	file:
STATE_WAIT	samples/aidon/aidon.cpp	161;"	d	file:
STATE_WAIT	samples/bypass/bypass.cpp	257;"	d	file:
STATE_WAIT	samples/dump/dump.cpp	257;"	d	file:
STATE_WAIT	samples/enditest/enditest.cpp	66;"	d	file:
STATE_WAIT	samples/ge/ge.cpp	162;"	d	file:
STATE_WAIT	samples/init/init.cpp	65;"	d	file:
STATE_WAIT	samples/rfmonitor/rfmonitor.cpp	299;"	d	file:
STATE_WAIT	samples/update/update.cpp	66;"	d	file:
STATE_WAIT_CONNECT	samples/ge/i210.cpp	33;"	d	file:
STATE_WAIT_REPLY	samples/ge/i210.cpp	35;"	d	file:
STAT_TABLE	samples/ge/ansi.h	/^}	__attribute__ ((packed)) STAT_TABLE;$/;"	t	typeref:struct:_tagSTAT_TABLE
STRTOKEY	src/CoordinatorUtility.cpp	/^int	STRTOKEY(char *pszString, BYTE *key, int len)$/;"	f
SUBDIRS	Makefile	/^SUBDIRS = src samples$/;"	m
SUBDIRS	samples/Makefile	/^SUBDIRS = init aidon ge enditest update bypass$/;"	m
SUPER_PARENT	include/endiFrame.h	/^        BYTE        SUPER_PARENT;                           \/\/ Super Parent 여부$/;"	m	struct:_tagENDI_NODE_INFO
SX_METER_LP_ADDRESS	include/endiDefine.h	360;"	d
SelectParser	samples/ge/Ondemander.cpp	/^CMeterParser *COndemander::SelectParser(char *pszType)$/;"	f	class:COndemander
Send	src/DeviceClass.cpp	/^int CDeviceClass::Send(COORDINATOR *codi, BYTE *pBuffer, int nLength)$/;"	f	class:CDeviceClass
Send	src/SerialInterface.cpp	/^int CSerialInterface::Send(COORDINATOR *codi, BYTE *pBuffer, int nLength)$/;"	f	class:CSerialInterface
Send	src/VirtualInterface.cpp	/^int CVirtualInterface::Send(COORDINATOR *codi, BYTE *pBuffer, int nLength)$/;"	f	class:CVirtualInterface
SendCommand	samples/ge/Operation.h	31;"	d
SendMessage	samples/ge/i210.cpp	/^void CI210Parser::SendMessage(ONDEMANDPARAM *pOndemand, EUI64 *id)$/;"	f	class:CI210Parser
SendRecvToEndDevice	src/CoordinatorServer.cpp	/^int CCoordinatorServer::SendRecvToEndDevice(ENDDEVICE *endi, BYTE rw, BYTE type, BYTE *payload, int nLength, BYTE *data, int *datalen, int nTimeout)$/;"	f	class:CCoordinatorServer
SendToCoordinator	src/CoordinatorServer.cpp	/^int CCoordinatorServer::SendToCoordinator(COORDINATOR *codi, BYTE *pBuffer, int nLength)$/;"	f	class:CCoordinatorServer
SendToEndDevice	src/CoordinatorServer.cpp	/^int CCoordinatorServer::SendToEndDevice(ENDDEVICE *endi, BYTE rw, BYTE type, BYTE *payload, int nLength, int nTimeout)$/;"	f	class:CCoordinatorServer
SetChildDevice	src/CoordinatorServer.cpp	/^int	CCoordinatorServer::SetChildDevice(COORDINATOR *codi, EUI64 *id, BYTE seq, BYTE type, WORD shortid, EUI64 *child, int nTimeout)$/;"	f	class:CCoordinatorServer
SetCoordinatorPassive	src/CoordinatorServer.cpp	/^void CCoordinatorServer::SetCoordinatorPassive(COORDINATOR *codi, BOOL bPassive)$/;"	f	class:CCoordinatorServer
SetCoordinatorProperty	src/CoordinatorServer.cpp	/^int CCoordinatorServer::SetCoordinatorProperty(COORDINATOR *codi, BYTE nProperty, BYTE *payload, int nLength, int nTimeout)$/;"	f	class:CCoordinatorServer
SetExtendedTimeout	src/CoordinatorServer.cpp	/^int CCoordinatorServer::SetExtendedTimeout(ENDDEVICE *endi, BOOL bExtendedTimeout)$/;"	f	class:CCoordinatorServer
SetFrameCrc	src/CoordinatorCrcCheck.cpp	/^void SetFrameCrc(unsigned char *pszStream)$/;"	f
SetGrowSize	include/common/LinkedList.h	/^inline void CLinkedList<TYPE>::SetGrowSize(int nSize)$/;"	f	class:CLinkedList
SetNextTable	samples/ge/i210.cpp	/^void CI210Parser::SetNextTable(ONDEMANDPARAM *pOndemand, int nTable, BOOL bClear)$/;"	f	class:CI210Parser
SetOption	src/Coordinator.cpp	/^int CCoordinator::SetOption(COORDINATOR *codi, int nOption)$/;"	f	class:CCoordinator
SetOptionCoordinator	src/CoordinatorServer.cpp	/^int CCoordinatorServer::SetOptionCoordinator(COORDINATOR *codi, int nOption)$/;"	f	class:CCoordinatorServer
SetOptionEndDevice	src/CoordinatorServer.cpp	/^int CCoordinatorServer::SetOptionEndDevice(ENDDEVICE *endi, int nOption, int nValue)$/;"	f	class:CCoordinatorServer
SetPassive	src/DeviceClass.cpp	/^void CDeviceClass::SetPassive(COORDINATOR *codi, BOOL bPassive)$/;"	f	class:CDeviceClass
SetPassive	src/SerialInterface.cpp	/^void CSerialInterface::SetPassive(COORDINATOR *codi, BOOL bPassive)$/;"	f	class:CSerialInterface
SetProperty	src/Coordinator.cpp	/^int CCoordinator::SetProperty(COORDINATOR *codi, BYTE nProperty, BYTE *payload, int nLength, int nTimeout)$/;"	f	class:CCoordinator
SetWatchdogState	src/Coordinator.cpp	/^BOOL CCoordinator::SetWatchdogState(COORDINATOR *codi, BOOL bState)$/;"	f	class:CCoordinator
Setup	samples/ge/i210.cpp	/^void Setup(EUI64 *id, char *model, char *serial, BYTE hw, BYTE fw)$/;"	f
Shutdown	src/Coordinator.cpp	/^int CCoordinator::Shutdown(COORDINATOR *codi)$/;"	f	class:CCoordinator
ShutdownCoordinator	src/CoordinatorServer.cpp	/^int CCoordinatorServer::ShutdownCoordinator(COORDINATOR *codi)$/;"	f	class:CCoordinatorServer
ShutdownCoordinatorAll	src/CoordinatorServer.cpp	/^int CCoordinatorServer::ShutdownCoordinatorAll()$/;"	f	class:CCoordinatorServer
ShutdownStreamWorker	src/CoordinatorServer.cpp	/^void CCoordinatorServer::ShutdownStreamWorker()$/;"	f	class:CCoordinatorServer
StartCoordinator	src/CoordinatorServer.cpp	/^int CCoordinatorServer::StartCoordinator(COORDINATOR *codi)$/;"	f	class:CCoordinatorServer
StartDevice	src/DeviceClass.cpp	/^int CDeviceClass::StartDevice(COORDINATOR *codi, CODIDEVICE *pDevice)$/;"	f	class:CDeviceClass
StartDevice	src/SerialInterface.cpp	/^int CSerialInterface::StartDevice(COORDINATOR *codi, CODIDEVICE *pDevice)$/;"	f	class:CSerialInterface
StartDevice	src/VirtualInterface.cpp	/^int CVirtualInterface::StartDevice(COORDINATOR *codi, CODIDEVICE *pDevice)$/;"	f	class:CVirtualInterface
Startup	src/Coordinator.cpp	/^int CCoordinator::Startup(COORDINATOR *codi)$/;"	f	class:CCoordinator
StartupCoordinator	src/CoordinatorServer.cpp	/^int CCoordinatorServer::StartupCoordinator(COORDINATOR *codi)$/;"	f	class:CCoordinatorServer
StartupCoordinatorAll	src/CoordinatorServer.cpp	/^int CCoordinatorServer::StartupCoordinatorAll()$/;"	f	class:CCoordinatorServer
StartupStreamWorker	src/CoordinatorServer.cpp	/^void CCoordinatorServer::StartupStreamWorker()$/;"	f	class:CCoordinatorServer
StopCoordinator	src/CoordinatorServer.cpp	/^int CCoordinatorServer::StopCoordinator(COORDINATOR *codi)$/;"	f	class:CCoordinatorServer
StopDevice	src/DeviceClass.cpp	/^int CDeviceClass::StopDevice(COORDINATOR *codi)$/;"	f	class:CDeviceClass
StopDevice	src/SerialInterface.cpp	/^int CSerialInterface::StopDevice(COORDINATOR *codi)$/;"	f	class:CSerialInterface
StopDevice	src/VirtualInterface.cpp	/^int CVirtualInterface::StopDevice(COORDINATOR *codi)$/;"	f	class:CVirtualInterface
Sync	src/Coordinator.cpp	/^int CCoordinator::Sync(COORDINATOR *codi, int nInterval)$/;"	f	class:CCoordinator
TARGET	samples/aidon/Makefile	/^TARGET      =$(TOP)\/bin\/aidon$/;"	m
TARGET	samples/bypass/Makefile	/^TARGET      =$(TOP)\/bin\/bypass.exe$/;"	m
TARGET	samples/dump/Makefile	/^TARGET      =$(TOP)\/bin\/dump.exe$/;"	m
TARGET	samples/enditest/Makefile	/^TARGET      =$(TOP)\/bin\/enditest$/;"	m
TARGET	samples/ge/Makefile	/^TARGET      =$(TOP)\/bin\/ge$/;"	m
TARGET	samples/init/Makefile	/^TARGET      =$(DEST)\/init$/;"	m
TARGET	samples/rfmonitor/Makefile	/^TARGET      =$(TOP)\/bin\/rfmonitor.exe$/;"	m
TARGET	samples/update/Makefile	/^TARGET      =$(TOP)\/bin\/update$/;"	m
TARGET	src/Makefile	/^TARGET      =..\/lib\/$(LIB_NAME)$/;"	m
TBL_PROC	samples/ge/ansi.h	/^		WORD	TBL_PROC;$/;"	m	struct:_tagANSI_TABLE7
TBL_PROC	samples/ge/ansi.h	/^		WORD	TBL_PROC;$/;"	m	struct:_tagANSI_TABLE8
TCPDATASTREAM	include/typedef.h	/^}   TCPDATASTREAM, *PTCPDATASTREAM;$/;"	t	typeref:struct:_tagTCPDATASTREAM
TCPIO_TYPE_RECV	include/common/TCPSocket.h	40;"	d
TCPIO_TYPE_SEND	include/common/TCPSocket.h	39;"	d
TESTDIR	src/Makefile	/^TESTDIR     = $(TOP)\/test$/;"	m
TESTDIRS	Makefile	/^TESTDIRS = src$/;"	m
TESTLIB	src/Makefile	/^TESTLIB     = -L$(TOP)\/lib -lUnitTest++$(CROSS_NAME) $/;"	m
TESTLIBS	src/Makefile	/^TESTLIBS    = $(TESTLIB)$/;"	m
TESTOBJS	src/Makefile	/^TESTOBJS    = $(TESTSRC:.cpp=.o)$/;"	m
TESTRESULT	src/Makefile	/^TESTRESULT  = $(TESTTARGET:.exe=.xml)$/;"	m
TESTSRC	src/Makefile	/^TESTSRC     = $(wildcard $(TESTSRCDIR)\/*.cpp)$/;"	m
TESTSRCDIR	src/Makefile	/^TESTSRCDIR  = $(TOP)\/test\/codiapi$/;"	m
TESTTARGET	src/Makefile	/^TESTTARGET  = $(TOP)\/bin\/test\/testCodiapi.exe$/;"	m
TEST_FLAG	include/endiFrame.h	/^		BYTE		TEST_FLAG;								\/\/ QC Test FLAG (1=ENABLE), DEFAULT OFF$/;"	m	struct:_tagENDI_AMR_INFO
THREADEVENTLIST	include/common/_WinMultiThread.h	/^}	THREADEVENTLIST, *PTHREADEVENTLIST;$/;"	t	typeref:struct:_THREADEVENTLIST
TID	include/common/TCPSocket.h	/^typedef int								TID;$/;"	t
TIMEDATE	include/typedef.h	/^} 	__ATTRIBUTE_PACKED__ TIMEDATE, *PTIMEDATE;$/;"	t	typeref:struct:_tagTIMEDATE
TIMESTAMP	include/typedef.h	/^} 	__ATTRIBUTE_PACKED__ TIMESTAMP, *PTIMESTAMP;$/;"	t	typeref:struct:_tagTIMESTAMP
TIMESTAMP5	include/typedef.h	/^} 	__ATTRIBUTE_PACKED__ TIMESTAMP5, *PTIMESTAMP5;$/;"	t	typeref:struct:_tagTIMESTAMP5
TIMESTAMP6	include/typedef.h	/^} 	__ATTRIBUTE_PACKED__ TIMESTAMP6, *PTIMESTAMP6;$/;"	t	typeref:struct:_tagTIMESTAMP6
TIMETICK	include/typedef.h	/^} 	TIMETICK, *PTIMETICK;$/;"	t	typeref:struct:_tagTIMETICK
TOP	samples/aidon/Makefile	/^TOP = ..\/..$/;"	m
TOP	samples/bypass/Makefile	/^TOP = ..\/..$/;"	m
TOP	samples/dump/Makefile	/^TOP = ..\/..$/;"	m
TOP	samples/enditest/Makefile	/^TOP = ..\/..$/;"	m
TOP	samples/ge/Makefile	/^TOP = ..\/..$/;"	m
TOP	samples/init/Makefile	/^TOP = ..\/..$/;"	m
TOP	samples/rfmonitor/Makefile	/^TOP = ..\/..$/;"	m
TOP	samples/update/Makefile	/^TOP = ..\/..$/;"	m
TOP	src/Makefile	/^TOP = ..\/..\/nazc$/;"	m
TOTAL_RECV_BYTES	samples/ge/ansi.h	/^		UINT	TOTAL_RECV_BYTES;$/;"	m	struct:_tagSTAT_TABLE
TOTAL_REPLY_WAIT_MSEC	samples/ge/ansi.h	/^		UINT	TOTAL_REPLY_WAIT_MSEC;$/;"	m	struct:_tagSTAT_TABLE
TOTAL_SEND_BYTES	samples/ge/ansi.h	/^		UINT	TOTAL_SEND_BYTES;$/;"	m	struct:_tagSTAT_TABLE
TOTAL_USE_MSEC	samples/ge/ansi.h	/^		UINT	TOTAL_USE_MSEC;$/;"	m	struct:_tagSTAT_TABLE
TRANSMIT_PKT_COUNT	samples/ge/ansi.h	/^		UINT	TRANSMIT_PKT_COUNT;$/;"	m	struct:_tagSTAT_TABLE
TRUE	include/typedef.h	45;"	d
TXPOWER	include/endiFrame.h	/^		signed char	TXPOWER;								\/\/ RF 송신 출력 (manual 1 일때)$/;"	m	struct:_tagENDI_NETWORK_INFO
TimesyncSensor	samples/rfmonitor/rfmonitor.cpp	/^void TimesyncSensor(HANDLE codi)$/;"	f
UINT	include/typedef.h	/^typedef unsigned int					UINT;$/;"	t
UINT_PTR	include/typedef.h	/^typedef unsigned int                    UINT_PTR;$/;"	t
UINT_PTR	include/typedef.h	/^typedef unsigned long                   UINT_PTR;$/;"	t
ULONG	include/typedef.h	/^typedef unsigned long long				ULONG;$/;"	t
UNIONVALUE	include/typedef.h	/^}   __ATTRIBUTE_PACKED__ UNIONVALUE;$/;"	t	typeref:union:_tagUNIONVALUE
USERINFO	include/typedef.h	/^}	USERINFO, *PUSERINFO;$/;"	t	typeref:struct:_tagUSERINFO
USER_GROUP_ADMIN	include/typedef.h	85;"	d
USER_GROUP_GUEST	include/typedef.h	87;"	d
USER_GROUP_USER	include/typedef.h	86;"	d
Unbinding	src/CoordinatorServer.cpp	/^int CCoordinatorServer::Unbinding(ENDDEVICE *endi)$/;"	f	class:CCoordinatorServer
UnlockEndDevice	src/EndDevicePool.cpp	/^void CEndDevicePool::UnlockEndDevice(ENDDEVICE *pEndDevice)$/;"	f	class:CEndDevicePool
UnlockOperation	samples/ge/Operation.h	24;"	d
Unregister	src/Coordinator.cpp	/^int CCoordinator::Unregister(COORDINATOR *codi)$/;"	f	class:CCoordinator
UnregisterCoordinator	src/CoordinatorServer.cpp	/^int CCoordinatorServer::UnregisterCoordinator(COORDINATOR *codi)$/;"	f	class:CCoordinatorServer
UnregisterCoordinatorAll	src/CoordinatorServer.cpp	/^int CCoordinatorServer::UnregisterCoordinatorAll()$/;"	f	class:CCoordinatorServer
Usage	samples/bypass/bypass.cpp	/^void Usage(char * filename)$/;"	f
Usage	samples/dump/dump.cpp	/^void Usage(char * filename)$/;"	f
Usage	samples/rfmonitor/rfmonitor.cpp	/^void Usage(char * filename)$/;"	f
VC_EXTRALEAN	src/stdafx.h	15;"	d
VENDOR	include/endiFrame.h	/^		char		VENDOR[30];								\/\/ 메타 제조사 벤더$/;"	m	struct:_tagENDI_AMR_INFO
VerifyCrcCheck	src/CoordinatorCrcCheck.cpp	/^BOOL VerifyCrcCheck(unsigned char *pszStream, int nLength)$/;"	f
WAIT_READ_RESPONSE	include/codiDefine.h	265;"	d
WAIT_WRITE_RESPONSE	include/codiDefine.h	264;"	d
WHOLE_ADDRESS_TABLE_SIZE	include/codiFrame.h	/^		BYTE		WHOLE_ADDRESS_TABLE_SIZE;				\/\/ 전체 address table size (집중기 사용 불가 영역 포함)$/;"	m	struct:_tagCODI_STACKMEMORY_PAYLOAD
WORD	include/typedef.h	/^typedef unsigned short					WORD;$/;"	t
WORD24	include/typedef.h	/^}   __ATTRIBUTE_PACKED__ WORD24;$/;"	t	typeref:struct:_tagWORD24
WORKSESSION	include/typedef.h	/^}   WORKSESSION, *PWORKSESSION;$/;"	t	typeref:struct:_tagWORKSESSION
WRITEREQUEST	include/common/_WinSerialWriter.h	/^} WRITEREQUEST, *PWRITEREQUEST;$/;"	t	typeref:struct:_tagWRITEREQUEST
WRITE_CHECK_TIMEOUT	include/common/_WinSerialWriter.h	14;"	d
WRITE_OPTION_ACTOFF	samples/ge/GeMeter.h	86;"	d
WRITE_OPTION_ACTON	samples/ge/GeMeter.h	85;"	d
WRITE_OPTION_RELAYOFF	samples/ge/GeMeter.h	84;"	d
WRITE_OPTION_RELAYON	samples/ge/GeMeter.h	83;"	d
WRITE_OPTION_TIMESYNC	samples/ge/GeMeter.h	87;"	d
WaitForReply	samples/aidon/aidon.cpp	/^int WaitForReply(HANDLE codi, HANDLE endi, int nCommand)$/;"	f
WaitForReply	src/CoordinatorWaitReply.cpp	/^int CCoordinatorWaitReply::WaitForReply(CODIWAITREPLY *pReply, int nTimeout)$/;"	f	class:CCoordinatorWaitReply
WaitingForCommandReply	src/CoordinatorServer.cpp	/^int CCoordinatorServer::WaitingForCommandReply(COORDINATOR *codi, BYTE type, BYTE cmd, BYTE seq, BYTE *pFrame, int len, BYTE *pBuffer, int *nLength, int nTimeout)$/;"	f	class:CCoordinatorServer
WaitingForDataReply	src/CoordinatorServer.cpp	/^int CCoordinatorServer::WaitingForDataReply(COORDINATOR *codi, BYTE type, BYTE cmd, BYTE seq, BYTE waitMask, BYTE *pFrame, int len, int nTimeout)$/;"	f	class:CCoordinatorServer
WriteAmrEndDevice	src/CoordinatorServer.cpp	/^int CCoordinatorServer::WriteAmrEndDevice(ENDDEVICE *endi, WORD mask, BYTE *data, int nLength, int nTimeout)$/;"	f	class:CCoordinatorServer
WriteCidEndDevice	src/CoordinatorServer.cpp	/^int CCoordinatorServer::WriteCidEndDevice(ENDDEVICE *endi, BYTE *value, int valuelen, BYTE *data, int *datalen, int nTimeout)$/;"	f	class:CCoordinatorServer
WriteEndDevice	src/CoordinatorServer.cpp	/^int	CCoordinatorServer::WriteEndDevice(COORDINATOR *codi, EUI64 *id, BYTE seq, BYTE type, BYTE *data, int nLength, int nTimeout)$/;"	f	class:CCoordinatorServer
WriteLongRomEndDevice	src/CoordinatorServer.cpp	/^int CCoordinatorServer::WriteLongRomEndDevice(COORDINATOR *codi, UINT addr, BYTE *data, int nLength)$/;"	f	class:CCoordinatorServer
WriteLongRomEndDevice	src/CoordinatorServer.cpp	/^int CCoordinatorServer::WriteLongRomEndDevice(ENDDEVICE *endi, UINT addr, BYTE *data, int nLength, BYTE * replay, int *nSize, int nTimeout)$/;"	f	class:CCoordinatorServer
WriteMccbEndDevice	src/CoordinatorServer.cpp	/^int CCoordinatorServer::WriteMccbEndDevice(ENDDEVICE *endi, BYTE value, BYTE *data, int nTimeout)$/;"	f	class:CCoordinatorServer
WriteMessage	samples/ge/i210.cpp	/^void CI210Parser::WriteMessage(ONDEMANDPARAM *pOndemand, int nOption)$/;"	f	class:CI210Parser
WriteRomEndDevice	src/CoordinatorServer.cpp	/^int CCoordinatorServer::WriteRomEndDevice(COORDINATOR *codi, WORD addr, BYTE *data, int nLength)$/;"	f	class:CCoordinatorServer
WriteRomEndDevice	src/CoordinatorServer.cpp	/^int CCoordinatorServer::WriteRomEndDevice(ENDDEVICE *endi, WORD addr, BYTE *data, int nLength, int nTimeout)$/;"	f	class:CCoordinatorServer
ZIGBEE_MAX_PAYLOAD_SIZE	include/codiDefine.h	11;"	d
ZIGBEE_VALID_PAYLOAD_SIZE	include/codiDefine.h	13;"	d
_CppSQLite3_H_	include/common/CppSQLite3.h	29;"	d
_MAX_PATH	include/typedef.h	37;"	d
_THREADEVENTLIST	include/common/_WinMultiThread.h	/^typedef struct	_THREADEVENTLIST$/;"	s
__ANSI_H__	samples/ge/ansi.h	2;"	d
__ATTRIBUTE_PACKED__	include/typedef.h	31;"	d
__ATTRIBUTE_PACKED__	include/typedef.h	33;"	d
__CHUNK_H__	include/common/Chunk.h	17;"	d
__CODIAPI_STDAFX_H__	src/stdafx.h	7;"	d
__CODI_API_H__	include/codiapi.h	2;"	d
__CODI_CALLBACK_H__	include/codiCallback.h	2;"	d
__CODI_DEFINE_H__	include/codiDefine.h	2;"	d
__CODI_DEVICE_CLASS_H__	src/DeviceClass.h	2;"	d
__CODI_ERROR_H__	include/codierr.h	2;"	d
__CODI_FRAME_H__	include/codiFrame.h	2;"	d
__CODI_SERIAL_INTERFACE_H__	src/SerialInterface.h	2;"	d
__CODI_TYPE_DEFINE_H__	include/codiTypedef.h	2;"	d
__CODI_VIRTUAL_INTERFACE_H__	src/VirtualInterface.h	2;"	d
__COMMON_BCC_H__	include/common/BCC.h	2;"	d
__COMMON_CRC16_H__	include/common/CRC16.h	2;"	d
__COMMON_MD5_H__	include/common/MD5.h	2;"	d
__COMMON_PARITY_H__	include/common/Parity.h	2;"	d
__COMMON_QUEUE_H__	include/common/Queue.h	17;"	d
__COMMON_UTIL_H__	include/common/CommonUtil.h	2;"	d
__COORDINATOR_CRC_CHECK_H__	src/CoordinatorCrcCheck.h	17;"	d
__COORDINATOR_DATA_STREAM_H__	src/CoordinatorDataStream.h	17;"	d
__COORDINATOR_FRAME_H__	src/CoordinatorFrame.h	2;"	d
__COORDINATOR_H__	src/Coordinator.h	2;"	d
__COORDINATOR_MESSAGE_H__	src/CoordinatorMessage.h	2;"	d
__COORDINATOR_SERVER_H__	src/CoordinatorServer.h	2;"	d
__COORDINATOR_UTILITY_H__	src/CoordinatorUtility.h	2;"	d
__COORDINATOR_WAIT_REPLY_H__	src/CoordinatorWaitReply.h	2;"	d
__DATA_STREAM_H__	include/common/DataStream.h	17;"	d
__DEBUG_SERVER_H__	include/common/DebugServer.h	17;"	d
__DEBUG_UTIL_H__	include/common/DebugUtil.h	17;"	d
__ENDI_DEFINE_H__	include/endiDefine.h	2;"	d
__ENDI_FRAME_H__	include/endiFrame.h	2;"	d
__END_DEVICE_POOL_H__	src/EndDevicePool.h	2;"	d
__GE_METER_H__	samples/ge/GeMeter.h	2;"	d
__GPIOMAP_H__	include/gpio/gpiomap.h	2;"	d
__GPIO_API_H__	include/gpio/GPIOAPI.h	17;"	d
__GPIO_H__	include/gpio/gpio.h	10;"	d
__HASH_H__	include/common/Hash.h	2;"	d
__I210_H__	samples/ge/i210.h	2;"	d
__ICMP_PING_H__	include/common/IcmpPing.h	2;"	d
__LINKEDLIST_H__	include/common/LinkedList.h	17;"	d
__LOCKER_H__	include/common/Locker.h	2;"	d
__MCU_COMMON_H__	samples/ge/common.h	2;"	d
__MEMORY_DEBUG_H__	include/common/MemoryDebug.h	2;"	d
__METER_PARSER_H__	samples/ge/MeterParser.h	2;"	d
__MULTI_THREAD_H__	include/common/_WinMultiThread.h	17;"	d
__ONDEMANDER_H__	samples/ge/Ondemander.h	2;"	d
__OPERATION_H__	samples/ge/Operation.h	2;"	d
__OPTIONS_H__	include/common/Options.h	2;"	d
__PRIVATE_PROFILE_H__	include/common/PrivateProfile.h	2;"	d
__PROFILE_H__	include/common/Profile.h	2;"	d
__PTHREAD_INFO__	include/common/DebugUtil.h	47;"	d
__PTHREAD_INFO__	include/common/DebugUtil.h	49;"	d
__SERIAL_SERVER_H__	include/common/SerialServer.h	17;"	d
__SHELL_COMMAND_H__	include/common/ShellCommand.h	2;"	d
__SYSTEM_UTIL_H__	include/common/SystemUtil.h	2;"	d
__TCP_CLIENT_H__	include/common/TCPClient.h	17;"	d
__TCP_MULTIPLEX_SERVER_H__	include/common/TCPMultiplexServer.h	17;"	d
__TCP_SOCKET_H__	include/common/TCPSocket.h	17;"	d
__TIMEOUT_THREAD_H__	include/common/TimeoutThread.h	2;"	d
__TYPEDEF_H__	include/typedef.h	17;"	d
__UNIX_EVENT_H__	include/common/Event.h	2;"	d
__UNIX_SERIAL_SERVER_H__	include/common/_UnixSerialServer.h	17;"	d
__UNIX_TIMEOUT_THREAD_H__	include/common/_UnixTimeoutThread.h	2;"	d
__WIN_SERIAL_COMM_H__	include/common/_WinSerialServer.h	17;"	d
__WIN_SYNCTHREAD_H__	include/common/_WinTimeoutThread.h	17;"	d
_ansiprotocol	samples/ge/GeMeter.h	/^typedef struct _ansiprotocol$/;"	s
_meterbuf	samples/ge/GeMeter.h	/^typedef struct _meterbuf$/;"	s
_meterconfig	samples/ge/GeMeter.h	/^typedef struct _meterconfig$/;"	s
_tagANSI_FRAME	samples/ge/GeMeter.h	/^typedef struct _tagANSI_FRAME$/;"	s
_tagANSI_HEADER	samples/ge/GeMeter.h	/^typedef struct _tagANSI_HEADER$/;"	s
_tagANSI_TABLE1	samples/ge/ansi.h	/^typedef struct	_tagANSI_TABLE1$/;"	s
_tagANSI_TABLE113	samples/ge/ansi.h	/^typedef struct	_tagANSI_TABLE113$/;"	s
_tagANSI_TABLE5	samples/ge/ansi.h	/^typedef struct	_tagANSI_TABLE5$/;"	s
_tagANSI_TABLE61	samples/ge/ansi.h	/^typedef struct	_tagANSI_TABLE61$/;"	s
_tagANSI_TABLE63	samples/ge/ansi.h	/^typedef struct	_tagANSI_TABLE63$/;"	s
_tagANSI_TABLE7	samples/ge/ansi.h	/^typedef struct	_tagANSI_TABLE7$/;"	s
_tagANSI_TABLE8	samples/ge/ansi.h	/^typedef struct	_tagANSI_TABLE8$/;"	s
_tagANSI_TAIL	samples/ge/GeMeter.h	/^typedef struct _tagANSI_TAIL$/;"	s
_tagAPP_3PARTY_HEADER	include/endiFrame.h	/^typedef struct  _tagAPP_3PARTY_HEADER$/;"	s
_tagAPP_3PARTY_PAYLOAD	include/endiFrame.h	/^typedef struct	_tagAPP_3PARTY_PAYLOAD                      \/\/ 3rd Party Protocol frame$/;"	s
_tagCHUNK	include/common/Chunk.h	/^typedef struct	_tagCHUNK$/;"	s
_tagCMDPARAM	samples/ge/MeterParser.h	/^typedef struct	_tagCMDPARAM$/;"	s
_tagCODIDEVICE	include/codiTypedef.h	/^typedef struct	_tagCODIDEVICE$/;"	s
_tagCODIWAITREPLY	include/codiTypedef.h	/^typedef struct	_tagCODIWAITREPLY$/;"	s
_tagCODIWORKSTREAM	src/CoordinatorServer.h	/^typedef struct	_tagCODIWORKSTREAM$/;"	s
_tagCODI_ACTIVESCAN_PAYLOAD	include/codiFrame.h	/^typedef struct	_tagCODI_ACTIVESCAN_PAYLOAD$/;"	s
_tagCODI_BINDINGTABLE_FRAME	include/codiFrame.h	/^typedef struct	_tagCODI_BINDINGTABLE_FRAME$/;"	s
_tagCODI_BINDING_ENTRY	include/codiFrame.h	/^typedef struct	_tagCODI_BINDING_ENTRY$/;"	s
_tagCODI_BINDING_PAYLOAD	include/codiFrame.h	/^typedef struct	_tagCODI_BINDING_PAYLOAD$/;"	s
_tagCODI_BIND_FRAME	include/codiFrame.h	/^typedef struct	_tagCODI_BIND_FRAME$/;"	s
_tagCODI_BIND_PAYLOAD	include/codiFrame.h	/^typedef struct	_tagCODI_BIND_PAYLOAD$/;"	s
_tagCODI_BOOTLOAD_FRAME	include/codiFrame.h	/^typedef struct	_tagCODI_BOOTLOAD_FRAME$/;"	s
_tagCODI_BOOTLOAD_PAYLOAD	include/codiFrame.h	/^typedef struct	_tagCODI_BOOTLOAD_PAYLOAD$/;"	s
_tagCODI_BOOT_PAYLOAD	include/codiFrame.h	/^typedef struct	_tagCODI_BOOT_PAYLOAD$/;"	s
_tagCODI_COMMAND_FRAME	include/codiFrame.h	/^typedef struct	_tagCODI_COMMAND_FRAME$/;"	s
_tagCODI_DIRECTCOMM_FRAME	include/codiFrame.h	/^typedef struct	_tagCODI_DIRECTCOMM_FRAME$/;"	s
_tagCODI_DIRECTCOMM_PAYLOAD	include/codiFrame.h	/^typedef struct _tagCODI_DIRECTCOMM_PAYLOAD$/;"	s
_tagCODI_ENERGYSCAN_PAYLOAD	include/codiFrame.h	/^typedef struct	_tagCODI_ENERGYSCAN_PAYLOAD$/;"	s
_tagCODI_ERROR_PAYLOAD	include/codiFrame.h	/^typedef struct	_tagCODI_ERROR_PAYLOAD$/;"	s
_tagCODI_EXTENDEDTIMEOUT_FRAME	include/codiFrame.h	/^typedef struct	_tagCODI_EXTENDEDTIMEOUT_FRAME$/;"	s
_tagCODI_EXTENDEDTIMEOUT_PAYLOAD	include/codiFrame.h	/^typedef struct _tagCODI_EXTENDEDTIMEOUT_PAYLOAD$/;"	s
_tagCODI_FORMNETWORK_FRAME	include/codiFrame.h	/^typedef struct	_tagCODI_FORMNETWORK_FRAME$/;"	s
_tagCODI_FORMNETWORK_PAYLOAD	include/codiFrame.h	/^typedef struct	_tagCODI_FORMNETWORK_PAYLOAD$/;"	s
_tagCODI_GENERAL_FRAME	include/codiFrame.h	/^typedef struct	_tagCODI_GENERAL_FRAME$/;"	s
_tagCODI_HEADER	include/codiFrame.h	/^typedef struct	_tagCODI_HEADER								\/\/ CODI Frame Header$/;"	s
_tagCODI_IDENT	include/codiFrame.h	/^typedef struct	_tagCODI_IDENT								\/\/ Coordinator start flag$/;"	s
_tagCODI_INFO_ACTIVESCAN_FRAME	include/codiFrame.h	/^typedef struct	_tagCODI_INFO_ACTIVESCAN_FRAME$/;"	s
_tagCODI_INFO_BOOT_FRAME	include/codiFrame.h	/^typedef struct	_tagCODI_INFO_BOOT_FRAME$/;"	s
_tagCODI_INFO_ENERGYSCAN_FRAME	include/codiFrame.h	/^typedef struct	_tagCODI_INFO_ENERGYSCAN_FRAME$/;"	s
_tagCODI_INFO_ERROR_FRAME	include/codiFrame.h	/^typedef struct	_tagCODI_INFO_ERROR_FRAME$/;"	s
_tagCODI_INFO_FRAME	include/codiFrame.h	/^typedef struct	_tagCODI_INFO_FRAME$/;"	s
_tagCODI_INFO_JOIN_FRAME	include/codiFrame.h	/^typedef struct	_tagCODI_INFO_JOIN_FRAME$/;"	s
_tagCODI_INFO_ROUTERECORD_FRAME	include/codiFrame.h	/^typedef struct	_tagCODI_INFO_ROUTERECORD_FRAME$/;"	s
_tagCODI_INFO_SCANCOMPLETE_FRAME	include/codiFrame.h	/^typedef struct	_tagCODI_INFO_SCANCOMPLETE_FRAME$/;"	s
_tagCODI_INFO_STACK_FRAME	include/codiFrame.h	/^typedef struct	_tagCODI_INFO_STACK_FRAME$/;"	s
_tagCODI_JOIN_PAYLOAD	include/codiFrame.h	/^typedef struct	_tagCODI_JOIN_PAYLOAD$/;"	s
_tagCODI_KEY_FRAME	include/codiFrame.h	/^typedef struct	_tagCODI_KEY_FRAME$/;"	s
_tagCODI_KEY_PAYLOAD	include/codiFrame.h	/^typedef struct	_tagCODI_KEY_PAYLOAD$/;"	s
_tagCODI_KEY_TABLE_ENTRY	include/codiFrame.h	/^typedef struct	_tagCODI_KEY_TABLE_ENTRY$/;"	s
_tagCODI_KEY_TABLE_PAYLOAD	include/codiFrame.h	/^typedef struct	_tagCODI_KEY_TABLE_PAYLOAD$/;"	s
_tagCODI_MANYTOONE_FRAME	include/codiFrame.h	/^typedef struct	_tagCODI_MANYTOONE_FRAME$/;"	s
_tagCODI_MANYTOONE_PAYLOAD	include/codiFrame.h	/^typedef struct	_tagCODI_MANYTOONE_PAYLOAD$/;"	s
_tagCODI_MODULE_FRAME	include/codiFrame.h	/^typedef struct	_tagCODI_MODULE_FRAME$/;"	s
_tagCODI_MODULE_PAYLOAD	include/codiFrame.h	/^typedef struct	_tagCODI_MODULE_PAYLOAD$/;"	s
_tagCODI_MULTICASTHOP_FRAME	include/codiFrame.h	/^typedef struct	_tagCODI_MULTICASTHOP_FRAME$/;"	s
_tagCODI_MULTICASTHOP_PAYLOAD	include/codiFrame.h	/^typedef struct _tagCODI_MULTICASTHOP_PAYLOAD$/;"	s
_tagCODI_NEIGHBORTABLE_FRAME	include/codiFrame.h	/^typedef struct	_tagCODI_NEIGHBORTABLE_FRAME$/;"	s
_tagCODI_NEIGHBOR_ENTRY	include/codiFrame.h	/^typedef struct	_tagCODI_NEIGHBOR_ENTRY$/;"	s
_tagCODI_NEIGHBOR_PAYLOAD	include/codiFrame.h	/^typedef struct	_tagCODI_NEIGHBOR_PAYLOAD$/;"	s
_tagCODI_NETWORK_FRAME	include/codiFrame.h	/^typedef struct	_tagCODI_NETWORK_FRAME$/;"	s
_tagCODI_NETWORK_PAYLOAD	include/codiFrame.h	/^typedef struct	_tagCODI_NETWORK_PAYLOAD$/;"	s
_tagCODI_PERMIT_FRAME	include/codiFrame.h	/^typedef struct	_tagCODI_PERMIT_FRAME$/;"	s
_tagCODI_PERMIT_PAYLOAD	include/codiFrame.h	/^typedef struct	_tagCODI_PERMIT_PAYLOAD$/;"	s
_tagCODI_RADIO_STATUS	include/codiFrame.h	/^typedef struct	_tagCODI_RADIO_STATUS$/;"	s
_tagCODI_RESET_FRAME	include/codiFrame.h	/^typedef struct	_tagCODI_RESET_FRAME$/;"	s
_tagCODI_RESET_PAYLOAD	include/codiFrame.h	/^typedef struct	_tagCODI_RESET_PAYLOAD$/;"	s
_tagCODI_ROUTEDISCOVERY_FRAME	include/codiFrame.h	/^typedef struct	_tagCODI_ROUTEDISCOVERY_FRAME$/;"	s
_tagCODI_ROUTEDISCOVERY_PAYLOAD	include/codiFrame.h	/^typedef struct _tagCODI_ROUTEDISCOVERY_PAYLOAD$/;"	s
_tagCODI_ROUTERECORD_PAYLOAD	include/codiFrame.h	/^typedef struct	_tagCODI_ROUTERECORD_PAYLOAD$/;"	s
_tagCODI_ROUTE_FRAME	include/codiFrame.h	/^typedef struct	_tagCODI_ROUTE_FRAME$/;"	s
_tagCODI_SCANCOMPLETE_PAYLOAD	include/codiFrame.h	/^typedef struct	_tagCODI_SCANCOMPLETE_PAYLOAD$/;"	s
_tagCODI_SCANNETWORK_FRAME	include/codiFrame.h	/^typedef struct	_tagCODI_SCANNETWORK_FRAME$/;"	s
_tagCODI_SCANNETWORK_PAYLOAD	include/codiFrame.h	/^typedef struct	_tagCODI_SCANNETWORK_PAYLOAD$/;"	s
_tagCODI_SCAN_FRAME	include/codiFrame.h	/^typedef struct	_tagCODI_SCAN_FRAME$/;"	s
_tagCODI_SCAN_PAYLOAD	include/codiFrame.h	/^typedef struct	_tagCODI_SCAN_PAYLOAD$/;"	s
_tagCODI_SECURITY_FRAME	include/codiFrame.h	/^typedef struct	_tagCODI_SECURITY_FRAME$/;"	s
_tagCODI_SECURITY_PAYLOAD	include/codiFrame.h	/^typedef struct	_tagCODI_SECURITY_PAYLOAD$/;"	s
_tagCODI_SERIAL_FRAME	include/codiFrame.h	/^typedef struct	_tagCODI_SERIAL_FRAME$/;"	s
_tagCODI_SERIAL_PAYLOAD	include/codiFrame.h	/^typedef struct	_tagCODI_SERIAL_PAYLOAD$/;"	s
_tagCODI_STACKMEMORY_FRAME	include/codiFrame.h	/^typedef struct	_tagCODI_STACKMEMORY_FRAME$/;"	s
_tagCODI_STACKMEMORY_PAYLOAD	include/codiFrame.h	/^typedef struct	_tagCODI_STACKMEMORY_PAYLOAD$/;"	s
_tagCODI_STACK_PAYLOAD	include/codiFrame.h	/^typedef struct	_tagCODI_STACK_PAYLOAD$/;"	s
_tagCODI_TAIL	include/codiFrame.h	/^typedef struct	_tagCODI_TAIL								\/\/ SINK Frame Tail$/;"	s
_tagCODI_WRITE_FRAME	include/codiFrame.h	/^typedef struct	_tagCODI_WRITE_FRAME$/;"	s
_tagCODI_WRITE_PAYLOAD	include/codiFrame.h	/^typedef struct	_tagCODI_WRITE_PAYLOAD$/;"	s
_tagCOORDINATOR	include/codiTypedef.h	/^typedef struct	_tagCOORDINATOR$/;"	s
_tagDATASTREAM	include/typedef.h	/^typedef struct  _tagDATASTREAM$/;"	s
_tagDISTRIBUTECLI	include/typedef.h	/^typedef struct  _tagDISTRIBUTECLI$/;"	s
_tagDISTRIBUTEITEM	include/typedef.h	/^typedef struct  _tagDISTRIBUTEITEM$/;"	s
_tagENDDEVICE	include/codiTypedef.h	/^typedef struct	_tagENDDEVICE$/;"	s
_tagENDDEVICEINFO	include/codiTypedef.h	/^typedef struct	_tagENDDEVICEINFO$/;"	s
_tagENDI_3PARTY_FRAME	include/endiFrame.h	/^typedef struct	_tagENDI_3PARTY_FRAME                       \/\/ 3rd Party Protocol frame$/;"	s
_tagENDI_3PARTY_HEADER	include/endiFrame.h	/^typedef struct  _tagENDI_3PARTY_HEADER$/;"	s
_tagENDI_3PARTY_TAIL	include/endiFrame.h	/^typedef struct	_tagENDI_3PARTY_TAIL                        \/\/ 3rd Party Protocol tail$/;"	s
_tagENDI_AMRREAD_PAYLOAD	include/endiFrame.h	/^typedef struct	_tagENDI_AMRREAD_PAYLOAD						\/\/ AMR frame header$/;"	s
_tagENDI_AMR_DATA	include/endiFrame.h	/^typedef struct	_tagENDI_AMR_DATA								\/\/ AMR Data$/;"	s
_tagENDI_AMR_FRAME	include/endiFrame.h	/^typedef struct	_tagENDI_AMR_FRAME$/;"	s
_tagENDI_AMR_INFO	include/endiFrame.h	/^typedef struct	_tagENDI_AMR_INFO$/;"	s
_tagENDI_AMR_PAYLOAD	include/endiFrame.h	/^typedef struct	_tagENDI_AMR_PAYLOAD							\/\/ AMR frame header$/;"	s
_tagENDI_BATTERYLOG_INFO	include/endiFrame.h	/^typedef struct	_tagENDI_BATTERYLOG_INFO$/;"	s
_tagENDI_BATTERY_ENTRY	include/endiFrame.h	/^typedef struct	_tagENDI_BATTERY_ENTRY$/;"	s
_tagENDI_BYPASS_FRAME	include/endiFrame.h	/^typedef struct	_tagENDI_BYPASS_FRAME$/;"	s
_tagENDI_BYPASS_PAYLOAD	include/endiFrame.h	/^typedef struct	_tagENDI_BYPASS_PAYLOAD							\/\/ Bypass frame payload$/;"	s
_tagENDI_COMMAND_FRAME	include/endiFrame.h	/^typedef struct	_tagENDI_COMMAND_FRAME$/;"	s
_tagENDI_COMMAND_PAYLOAD	include/endiFrame.h	/^typedef struct	_tagENDI_COMMAND_PAYLOAD						\/\/ End Device Command Payload$/;"	s
_tagENDI_DATA_FRAME	include/endiFrame.h	/^typedef struct	_tagENDI_DATA_FRAME$/;"	s
_tagENDI_DIO_FRAME	include/endiFrame.h	/^typedef struct	_tagENDI_DIO_FRAME$/;"	s
_tagENDI_DIO_PAYLOAD	include/endiFrame.h	/^typedef struct	_tagENDI_DIO_PAYLOAD						\/\/ D I\/O frame payload$/;"	s
_tagENDI_DISCOVERY_FRAME	include/endiFrame.h	/^typedef struct	_tagENDI_DISCOVERY_FRAME$/;"	s
_tagENDI_DISCOVERY_PAYLOAD	include/endiFrame.h	/^typedef struct	_tagENDI_DISCOVERY_PAYLOAD						\/\/ Discovery request payload$/;"	s
_tagENDI_ERROR_FRAME	include/endiFrame.h	/^typedef struct	_tagENDI_ERROR_FRAME$/;"	s
_tagENDI_ERROR_PAYLOAD	include/endiFrame.h	/^typedef struct	_tagENDI_ERROR_PAYLOAD							\/\/ Error frame payload$/;"	s
_tagENDI_EVENTLOG_INFO	include/endiFrame.h	/^typedef struct	_tagENDI_EVENTLOG_INFO$/;"	s
_tagENDI_EVENT_ENTRY	include/endiFrame.h	/^typedef struct	_tagENDI_EVENT_ENTRY$/;"	s
_tagENDI_EVENT_FRAME	include/endiFrame.h	/^typedef struct	_tagENDI_EVENT_FRAME$/;"	s
_tagENDI_EVENT_PAYLOAD	include/endiFrame.h	/^typedef struct	_tagENDI_EVENT_PAYLOAD							\/\/ Event frame payload$/;"	s
_tagENDI_EVENT_STATUS	include/endiFrame.h	/^typedef struct	_tagENDI_EVENT_STATUS$/;"	s
_tagENDI_LEAVE_FRAME	include/endiFrame.h	/^typedef struct	_tagENDI_LEAVE_FRAME$/;"	s
_tagENDI_LEAVE_PAYLOAD	include/endiFrame.h	/^typedef struct	_tagENDI_LEAVE_PAYLOAD							\/\/ Leave frame payload$/;"	s
_tagENDI_LINK_FRAME	include/endiFrame.h	/^typedef struct	_tagENDI_LINK_FRAME$/;"	s
_tagENDI_LINK_PAYLOAD	include/endiFrame.h	/^typedef struct	_tagENDI_LINK_PAYLOAD							\/\/ Error frame payload$/;"	s
_tagENDI_LONG_ROMREAD_PAYLOAD	include/endiFrame.h	/^typedef struct _tagENDI_LONG_ROMREAD_PAYLOAD                      \/\/ ROM read payload$/;"	s
_tagENDI_LONG_ROM_FRAME	include/endiFrame.h	/^typedef struct	_tagENDI_LONG_ROM_FRAME$/;"	s
_tagENDI_LONG_ROM_PAYLOAD	include/endiFrame.h	/^typedef struct	_tagENDI_LONG_ROM_PAYLOAD							\/\/ ROM read payload$/;"	s
_tagENDI_LPLOG_INFO	include/endiFrame.h	/^typedef struct	_tagENDI_LPLOG_INFO$/;"	s
_tagENDI_LP_ENTRY	include/endiFrame.h	/^typedef struct	_tagENDI_LP_ENTRY$/;"	s
_tagENDI_MCCB_FRAME	include/endiFrame.h	/^typedef struct	_tagENDI_MCCB_FRAME$/;"	s
_tagENDI_MCCB_PAYLOAD	include/endiFrame.h	/^typedef struct	_tagENDI_MCCB_PAYLOAD							\/\/ MCCB read payload$/;"	s
_tagENDI_METERING_FRAME	include/endiFrame.h	/^typedef struct	_tagENDI_METERING_FRAME$/;"	s
_tagENDI_METERING_INFO	include/endiFrame.h	/^typedef struct  _tagENDI_METERING_INFO$/;"	s
_tagENDI_METERING_PAYLOAD	include/endiFrame.h	/^typedef struct	_tagENDI_METERING_PAYLOAD$/;"	s
_tagENDI_NAN_FRAME	include/endiFrame.h	/^typedef struct	_tagENDI_NAN_FRAME$/;"	s
_tagENDI_NAN_PAYLOAD	include/endiFrame.h	/^typedef struct	_tagENDI_NAN_PAYLOAD                            \/\/ NAN frame payload$/;"	s
_tagENDI_NETWORK_INFO	include/endiFrame.h	/^typedef struct	_tagENDI_NETWORK_INFO$/;"	s
_tagENDI_NODE_INFO	include/endiFrame.h	/^typedef struct	_tagENDI_NODE_INFO$/;"	s
_tagENDI_PUSH_BASEPULSE	include/endiFrame.h	/^typedef struct  _tagENDI_PUSH_BASEPULSE$/;"	s
_tagENDI_PUSH_EVT_HEADER	include/endiFrame.h	/^typedef struct  _tagENDI_PUSH_EVT_HEADER$/;"	s
_tagENDI_PUSH_FRAME	include/endiFrame.h	/^typedef struct	_tagENDI_PUSH_FRAME$/;"	s
_tagENDI_PUSH_HEADER	include/endiFrame.h	/^typedef struct  _tagENDI_PUSH_HEADER$/;"	s
_tagENDI_PUSH_LP	include/endiFrame.h	/^typedef struct  _tagENDI_PUSH_LP$/;"	s
_tagENDI_PUSH_LPINFO	include/endiFrame.h	/^typedef struct  _tagENDI_PUSH_LPINFO$/;"	s
_tagENDI_ROMREAD_PAYLOAD	include/endiFrame.h	/^typedef struct _tagENDI_ROMREAD_PAYLOAD                         \/\/ ROM read payload$/;"	s
_tagENDI_ROM_FRAME	include/endiFrame.h	/^typedef struct	_tagENDI_ROM_FRAME$/;"	s
_tagENDI_ROM_PAYLOAD	include/endiFrame.h	/^typedef struct	_tagENDI_ROM_PAYLOAD							\/\/ ROM read payload$/;"	s
_tagENDI_SOLARLOG_ENTRY	include/endiFrame.h	/^typedef struct	_tagENDI_SOLARLOG_ENTRY$/;"	s
_tagENDI_SOLARLOG_INFO	include/endiFrame.h	/^typedef struct	_tagENDI_SOLARLOG_INFO$/;"	s
_tagENDI_SOLARVOLT_ENTRY	include/endiFrame.h	/^typedef struct	_tagENDI_SOLARVOLT_ENTRY$/;"	s
_tagENDI_STATE_FRAME	include/endiFrame.h	/^typedef struct	_tagENDI_STATE_FRAME$/;"	s
_tagENDI_STATE_PAYLOAD	include/endiFrame.h	/^typedef struct	_tagENDI_STATE_PAYLOAD							\/\/ State event payload$/;"	s
_tagENDI_SUPER_PARENT_FRAME	include/endiFrame.h	/^typedef struct	_tagENDI_SUPER_PARENT_FRAME$/;"	s
_tagENDI_SUPER_PARENT_PAYLOAD	include/endiFrame.h	/^typedef struct	_tagENDI_SUPER_PARENT_PAYLOAD					\/\/ Super parent payload$/;"	s
_tagENDI_TIMESYNC_FRAME	include/endiFrame.h	/^typedef struct	_tagENDI_TIMESYNC_FRAME$/;"	s
_tagENDI_TIMESYNC_PAYLOAD	include/endiFrame.h	/^typedef struct	_tagENDI_TIMESYNC_PAYLOAD						\/\/ Timesync payload$/;"	s
_tagEUI64	include/typedef.h	/^typedef struct	_tagEUI64$/;"	s
_tagEVENTHANDLE	include/common/Event.h	/^typedef struct  _tagEVENTHANDLE$/;"	s
_tagEVENTWRITEITEM	include/typedef.h	/^typedef struct	_tagEVENTWRITEITEM$/;"	s
_tagFRAMEDATA	include/codiTypedef.h	/^typedef struct  _tagFRAMEDATA$/;"	s
_tagGETABLE	samples/ge/i210.cpp	/^typedef struct  _tagGETABLE$/;"	s	file:
_tagGEUI64	include/typedef.h	/^typedef struct  _tagGEUI64$/;"	s
_tagGMTTIMESTAMP	include/typedef.h	/^typedef struct	_tagGMTTIMESTAMP$/;"	s
_tagGPIOINTENTRY	include/gpio/gpio.h	/^typedef struct    _tagGPIOINTENTRY$/;"	s
_tagGROUPCOMMANDINFO	include/typedef.h	/^typedef struct	_tagGROUPCOMMANDINFO$/;"	s
_tagGROUPINFO	include/typedef.h	/^typedef struct	_tagGROUPINFO$/;"	s
_tagHASHENTRY	include/common/Hash.h	/^typedef struct	_tagHASHENTRY$/;"	s
_tagIPADDR	include/typedef.h	/^typedef struct	_tagIPADDR$/;"	s
_tagLINKNODE	include/common/LinkedList.h	/^typedef struct	_tagLINKNODE$/;"	s	class:CLinkedList
_tagLINKNODE	include/typedef.h	/^typedef struct	_tagLINKNODE$/;"	s
_tagMBUS_DATA_FRAME	include/endiFrame.h	/^typedef struct  _tagMBUS_DATA_FRAME$/;"	s
_tagMBUS_METERING_PAYLOAD	include/endiFrame.h	/^typedef struct  _tagMBUS_METERING_PAYLOAD$/;"	s
_tagMEMBERINFO	include/typedef.h	/^typedef struct	_tagMEMBERINFO$/;"	s
_tagMETER_STAT	include/typedef.h	/^typedef struct  _tagMETER_STAT$/;"	s
_tagNODE	include/typedef.h	/^typedef struct	_tagNODE$/;"	s
_tagNODEITEM	include/typedef.h	/^typedef struct	_tagNODEITEM$/;"	s
_tagOID3	include/typedef.h	/^typedef struct	_tagOID3$/;"	s
_tagONDEMANDPARAM	samples/ge/Operation.h	/^typedef struct	_tagONDEMANDPARAM$/;"	s
_tagPACKAGEINFO	include/typedef.h	/^typedef struct	_tagPACKAGEINFO$/;"	s
_tagPACKET_HEADER	samples/ge/GeMeter.h	/^typedef struct _tagPACKET_HEADER$/;"	s
_tagPACKET_TABLE	samples/ge/GeMeter.h	/^typedef struct _tagPACKET_TABLE$/;"	s
_tagPACKET_TABLE_HEADER	samples/ge/GeMeter.h	/^typedef struct _tagPACKET_TABLE_HEADER$/;"	s
_tagPACKET_TAIL	samples/ge/GeMeter.h	/^typedef struct _tagPACKET_TAIL$/;"	s
_tagPPOBJECT	include/common/PrivateProfile.h	/^typedef struct	_tagPPOBJECT$/;"	s
_tagPUSH_EVENT	include/endiFrame.h	/^typedef struct  _tagPUSH_EVENT$/;"	s
_tagSTAT_TABLE	samples/ge/ansi.h	/^typedef struct  _tagSTAT_TABLE$/;"	s
_tagTCPDATASTREAM	include/typedef.h	/^typedef struct  _tagTCPDATASTREAM$/;"	s
_tagTIMEDATE	include/typedef.h	/^typedef struct	_tagTIMEDATE$/;"	s
_tagTIMESTAMP	include/typedef.h	/^typedef struct	_tagTIMESTAMP$/;"	s
_tagTIMESTAMP5	include/typedef.h	/^typedef struct	_tagTIMESTAMP5$/;"	s
_tagTIMESTAMP6	include/typedef.h	/^typedef struct	_tagTIMESTAMP6$/;"	s
_tagTIMETICK	include/typedef.h	/^typedef struct	_tagTIMETICK$/;"	s
_tagUNIONVALUE	include/typedef.h	/^typedef union   _tagUNIONVALUE {$/;"	u
_tagUSERINFO	include/typedef.h	/^typedef struct	_tagUSERINFO$/;"	s
_tagWORD24	include/typedef.h	/^typedef struct  _tagWORD24                          \/\/ 8 Bytes unsigned$/;"	s
_tagWORKSESSION	include/typedef.h	/^typedef struct  _tagWORKSESSION$/;"	s
_tagWRITEREQUEST	include/common/_WinSerialWriter.h	/^typedef	struct	_tagWRITEREQUEST$/;"	s
actMin	include/endiFrame.h	/^		WORD					actMin;							\/\/ Active min$/;"	m	struct:_tagENDI_METERING_INFO
active_scan_duration	include/codiFrame.h	/^		BYTE				active_scan_duration;			\/\/ Active Scan Duration$/;"	m	struct:_tagCODI_SCAN_PAYLOAD
active_scan_duration	include/codiTypedef.h	/^		BYTE		active_scan_duration;$/;"	m	struct:_tagCOORDINATOR
actmin	include/endiFrame.h	/^		WORD					actmin;							\/\/ Active min$/;"	m	struct:_tagENDI_AMR_DATA
addr	include/endiFrame.h	/^		UINT					addr;							\/\/ ROM Address$/;"	m	struct:_tagENDI_LONG_ROMREAD_PAYLOAD
addr	include/endiFrame.h	/^		UINT					addr;							\/\/ ROM Address$/;"	m	struct:_tagENDI_LONG_ROM_PAYLOAD
addr	include/endiFrame.h	/^		WORD					addr;							\/\/ ROM Address$/;"	m	struct:_tagENDI_ROM_PAYLOAD
addr	include/endiFrame.h	/^        WORD                    addr;                           \/\/ ROM Address$/;"	m	struct:_tagENDI_ROMREAD_PAYLOAD
address_table_size	include/codiTypedef.h	/^        BYTE        address_table_size;						\/\/$/;"	m	struct:_tagCOORDINATOR
age	include/codiFrame.h	/^		BYTE				age;							\/\/ $/;"	m	struct:_tagCODI_NEIGHBOR_ENTRY
alarm	include/endiFrame.h	/^        BYTE                    alarm;                          \/\/ Alarm Flag$/;"	m	struct:_tagENDI_AMR_DATA
alarmFlag	include/endiFrame.h	/^        BYTE                    alarmFlag;                      \/\/ Alarm Flag (0:Off, 1~255: On)$/;"	m	struct:_tagENDI_METERING_INFO
amr	include/codiTypedef.h	/^		ENDI_AMR_INFO		amr;							\/\/ AMR information$/;"	m	struct:_tagENDDEVICEINFO
ansi	samples/ge/Operation.h	/^		ANSI_CONFIG		ansi;$/;"	m	struct:_tagONDEMANDPARAM
arEventHandle	include/common/_WinMultiThread.h	/^		HANDLE	arEventHandle[10];$/;"	m	struct:_THREADEVENTLIST
arNeed	include/typedef.h	/^		BYTE			arNeed[MAX_SESSION_WINDOW];$/;"	m	struct:_tagDATASTREAM
arWindow	include/typedef.h	/^		int				arWindow[MAX_SESSION_WINDOW];	\/\/ Window Array$/;"	m	struct:_tagDATASTREAM
atc_codi_tbl.if	samples/dump/cell/cellTableCreate.sql	/^create trigger if not exists atc_codi_d_tr$/;"	T
atoeui64	src/codiapi.cpp	/^int atoeui64(const char *pszString, EUI64 *id)$/;"	f
autoset	include/codiFrame.h	/^		BYTE				autoset;						\/\/ Auto setting$/;"	m	struct:_tagCODI_NETWORK_PAYLOAD
autoset	include/codiTypedef.h	/^        BYTE        autoset;                        		\/\/ Auto setting$/;"	m	struct:_tagCOORDINATOR
bApplied	include/common/Event.h	/^    	BOOL            bApplied;$/;"	m	struct:_tagEVENTHANDLE
bBinding	include/codiTypedef.h	/^		BOOL			bBinding;							\/\/ Binding flag$/;"	m	struct:_tagENDDEVICE
bBootloader	include/codiTypedef.h	/^		BOOL		bBootloader;							\/\/ Bootloader mode$/;"	m	struct:_tagCOORDINATOR
bConnected	include/codiTypedef.h	/^		BOOL			bConnected;							\/\/ Connection flag$/;"	m	struct:_tagENDDEVICE
bDirect	include/codiTypedef.h	/^        BOOL			bDirect;							\/\/ Direct Communication flag$/;"	m	struct:_tagENDDEVICE
bNoResponse	include/codiTypedef.h	/^		BOOL		bNoResponse;							\/\/ No response flag$/;"	m	struct:_tagCOORDINATOR
bOpen	samples/ge/Operation.h	/^		BOOL			bOpen;$/;"	m	struct:_tagONDEMANDPARAM
bOperationState	include/typedef.h	/^	BOOL	bOperationState;$/;"	m	struct:_tagMEMBERINFO
bParentBinding	include/codiTypedef.h	/^		BOOL			bParentBinding;						\/\/ Parent binding flag$/;"	m	struct:_tagENDDEVICE
bPassive	include/codiTypedef.h	/^		BOOL		bPassive;								\/\/ Passive mode$/;"	m	struct:_tagCOORDINATOR
bReference	include/codiTypedef.h	/^		BOOL			bReference;							\/\/ Current reference flag$/;"	m	struct:_tagENDDEVICE
bReply	samples/ge/Operation.h	/^		BOOL			bReply;$/;"	m	struct:_tagONDEMANDPARAM
bResult	samples/ge/Operation.h	/^		BOOL			bResult;$/;"	m	struct:_tagONDEMANDPARAM
bStarted	include/codiTypedef.h	/^		BOOL		bStarted;								\/\/ Start flag$/;"	m	struct:_tagCOORDINATOR
bStreamTimeout	include/typedef.h	/^		BOOL			bStreamTimeout;$/;"	m	struct:_tagWORKSESSION
bSuperParent	include/codiTypedef.h	/^        BOOL        bSuperParent;                           \/\/ Super Parent Network$/;"	m	struct:_tagCOORDINATOR
bTerminate	include/typedef.h	/^		BOOL			bTerminate;$/;"	m	struct:_tagDATASTREAM
bWatchdog	include/codiTypedef.h	/^        BOOL        bWatchdog;                              \/\/ Watchdog Check 여부$/;"	m	struct:_tagCOORDINATOR
bWindow	include/typedef.h	/^		BOOL			bWindow;$/;"	m	struct:_tagDATASTREAM
basePulse	include/endiFrame.h	/^		UINT					basePulse;						\/\/ Base pulse$/;"	m	struct:_tagENDI_METERING_INFO
basePulse	include/endiFrame.h	/^        BYTE                    basePulse[0];                   \/\/ Base Pulse$/;"	m	struct:_tagENDI_PUSH_BASEPULSE
baseTime	include/endiFrame.h	/^        TIMESTAMP5              baseTime;                       \/\/ Base Pulse Snapshot Time$/;"	m	struct:_tagENDI_PUSH_BASEPULSE
batteryVolt	include/endiFrame.h	/^		WORD					batteryVolt;					\/\/ Battery volt$/;"	m	struct:_tagENDI_METERING_INFO
battery_chg_state	include/endiFrame.h	/^        BYTE                    battery_chg_state;              \/\/ 0 : Charging, !0 : Complete$/;"	m	struct:_tagENDI_STATE_PAYLOAD
baudrate	include/codiFrame.h	/^		BYTE				baudrate;						\/\/ UART Baud Rate 설정$/;"	m	struct:_tagCODI_SERIAL_PAYLOAD
baudrate	include/codiTypedef.h	/^        BYTE        baudrate;                       		\/\/ UART Baud Rate ¼³A¤$/;"	m	struct:_tagCOORDINATOR
bootmsg	src/VirtualInterface.cpp	/^BYTE	*bootmsg	= (BYTE *)const_cast<char *>("\\x87\\x98\\x0\\x11\\x10");$/;"	v
buf	samples/ge/GeMeter.h	/^    BYTE       	buf[METERBUF_SIZE];$/;"	m	struct:_meterbuf
buffer	include/codiTypedef.h	/^        FRAMEDATA       *buffer;                            \/\/ Incomming Data Frame Buffer$/;"	m	struct:_tagENDDEVICE
buffer	include/common/MD5.h	/^        BYTE buffer[64];	\/* input buffer *\/$/;"	m	struct:CMD5::__anon2
build	include/codiFrame.h	/^		BYTE				build;							\/\/ Build version$/;"	m	struct:_tagCODI_BOOT_PAYLOAD
build	include/codiFrame.h	/^		BYTE				build;							\/\/ Build version$/;"	m	struct:_tagCODI_MODULE_PAYLOAD
build	include/codiTypedef.h	/^		BYTE		build;									\/\/ Build number$/;"	m	struct:_tagCOORDINATOR
bv	include/typedef.h	/^        BYTE bv;$/;"	m	union:_tagUNIONVALUE
categoryCount	include/endiFrame.h	/^        BYTE                    categoryCount;                  \/\/ Event Category Count$/;"	m	struct:_tagENDI_PUSH_EVT_HEADER
cetime_t	include/typedef.h	/^typedef DWORD							cetime_t;$/;"	t
cetime_t	include/typedef.h	/^typedef time_t							cetime_t;$/;"	t
ch	include/common/_WinSerialWriter.h	/^		char		ch;								\/\/ Ch to send$/;"	m	struct:_tagWRITEREQUEST
channel	include/codiFrame.h	/^		BYTE				channel;						\/\/ Channel$/;"	m	struct:_tagCODI_NETWORK_PAYLOAD
channel	include/codiFrame.h	/^		BYTE				channel;						\/\/ channel$/;"	m	struct:_tagCODI_ACTIVESCAN_PAYLOAD
channel	include/codiFrame.h	/^		BYTE				channel;						\/\/ channel$/;"	m	struct:_tagCODI_ENERGYSCAN_PAYLOAD
channel	include/codiFrame.h	/^		BYTE				channel;						\/\/ channel$/;"	m	struct:_tagCODI_SCANCOMPLETE_PAYLOAD
channel	include/codiTypedef.h	/^        BYTE        channel;                        		\/\/ Channel$/;"	m	struct:_tagCOORDINATOR
channel	include/endiFrame.h	/^		BYTE					channel;						\/\/ Primary Cannel$/;"	m	struct:_tagENDI_LEAVE_PAYLOAD
channelCount	include/endiFrame.h	/^        BYTE                    channelCount;                   \/\/ Channel Count$/;"	m	struct:_tagENDI_PUSH_HEADER
child_cnt	include/endiFrame.h	/^        BYTE                    child_cnt;                      \/\/ Current Child Node Count$/;"	m	struct:_tagENDI_STATE_PAYLOAD
child_id	include/endiFrame.h	/^		EUI64					child_id;						\/\/ Child EUI64 ID		$/;"	m	struct:_tagENDI_SUPER_PARENT_PAYLOAD
child_shortid	include/endiFrame.h	/^		WORD					child_shortid;					\/\/ Child short id$/;"	m	struct:_tagENDI_SUPER_PARENT_PAYLOAD
choice	include/endiFrame.h	/^        BYTE                    choice;                         \/\/ LP Choice$/;"	m	struct:_tagENDI_AMR_DATA
clearOperation	samples/ge/Operation.cpp	/^void COperation::clearOperation(ONDEMANDPARAM *pOndemand)$/;"	f	class:COperation
cmd	include/codiTypedef.h	/^		BYTE			cmd;								\/\/ Command type$/;"	m	struct:_tagCODIWAITREPLY
cmd	include/endiFrame.h	/^        BYTE        cmd;                                    \/\/ Command$/;"	m	struct:_tagENDI_3PARTY_HEADER
cmd_type	include/endiFrame.h	/^		BYTE					cmd_type;						\/\/ command type$/;"	m	struct:_tagENDI_COMMAND_PAYLOAD
cmd_type	include/endiFrame.h	/^		BYTE					cmd_type;						\/\/ command type$/;"	m	struct:_tagENDI_DISCOVERY_PAYLOAD
cnt	include/codiFrame.h	/^		BYTE				cnt;							\/\/ node index $/;"	m	struct:_tagCODI_KEY_TABLE_ENTRY
cnt	include/codiFrame.h	/^		BYTE				cnt;							\/\/ node index $/;"	m	struct:_tagCODI_NEIGHBOR_ENTRY
code	include/codiFrame.h	/^		BYTE				code;							\/\/ Error code$/;"	m	struct:_tagCODI_ERROR_PAYLOAD
code	include/codiFrame.h	/^		BYTE				code;							\/\/ Write response code$/;"	m	struct:_tagCODI_WRITE_PAYLOAD
code	include/endiFrame.h	/^		BYTE					code;							\/\/ Error code$/;"	m	struct:_tagENDI_ERROR_PAYLOAD
codi	include/codiTypedef.h	/^		COORDINATOR		*codi;								\/\/ Coordinator pointer$/;"	m	struct:_tagCODIWAITREPLY
codi	include/codiTypedef.h	/^		COORDINATOR		*codi;								\/\/ Coordinator pointer$/;"	m	struct:_tagENDDEVICE
codi	samples/ge/MeterParser.h	/^		HANDLE		codi;						\/\/ Coordinator Handle$/;"	m	struct:_tagCMDPARAM
codi	src/CoordinatorServer.h	/^		COORDINATOR		*codi;$/;"	m	struct:_tagCODIWORKSTREAM
codiBootload	src/codiapi.cpp	/^int codiBootload(HANDLE codi, int nType)$/;"	f
codiDevice	samples/aidon/aidon.cpp	/^CODIDEVICE	codiDevice =$/;"	v
codiDevice	samples/bypass/bypass.cpp	/^CODIDEVICE	codiDevice =$/;"	v
codiDevice	samples/dump/dump.cpp	/^CODIDEVICE	codiDevice =$/;"	v
codiDevice	samples/enditest/enditest.cpp	/^CODIDEVICE	codiDevice =$/;"	v
codiDevice	samples/ge/ge.cpp	/^CODIDEVICE	codiDevice =$/;"	v
codiDevice	samples/init/init.cpp	/^CODIDEVICE	codiDevice =$/;"	v
codiDevice	samples/rfmonitor/rfmonitor.cpp	/^CODIDEVICE	codiDevice =$/;"	v
codiDevice	samples/update/update.cpp	/^CODIDEVICE	codiDevice =$/;"	v
codiDownload	src/codiapi.cpp	/^int codiDownload(HANDLE codi, int nModemType, const char *pszFileName, const char *pszExt)$/;"	f
codiErrorMessage	src/codiapi.cpp	/^const char *codiErrorMessage(int nError)$/;"	f
codiExit	src/codiapi.cpp	/^int codiExit()$/;"	f
codiGetHandle	src/codiapi.cpp	/^HANDLE codiGetHandle(HANDLE codi)$/;"	f
codiGetLastCommunicationTime	src/codiapi.cpp	/^cetime_t codiGetLastCommunicationTime(HANDLE codi)$/;"	f
codiGetOption	src/codiapi.cpp	/^int codiGetOption(HANDLE codi, int *nOption)$/;"	f
codiGetProperty	src/codiapi.cpp	/^int codiGetProperty(HANDLE codi, int nProperty, BYTE *payload, int *nLength, int nTimeout)$/;"	f
codiGetState	src/codiapi.cpp	/^int codiGetState(HANDLE codi)$/;"	f
codiGetVersion	src/codiapi.cpp	/^int codiGetVersion(BYTE *nMajor, BYTE *nMinor, BYTE *nRevision)$/;"	f
codiGetWatchdogState	src/codiapi.cpp	/^BOOL codiGetWatchdogState(HANDLE codi)$/;"	f
codiInit	src/codiapi.cpp	/^int codiInit()$/;"	f
codiIsInitalized	src/codiapi.cpp	/^BOOL codiIsInitalized()$/;"	f
codiIsStarted	src/codiapi.cpp	/^BOOL codiIsStarted(HANDLE codi)$/;"	f
codiIsSuperParent	src/codiapi.cpp	/^BOOL codiIsSuperParent(HANDLE codi)$/;"	f
codiMulticast	src/codiapi.cpp	/^int codiMulticast(HANDLE codi, BYTE type, BYTE *payload, int nLength)$/;"	f
codiOnActiveScan	samples/aidon/aidon.cpp	/^void codiOnActiveScan(HANDLE codi, BYTE channel, WORD panid, BYTE *extpanid, BYTE expjoin, BYTE profile)$/;"	f
codiOnActiveScan	samples/bypass/bypass.cpp	/^void codiOnActiveScan(HANDLE codi, BYTE channel, WORD panid, BYTE *extpanid, BYTE expjoin, BYTE profile)$/;"	f
codiOnActiveScan	samples/dump/dump.cpp	/^void codiOnActiveScan(HANDLE codi, BYTE channel, WORD panid, BYTE *extpanid, BYTE expjoin, BYTE profile)$/;"	f
codiOnActiveScan	samples/enditest/enditest.cpp	/^void codiOnActiveScan(HANDLE codi, BYTE channel, WORD panid, BYTE *extpanid, BYTE expjoin, BYTE profile)$/;"	f
codiOnActiveScan	samples/ge/ge.cpp	/^void codiOnActiveScan(HANDLE codi, BYTE channel, WORD panid, BYTE *extpanid, BYTE expjoin, BYTE profile)$/;"	f
codiOnActiveScan	samples/init/init.cpp	/^void codiOnActiveScan(HANDLE codi, BYTE channel, WORD panid, BYTE *extpanid, BYTE expjoin, BYTE profile)$/;"	f
codiOnActiveScan	samples/rfmonitor/rfmonitor.cpp	/^void codiOnActiveScan(HANDLE codi, BYTE channel, WORD panid, BYTE *extpanid, BYTE expjoin, BYTE profile)$/;"	f
codiOnActiveScan	samples/update/update.cpp	/^void codiOnActiveScan(HANDLE codi, BYTE channel, WORD panid, BYTE *extpanid, BYTE expjoin, BYTE profile)$/;"	f
codiOnBoot	samples/aidon/aidon.cpp	/^void codiOnBoot(HANDLE codi, EUI64 *id, WORD shortid, BYTE fw, BYTE hw, BYTE zaif, BYTE zzif, BYTE build, BYTE rk)$/;"	f
codiOnBoot	samples/bypass/bypass.cpp	/^void codiOnBoot(HANDLE codi, EUI64 *id, WORD shortid, BYTE fw, BYTE hw, BYTE zaif, BYTE zzif, BYTE build, BYTE rk)$/;"	f
codiOnBoot	samples/dump/dump.cpp	/^void codiOnBoot(HANDLE codi, EUI64 *id, WORD shortid, BYTE fw, BYTE hw, BYTE zaif, BYTE zzif, BYTE build, BYTE rk)$/;"	f
codiOnBoot	samples/enditest/enditest.cpp	/^void codiOnBoot(HANDLE codi, EUI64 *id, WORD shortid, BYTE fw, BYTE hw, BYTE zaif, BYTE zzif, BYTE build, BYTE rk)$/;"	f
codiOnBoot	samples/ge/ge.cpp	/^void codiOnBoot(HANDLE codi, EUI64 *id, WORD shortid, BYTE fw, BYTE hw, BYTE zaif, BYTE zzif, BYTE build, BYTE rk)$/;"	f
codiOnBoot	samples/init/init.cpp	/^void codiOnBoot(HANDLE codi, EUI64 *id, WORD shortid, BYTE fw, BYTE hw, BYTE zaif, BYTE zzif, BYTE build, BYTE rk)$/;"	f
codiOnBoot	samples/rfmonitor/rfmonitor.cpp	/^void codiOnBoot(HANDLE codi, EUI64 *id, WORD shortid, BYTE fw, BYTE hw, BYTE zaif, BYTE zzif, BYTE build, BYTE rk)$/;"	f
codiOnBoot	samples/update/update.cpp	/^void codiOnBoot(HANDLE codi, EUI64 *id, WORD shortid, BYTE fw, BYTE hw, BYTE zaif, BYTE zzif, BYTE build, BYTE rk)$/;"	f
codiOnCommand	samples/aidon/aidon.cpp	/^void codiOnCommand(HANDLE codi, BYTE ctrl, BYTE type, BYTE *pBuffer, int nLength)$/;"	f
codiOnCommand	samples/bypass/bypass.cpp	/^void codiOnCommand(HANDLE codi, BYTE ctrl, BYTE type, BYTE *pBuffer, int nLength)$/;"	f
codiOnCommand	samples/dump/dump.cpp	/^void codiOnCommand(HANDLE codi, BYTE ctrl, BYTE type, BYTE *pBuffer, int nLength)$/;"	f
codiOnCommand	samples/enditest/enditest.cpp	/^void codiOnCommand(HANDLE codi, BYTE ctrl, BYTE type, BYTE *pBuffer, int nLength)$/;"	f
codiOnCommand	samples/ge/ge.cpp	/^void codiOnCommand(HANDLE codi, BYTE ctrl, BYTE type, BYTE *pBuffer, int nLength)$/;"	f
codiOnCommand	samples/init/init.cpp	/^void codiOnCommand(HANDLE codi, BYTE ctrl, BYTE type, BYTE *pBuffer, int nLength)$/;"	f
codiOnCommand	samples/rfmonitor/rfmonitor.cpp	/^void codiOnCommand(HANDLE codi, BYTE ctrl, BYTE type, BYTE *pBuffer, int nLength)$/;"	f
codiOnCommand	samples/update/update.cpp	/^void codiOnCommand(HANDLE codi, BYTE ctrl, BYTE type, BYTE *pBuffer, int nLength)$/;"	f
codiOnCommandError	samples/aidon/aidon.cpp	/^void codiOnCommandError(HANDLE codi, BYTE ctrl, BYTE cmd, BYTE code)$/;"	f
codiOnCommandError	samples/bypass/bypass.cpp	/^void codiOnCommandError(HANDLE codi, BYTE ctrl, BYTE cmd, BYTE code)$/;"	f
codiOnCommandError	samples/dump/dump.cpp	/^void codiOnCommandError(HANDLE codi, BYTE ctrl, BYTE cmd, BYTE code)$/;"	f
codiOnCommandError	samples/enditest/enditest.cpp	/^void codiOnCommandError(HANDLE codi, BYTE ctrl, BYTE cmd, BYTE code)$/;"	f
codiOnCommandError	samples/ge/ge.cpp	/^void codiOnCommandError(HANDLE codi, BYTE ctrl, BYTE cmd, BYTE code)$/;"	f
codiOnCommandError	samples/init/init.cpp	/^void codiOnCommandError(HANDLE codi, BYTE ctrl, BYTE cmd, BYTE code)$/;"	f
codiOnCommandError	samples/rfmonitor/rfmonitor.cpp	/^void codiOnCommandError(HANDLE codi, BYTE ctrl, BYTE cmd, BYTE code)$/;"	f
codiOnCommandError	samples/update/update.cpp	/^void codiOnCommandError(HANDLE codi, BYTE ctrl, BYTE cmd, BYTE code)$/;"	f
codiOnDeviceJoin	samples/aidon/aidon.cpp	/^void codiOnDeviceJoin(HANDLE codi, EUI64 *id, WORD shortid, WORD parentid, BYTE status)$/;"	f
codiOnDeviceJoin	samples/bypass/bypass.cpp	/^void codiOnDeviceJoin(HANDLE codi, EUI64 *id, WORD shortid, WORD parentid, BYTE status)$/;"	f
codiOnDeviceJoin	samples/dump/dump.cpp	/^void codiOnDeviceJoin(HANDLE codi, EUI64 *id, WORD shortid, WORD parentid, BYTE status)$/;"	f
codiOnDeviceJoin	samples/enditest/enditest.cpp	/^void codiOnDeviceJoin(HANDLE codi, EUI64 *id, WORD shortid, WORD parentid, BYTE status)$/;"	f
codiOnDeviceJoin	samples/ge/ge.cpp	/^void codiOnDeviceJoin(HANDLE codi, EUI64 *id, WORD shortid, WORD parentid, BYTE status)$/;"	f
codiOnDeviceJoin	samples/init/init.cpp	/^void codiOnDeviceJoin(HANDLE codi, EUI64 *id, WORD shortid, WORD parentid, BYTE status)$/;"	f
codiOnDeviceJoin	samples/rfmonitor/rfmonitor.cpp	/^void codiOnDeviceJoin(HANDLE codi, EUI64 *id, WORD shortid, WORD parentid, BYTE status)$/;"	f
codiOnDeviceJoin	samples/update/update.cpp	/^void codiOnDeviceJoin(HANDLE codi, EUI64 *id, WORD shortid, WORD parentid, BYTE status)$/;"	f
codiOnEnergyScan	samples/aidon/aidon.cpp	/^void codiOnEnergyScan(HANDLE codi, BYTE channel, BYTE rssi)$/;"	f
codiOnEnergyScan	samples/bypass/bypass.cpp	/^void codiOnEnergyScan(HANDLE codi, BYTE channel, BYTE rssi)$/;"	f
codiOnEnergyScan	samples/dump/dump.cpp	/^void codiOnEnergyScan(HANDLE codi, BYTE channel, BYTE rssi)$/;"	f
codiOnEnergyScan	samples/enditest/enditest.cpp	/^void codiOnEnergyScan(HANDLE codi, BYTE channel, BYTE rssi)$/;"	f
codiOnEnergyScan	samples/ge/ge.cpp	/^void codiOnEnergyScan(HANDLE codi, BYTE channel, BYTE rssi)$/;"	f
codiOnEnergyScan	samples/init/init.cpp	/^void codiOnEnergyScan(HANDLE codi, BYTE channel, BYTE rssi)$/;"	f
codiOnEnergyScan	samples/rfmonitor/rfmonitor.cpp	/^void codiOnEnergyScan(HANDLE codi, BYTE channel, BYTE rssi)$/;"	f
codiOnEnergyScan	samples/update/update.cpp	/^void codiOnEnergyScan(HANDLE codi, BYTE channel, BYTE rssi)$/;"	f
codiOnError	samples/aidon/aidon.cpp	/^void codiOnError(HANDLE codi, BYTE code)$/;"	f
codiOnError	samples/bypass/bypass.cpp	/^void codiOnError(HANDLE codi, BYTE code)$/;"	f
codiOnError	samples/dump/dump.cpp	/^void codiOnError(HANDLE codi, BYTE code)$/;"	f
codiOnError	samples/enditest/enditest.cpp	/^void codiOnError(HANDLE codi, BYTE code)$/;"	f
codiOnError	samples/ge/ge.cpp	/^void codiOnError(HANDLE codi, BYTE code)$/;"	f
codiOnError	samples/init/init.cpp	/^void codiOnError(HANDLE codi, BYTE code)$/;"	f
codiOnError	samples/rfmonitor/rfmonitor.cpp	/^void codiOnError(HANDLE codi, BYTE code)$/;"	f
codiOnError	samples/update/update.cpp	/^void codiOnError(HANDLE codi, BYTE code)$/;"	f
codiOnInformation	samples/aidon/aidon.cpp	/^void codiOnInformation(HANDLE codi, BYTE ctrl, BYTE type, BYTE *pBuffer, int nLength)$/;"	f
codiOnInformation	samples/bypass/bypass.cpp	/^void codiOnInformation(HANDLE codi, BYTE ctrl, BYTE type, BYTE *pBuffer, int nLength)$/;"	f
codiOnInformation	samples/dump/dump.cpp	/^void codiOnInformation(HANDLE codi, BYTE ctrl, BYTE type, BYTE *pBuffer, int nLength)$/;"	f
codiOnInformation	samples/enditest/enditest.cpp	/^void codiOnInformation(HANDLE codi, BYTE ctrl, BYTE type, BYTE *pBuffer, int nLength)$/;"	f
codiOnInformation	samples/ge/ge.cpp	/^void codiOnInformation(HANDLE codi, BYTE ctrl, BYTE type, BYTE *pBuffer, int nLength)$/;"	f
codiOnInformation	samples/init/init.cpp	/^void codiOnInformation(HANDLE codi, BYTE ctrl, BYTE type, BYTE *pBuffer, int nLength)$/;"	f
codiOnInformation	samples/rfmonitor/rfmonitor.cpp	/^void codiOnInformation(HANDLE codi, BYTE ctrl, BYTE type, BYTE *pBuffer, int nLength)$/;"	f
codiOnInformation	samples/update/update.cpp	/^void codiOnInformation(HANDLE codi, BYTE ctrl, BYTE type, BYTE *pBuffer, int nLength)$/;"	f
codiOnNoResponse	samples/aidon/aidon.cpp	/^void codiOnNoResponse(HANDLE codi, BOOL bResetNow)$/;"	f
codiOnNoResponse	samples/bypass/bypass.cpp	/^void codiOnNoResponse(HANDLE codi, BOOL bResetNow)$/;"	f
codiOnNoResponse	samples/dump/dump.cpp	/^void codiOnNoResponse(HANDLE codi, BOOL bResetNow)$/;"	f
codiOnNoResponse	samples/enditest/enditest.cpp	/^void codiOnNoResponse(HANDLE codi, BOOL bResetNow)$/;"	f
codiOnNoResponse	samples/ge/ge.cpp	/^void codiOnNoResponse(HANDLE codi, BOOL bResetNow)$/;"	f
codiOnNoResponse	samples/init/init.cpp	/^void codiOnNoResponse(HANDLE codi, BOOL bResetNow)$/;"	f
codiOnNoResponse	samples/rfmonitor/rfmonitor.cpp	/^void codiOnNoResponse(HANDLE codi, BOOL bResetNow)$/;"	f
codiOnNoResponse	samples/update/update.cpp	/^void codiOnNoResponse(HANDLE codi, BOOL bResetNow)$/;"	f
codiOnQueryRouteRecord	samples/aidon/aidon.cpp	/^BOOL codiOnQueryRouteRecord(HANDLE codi, EUI64 *id, WORD *shortid, BYTE *hops, WORD *path)$/;"	f
codiOnQueryRouteRecord	samples/bypass/bypass.cpp	/^BOOL codiOnQueryRouteRecord(HANDLE codi, EUI64 *id, WORD *shortid, BYTE *hops, WORD *path)$/;"	f
codiOnQueryRouteRecord	samples/dump/dump.cpp	/^BOOL codiOnQueryRouteRecord(HANDLE codi, EUI64 *id, WORD *shortid, BYTE *hops, WORD *path)$/;"	f
codiOnQueryRouteRecord	samples/enditest/enditest.cpp	/^BOOL codiOnQueryRouteRecord(HANDLE codi, EUI64 *id, WORD *shortid, BYTE *hops, WORD *path)$/;"	f
codiOnQueryRouteRecord	samples/ge/ge.cpp	/^BOOL codiOnQueryRouteRecord(HANDLE codi, EUI64 *id, WORD *shortid, BYTE *hops, WORD *path)$/;"	f
codiOnQueryRouteRecord	samples/init/init.cpp	/^BOOL codiOnQueryRouteRecord(HANDLE codi, EUI64 *id, WORD *shortid, BYTE *hops, WORD *path)$/;"	f
codiOnQueryRouteRecord	samples/rfmonitor/rfmonitor.cpp	/^BOOL codiOnQueryRouteRecord(HANDLE codi, EUI64 *id, WORD *shortid, BYTE *hops, WORD *path)$/;"	f
codiOnQueryRouteRecord	samples/update/update.cpp	/^BOOL codiOnQueryRouteRecord(HANDLE codi, EUI64 *id, WORD *shortid, BYTE *hops, WORD *path)$/;"	f
codiOnQuerySuperParent	samples/aidon/aidon.cpp	/^BOOL codiOnQuerySuperParent(EUI64 *id, EUI64 *parent, WORD *shortid, BYTE *hops, WORD *path)$/;"	f
codiOnQuerySuperParent	samples/bypass/bypass.cpp	/^BOOL codiOnQuerySuperParent(EUI64 *id, EUI64 *parent, WORD *shortid, BYTE *hops, WORD *path)$/;"	f
codiOnQuerySuperParent	samples/dump/dump.cpp	/^BOOL codiOnQuerySuperParent(EUI64 *id, EUI64 *parent, WORD *shortid, BYTE *hops, WORD *path)$/;"	f
codiOnQuerySuperParent	samples/enditest/enditest.cpp	/^BOOL codiOnQuerySuperParent(EUI64 *id, EUI64 *parent, WORD *shortid, BYTE *hops, WORD *path)$/;"	f
codiOnQuerySuperParent	samples/ge/ge.cpp	/^BOOL codiOnQuerySuperParent(EUI64 *id, EUI64 *parent, WORD *shortid, BYTE *hops, WORD *path)$/;"	f
codiOnQuerySuperParent	samples/init/init.cpp	/^BOOL codiOnQuerySuperParent(EUI64 *id, EUI64 *parent, WORD *shortid, BYTE *hops, WORD *path)$/;"	f
codiOnQuerySuperParent	samples/rfmonitor/rfmonitor.cpp	/^BOOL codiOnQuerySuperParent(EUI64 *id, EUI64 *parent, WORD *shortid, BYTE *hops, WORD *path)$/;"	f
codiOnQuerySuperParent	samples/update/update.cpp	/^BOOL codiOnQuerySuperParent(EUI64 *id, EUI64 *parent, WORD *shortid, BYTE *hops, WORD *path)$/;"	f
codiOnRegister	samples/aidon/aidon.cpp	/^void codiOnRegister(HANDLE codi, CODIDEVICE *device)$/;"	f
codiOnRegister	samples/bypass/bypass.cpp	/^void codiOnRegister(HANDLE codi, CODIDEVICE *device)$/;"	f
codiOnRegister	samples/dump/dump.cpp	/^void codiOnRegister(HANDLE codi, CODIDEVICE *device)$/;"	f
codiOnRegister	samples/enditest/enditest.cpp	/^void codiOnRegister(HANDLE codi, CODIDEVICE *device)$/;"	f
codiOnRegister	samples/ge/ge.cpp	/^void codiOnRegister(HANDLE codi, CODIDEVICE *device)$/;"	f
codiOnRegister	samples/init/init.cpp	/^void codiOnRegister(HANDLE codi, CODIDEVICE *device)$/;"	f
codiOnRegister	samples/rfmonitor/rfmonitor.cpp	/^void codiOnRegister(HANDLE codi, CODIDEVICE *device)$/;"	f
codiOnRegister	samples/update/update.cpp	/^void codiOnRegister(HANDLE codi, CODIDEVICE *device)$/;"	f
codiOnRouteRecord	samples/aidon/aidon.cpp	/^void codiOnRouteRecord(HANDLE codi, EUI64 *id, WORD shortid, BYTE hops, WORD *path)$/;"	f
codiOnRouteRecord	samples/bypass/bypass.cpp	/^void codiOnRouteRecord(HANDLE codi, EUI64 *id, WORD shortid, BYTE hops, WORD *path)$/;"	f
codiOnRouteRecord	samples/dump/dump.cpp	/^void codiOnRouteRecord(HANDLE codi, EUI64 *id, WORD shortid, BYTE hops, WORD *path)$/;"	f
codiOnRouteRecord	samples/enditest/enditest.cpp	/^void codiOnRouteRecord(HANDLE codi, EUI64 *id, WORD shortid, BYTE hops, WORD *path)$/;"	f
codiOnRouteRecord	samples/ge/ge.cpp	/^void codiOnRouteRecord(HANDLE codi, EUI64 *id, WORD shortid, BYTE hops, WORD *path)$/;"	f
codiOnRouteRecord	samples/init/init.cpp	/^void codiOnRouteRecord(HANDLE codi, EUI64 *id, WORD shortid, BYTE hops, WORD *path)$/;"	f
codiOnRouteRecord	samples/rfmonitor/rfmonitor.cpp	/^void codiOnRouteRecord(HANDLE codi, EUI64 *id, WORD shortid, BYTE hops, WORD *path)$/;"	f
codiOnRouteRecord	samples/update/update.cpp	/^void codiOnRouteRecord(HANDLE codi, EUI64 *id, WORD shortid, BYTE hops, WORD *path)$/;"	f
codiOnScanComplete	samples/aidon/aidon.cpp	/^void codiOnScanComplete(HANDLE codi, BYTE channel, BYTE status)$/;"	f
codiOnScanComplete	samples/bypass/bypass.cpp	/^void codiOnScanComplete(HANDLE codi, BYTE channel, BYTE status)$/;"	f
codiOnScanComplete	samples/dump/dump.cpp	/^void codiOnScanComplete(HANDLE codi, BYTE channel, BYTE status)$/;"	f
codiOnScanComplete	samples/enditest/enditest.cpp	/^void codiOnScanComplete(HANDLE codi, BYTE channel, BYTE status)$/;"	f
codiOnScanComplete	samples/ge/ge.cpp	/^void codiOnScanComplete(HANDLE codi, BYTE channel, BYTE status)$/;"	f
codiOnScanComplete	samples/init/init.cpp	/^void codiOnScanComplete(HANDLE codi, BYTE channel, BYTE status)$/;"	f
codiOnScanComplete	samples/rfmonitor/rfmonitor.cpp	/^void codiOnScanComplete(HANDLE codi, BYTE channel, BYTE status)$/;"	f
codiOnScanComplete	samples/update/update.cpp	/^void codiOnScanComplete(HANDLE codi, BYTE channel, BYTE status)$/;"	f
codiOnSend	samples/aidon/aidon.cpp	/^void codiOnSend(HANDLE codi, BYTE ctrl, BYTE type, BYTE *payload, int nLength)$/;"	f
codiOnSend	samples/bypass/bypass.cpp	/^void codiOnSend(HANDLE codi, BYTE ctrl, BYTE type, BYTE *payload, int nLength)$/;"	f
codiOnSend	samples/dump/dump.cpp	/^void codiOnSend(HANDLE codi, BYTE ctrl, BYTE type, BYTE *payload, int nLength)$/;"	f
codiOnSend	samples/enditest/enditest.cpp	/^void codiOnSend(HANDLE codi, BYTE ctrl, BYTE type, BYTE *payload, int nLength)$/;"	f
codiOnSend	samples/ge/ge.cpp	/^void codiOnSend(HANDLE codi, BYTE ctrl, BYTE type, BYTE *payload, int nLength)$/;"	f
codiOnSend	samples/init/init.cpp	/^void codiOnSend(HANDLE codi, BYTE ctrl, BYTE type, BYTE *payload, int nLength)$/;"	f
codiOnSend	samples/rfmonitor/rfmonitor.cpp	/^void codiOnSend(HANDLE codi, BYTE ctrl, BYTE type, BYTE *payload, int nLength)$/;"	f
codiOnSend	samples/update/update.cpp	/^void codiOnSend(HANDLE codi, BYTE ctrl, BYTE type, BYTE *payload, int nLength)$/;"	f
codiOnShutdown	samples/aidon/aidon.cpp	/^void codiOnShutdown(HANDLE codi)$/;"	f
codiOnShutdown	samples/bypass/bypass.cpp	/^void codiOnShutdown(HANDLE codi)$/;"	f
codiOnShutdown	samples/dump/dump.cpp	/^void codiOnShutdown(HANDLE codi)$/;"	f
codiOnShutdown	samples/enditest/enditest.cpp	/^void codiOnShutdown(HANDLE codi)$/;"	f
codiOnShutdown	samples/ge/ge.cpp	/^void codiOnShutdown(HANDLE codi)$/;"	f
codiOnShutdown	samples/init/init.cpp	/^void codiOnShutdown(HANDLE codi)$/;"	f
codiOnShutdown	samples/rfmonitor/rfmonitor.cpp	/^void codiOnShutdown(HANDLE codi)$/;"	f
codiOnShutdown	samples/update/update.cpp	/^void codiOnShutdown(HANDLE codi)$/;"	f
codiOnStackStatus	samples/aidon/aidon.cpp	/^void codiOnStackStatus(HANDLE codi, BYTE status)$/;"	f
codiOnStackStatus	samples/bypass/bypass.cpp	/^void codiOnStackStatus(HANDLE codi, BYTE status)$/;"	f
codiOnStackStatus	samples/dump/dump.cpp	/^void codiOnStackStatus(HANDLE codi, BYTE status)$/;"	f
codiOnStackStatus	samples/enditest/enditest.cpp	/^void codiOnStackStatus(HANDLE codi, BYTE status)$/;"	f
codiOnStackStatus	samples/ge/ge.cpp	/^void codiOnStackStatus(HANDLE codi, BYTE status)$/;"	f
codiOnStackStatus	samples/init/init.cpp	/^void codiOnStackStatus(HANDLE codi, BYTE status)$/;"	f
codiOnStackStatus	samples/rfmonitor/rfmonitor.cpp	/^void codiOnStackStatus(HANDLE codi, BYTE status)$/;"	f
codiOnStackStatus	samples/update/update.cpp	/^void codiOnStackStatus(HANDLE codi, BYTE status)$/;"	f
codiOnStartup	samples/aidon/aidon.cpp	/^void codiOnStartup(HANDLE codi)$/;"	f
codiOnStartup	samples/bypass/bypass.cpp	/^void codiOnStartup(HANDLE codi)$/;"	f
codiOnStartup	samples/dump/dump.cpp	/^void codiOnStartup(HANDLE codi)$/;"	f
codiOnStartup	samples/enditest/enditest.cpp	/^void codiOnStartup(HANDLE codi)$/;"	f
codiOnStartup	samples/ge/ge.cpp	/^void codiOnStartup(HANDLE codi)$/;"	f
codiOnStartup	samples/init/init.cpp	/^void codiOnStartup(HANDLE codi)$/;"	f
codiOnStartup	samples/rfmonitor/rfmonitor.cpp	/^void codiOnStartup(HANDLE codi)$/;"	f
codiOnStartup	samples/update/update.cpp	/^void codiOnStartup(HANDLE codi)$/;"	f
codiOnUnregister	samples/aidon/aidon.cpp	/^void codiOnUnregister(HANDLE codi, CODIDEVICE *device)$/;"	f
codiOnUnregister	samples/bypass/bypass.cpp	/^void codiOnUnregister(HANDLE codi, CODIDEVICE *device)$/;"	f
codiOnUnregister	samples/dump/dump.cpp	/^void codiOnUnregister(HANDLE codi, CODIDEVICE *device)$/;"	f
codiOnUnregister	samples/enditest/enditest.cpp	/^void codiOnUnregister(HANDLE codi, CODIDEVICE *device)$/;"	f
codiOnUnregister	samples/ge/ge.cpp	/^void codiOnUnregister(HANDLE codi, CODIDEVICE *device)$/;"	f
codiOnUnregister	samples/init/init.cpp	/^void codiOnUnregister(HANDLE codi, CODIDEVICE *device)$/;"	f
codiOnUnregister	samples/rfmonitor/rfmonitor.cpp	/^void codiOnUnregister(HANDLE codi, CODIDEVICE *device)$/;"	f
codiOnUnregister	samples/update/update.cpp	/^void codiOnUnregister(HANDLE codi, CODIDEVICE *device)$/;"	f
codiPlayback	src/codiapi.cpp	/^int codiPlayback(HANDLE codi, BYTE *frame, int nLength)$/;"	f
codiRegister	src/codiapi.cpp	/^int codiRegister(HANDLE *codi, CODIDEVICE *pDevice)$/;"	f
codiReset	src/codiapi.cpp	/^int codiReset(HANDLE codi)$/;"	f
codiSetOption	src/codiapi.cpp	/^int codiSetOption(HANDLE codi, int nOption)$/;"	f
codiSetProperty	src/codiapi.cpp	/^int codiSetProperty(HANDLE codi, int nProperty, BYTE *payload, int nLength, int nTimeout)$/;"	f
codiSetWatchdogState	src/codiapi.cpp	/^BOOL codiSetWatchdogState(HANDLE codi, BOOL bState)$/;"	f
codiShutdown	src/codiapi.cpp	/^int codiShutdown(HANDLE codi)$/;"	f
codiStartup	src/codiapi.cpp	/^int codiStartup(HANDLE codi)$/;"	f
codiSync	src/codiapi.cpp	/^int codiSync(HANDLE codi, int nInterval)$/;"	f
codiUnregister	src/codiapi.cpp	/^int codiUnregister(HANDLE codi)$/;"	f
commandCreateTime	include/typedef.h	/^	TIMESTAMP	commandCreateTime;$/;"	m	struct:_tagGROUPCOMMANDINFO
commandExecTime	include/typedef.h	/^	TIMESTAMP	commandExecTime;$/;"	m	struct:_tagGROUPCOMMANDINFO
commandOID	include/typedef.h	/^	OID3	commandOID;$/;"	m	struct:_tagGROUPCOMMANDINFO
config	samples/ge/Operation.h	/^		METER_CONFIG	config;$/;"	m	struct:_tagONDEMANDPARAM
count	include/common/MD5.h	/^        UINT count[2];		\/* number of bits, modulo 2^64 (lsb first) *\/$/;"	m	struct:CMD5::__anon2
crc	samples/ge/GeMeter.h	/^		WORD		crc;$/;"	m	struct:_tagANSI_TAIL
crc	samples/ge/GeMeter.h	/^		WORD		crc;$/;"	m	struct:_tagPACKET_TAIL
ctrl	include/codiFrame.h	/^		BYTE				ctrl;							\/\/ Frame control$/;"	m	struct:_tagCODI_HEADER
ctrl	include/endiFrame.h	/^        BYTE        ctrl;                                       \/\/ 7bit(flow:req=0,res=1), 6bit(tail=1), 5~0bit sequence$/;"	m	struct:_tagENDI_NAN_PAYLOAD
ctrl	samples/ge/GeMeter.h	/^		BYTE		ctrl;$/;"	m	struct:_tagANSI_HEADER
curConsum	include/endiFrame.h	/^        WORD                    curConsum;                      \/\/ Current Consumption$/;"	m	struct:_tagENDI_METERING_INFO
curPulse	include/endiFrame.h	/^		UINT					curPulse;						\/\/ Current pulse$/;"	m	struct:_tagENDI_METERING_INFO
curTime	include/endiFrame.h	/^		GMTTIMESTAMP			curTime;						\/\/ Current time$/;"	m	struct:_tagENDI_METERING_INFO
currentPulse	include/endiFrame.h	/^        BYTE                    currentPulse[0];                \/\/ Current Pulse$/;"	m	struct:_tagENDI_PUSH_HEADER
currentTime	include/endiFrame.h	/^        TIMESTAMP6              currentTime;                    \/\/ Current Time$/;"	m	struct:_tagENDI_PUSH_HEADER
currentTime	include/endiFrame.h	/^        TIMESTAMP6              currentTime;                    \/\/ Meter Current Time$/;"	m	struct:_tagENDI_PUSH_EVT_HEADER
data	include/codiTypedef.h	/^    ENDI_DATA_FRAME *       data;$/;"	m	struct:_tagFRAMEDATA
data	include/common/LinkedList.h	/^		TYPE	data;$/;"	m	struct:CLinkedList::_tagLINKNODE
data	include/endiFrame.h	/^		BYTE					data[CODI_MAX_PAYLOAD_SIZE];	\/\/ Bypass data$/;"	m	struct:_tagENDI_BYPASS_PAYLOAD
data	include/endiFrame.h	/^		BYTE					data[CODI_MAX_PAYLOAD_SIZE];	\/\/ Frame payload$/;"	m	struct:_tagENDI_COMMAND_PAYLOAD
data	include/endiFrame.h	/^		BYTE					data[CODI_MAX_PAYLOAD_SIZE];	\/\/ Frame payload$/;"	m	struct:_tagENDI_LONG_ROM_PAYLOAD
data	include/endiFrame.h	/^		BYTE					data[CODI_MAX_PAYLOAD_SIZE];	\/\/ Frame payload$/;"	m	struct:_tagENDI_PUSH_FRAME
data	include/endiFrame.h	/^		BYTE					data[CODI_MAX_PAYLOAD_SIZE];	\/\/ Frame payload$/;"	m	struct:_tagENDI_ROM_PAYLOAD
data	include/endiFrame.h	/^		BYTE        data[ZIGBEE_MAX_PAYLOAD_SIZE];	            \/\/ NAN data$/;"	m	struct:_tagENDI_NAN_PAYLOAD
data	include/endiFrame.h	/^		ENDI_AMR_DATA			data;							\/\/ AMR data$/;"	m	struct:_tagENDI_AMR_PAYLOAD
data	include/endiFrame.h	/^        BYTE                    data[0];                        \/\/ Event Data$/;"	m	struct:_tagPUSH_EVENT
data	include/endiFrame.h	/^        BYTE        data[0];$/;"	m	struct:_tagMBUS_METERING_PAYLOAD
data	samples/ge/GeMeter.h	/^		BYTE		data[128];$/;"	m	struct:_tagANSI_FRAME
data	samples/ge/GeMeter.h	/^		char		data[0];$/;"	m	struct:_tagPACKET_TABLE
data	samples/ge/i210.cpp	/^        BYTE    data[0];$/;"	m	struct:_tagGETABLE	file:
dataFormatLength	include/endiFrame.h	/^        BYTE                    dataFormatLength;               \/\/ bit 7~4:Current Pulse length, 3~0:LP Length$/;"	m	struct:_tagENDI_PUSH_HEADER
databit	include/codiFrame.h	/^		BYTE				databit;						\/\/ UART 데이터 비트 설정$/;"	m	struct:_tagCODI_SERIAL_PAYLOAD
databit	include/codiTypedef.h	/^        BYTE        databit;                        		\/\/ UART$/;"	m	struct:_tagCOORDINATOR
date	include/endiFrame.h	/^        TIMEDATE    date;$/;"	m	struct:_tagMBUS_METERING_PAYLOAD
day	include/typedef.h	/^		BYTE			day;						\/\/ Day$/;"	m	struct:_tagGMTTIMESTAMP
day	include/typedef.h	/^		BYTE			day;						\/\/ Day$/;"	m	struct:_tagTIMESTAMP
day	include/typedef.h	/^		BYTE			day;						\/\/ Day$/;"	m	struct:_tagTIMESTAMP5
day	include/typedef.h	/^		BYTE			day;						\/\/ Day$/;"	m	struct:_tagTIMESTAMP6
day	include/typedef.h	/^		BYTE			day;						\/\/ day$/;"	m	struct:_tagTIMEDATE
daymask	include/endiFrame.h	/^		BYTE					daymask[4];						\/\/ Metering day$/;"	m	struct:_tagENDI_AMR_DATA
dayofweek	samples/ge/i210.cpp	/^const char *dayofweek[] 	 = { "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday" };$/;"	v
deleteOperation	samples/ge/Operation.cpp	/^void COperation::deleteOperation(ONDEMANDPARAM *pOndemand)$/;"	f	class:COperation
device	include/codiTypedef.h	/^		CODIDEVICE	device;									\/\/ Device configuration$/;"	m	struct:_tagCOORDINATOR
discovery	include/codiTypedef.h	/^        BYTE        discovery;                              \/\/ Route Discovery Option$/;"	m	struct:_tagCOORDINATOR
dot1	include/typedef.h	/^		BYTE			dot1;						\/\/ DOT1$/;"	m	struct:_tagIPADDR
dot2	include/typedef.h	/^		BYTE			dot2;						\/\/ DOT2$/;"	m	struct:_tagIPADDR
dot3	include/typedef.h	/^		BYTE			dot3;						\/\/ DOT3$/;"	m	struct:_tagIPADDR
dot4	include/typedef.h	/^		BYTE			dot4;						\/\/ DOT4$/;"	m	struct:_tagIPADDR
dst	include/typedef.h	/^		WORD			dst;						\/\/ DST Value$/;"	m	struct:_tagGMTTIMESTAMP
duration	include/codiFrame.h	/^		BYTE				duration;						\/\/ Energy Scan Duration$/;"	m	struct:_tagCODI_SCANNETWORK_PAYLOAD
dv	include/typedef.h	/^        double dv;$/;"	m	union:_tagUNIONVALUE
dwHandle	include/common/Chunk.h	/^		void	*dwHandle;					\/\/ CChunk Class Pointer$/;"	m	struct:_tagCHUNK
dwParam	include/typedef.h	/^		UINT_PTR        dwParam;					\/\/ Parameter$/;"	m	struct:_tagWORKSESSION
dwParam	include/typedef.h	/^        UINT_PTR        dwParam;					\/\/ User Save Data$/;"	m	struct:_tagDATASTREAM
dwSize	include/common/_WinSerialWriter.h	/^		DWORD		dwSize;							\/\/ Size of buffer$/;"	m	struct:_tagWRITEREQUEST
dwUserData	include/typedef.h	/^		UINT_PTR        dwUserData;					\/\/ User Save Data$/;"	m	struct:_tagWORKSESSION
dwWriteType	include/common/_WinSerialWriter.h	/^		DWORD		dwWriteType;					\/\/ char, file start, file abort, file packet$/;"	m	struct:_tagWRITEREQUEST
edge_mask	include/gpio/gpio.h	/^        int        edge_mask;$/;"	m	struct:_tagGPIOINTENTRY
endi	samples/ge/Operation.h	/^		HANDLE			endi;$/;"	m	struct:_tagONDEMANDPARAM
endiBind	src/codiapi.cpp	/^int endiBind(HANDLE codi, EUI64 *id, BYTE type, int nTimeout, BOOL bExtendedTimeout)$/;"	f
endiBypass	src/codiapi.cpp	/^int endiBypass(HANDLE endi, BYTE *payload, int nLength, int nTimeout)$/;"	f
endiClose	src/codiapi.cpp	/^int endiClose(HANDLE endi)$/;"	f
endiCommandRead	src/codiapi.cpp	/^int endiCommandRead(HANDLE endi, BYTE cmd, BYTE *data, int nLength, BYTE *result, int *nSize, int nTimeout)$/;"	f
endiCommandWrite	src/codiapi.cpp	/^int endiCommandWrite(HANDLE endi, BYTE cmd, BYTE *data, int nLength, BYTE *result, int *nSize, int nTimeout)$/;"	f
endiConnect	src/codiapi.cpp	/^int endiConnect(HANDLE endi, int nTimeout, BOOL bEndDevice)$/;"	f
endiConnectDirect	src/codiapi.cpp	/^int endiConnectDirect(HANDLE endi, WORD shortid, int nTimeout, BOOL bEndDevice)$/;"	f
endiConnectWithRouteRecord	src/codiapi.cpp	/^int endiConnectWithRouteRecord(HANDLE endi, WORD shortid, BYTE hops, WORD *path, int nTimeout, BOOL bEndDevice)$/;"	f
endiDisconnect	src/codiapi.cpp	/^int endiDisconnect(HANDLE endi)$/;"	f
endiDisconnectDirectConnection	src/codiapi.cpp	/^int endiDisconnectDirectConnection(HANDLE endi)$/;"	f
endiGetHandle	src/codiapi.cpp	/^HANDLE endiGetHandle(EUI64 * id)$/;"	f
endiGetOption	src/codiapi.cpp	/^int endiGetOption(HANDLE endi, int nOption, int *nValue)$/;"	f
endiIsConnected	src/codiapi.cpp	/^BOOL endiIsConnected(HANDLE endi)$/;"	f
endiIsError	src/codiapi.cpp	/^BOOL endiIsError(HANDLE endi)$/;"	f
endiLeave	src/codiapi.cpp	/^int endiLeave(HANDLE endi, BYTE joinTime, BYTE channel, WORD panid, int nTimeout)$/;"	f
endiLink	src/codiapi.cpp	/^int endiLink(HANDLE codi, EUI64 *id, BYTE seq, BYTE type, int nTimeout)$/;"	f
endiOnAmrData	samples/aidon/aidon.cpp	/^void endiOnAmrData(HANDLE codi, HANDLE endi, BYTE ctrl, ENDI_AMR_PAYLOAD *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnAmrData	samples/bypass/bypass.cpp	/^void endiOnAmrData(HANDLE codi, HANDLE endi, BYTE ctrl, ENDI_AMR_PAYLOAD *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnAmrData	samples/dump/dump.cpp	/^void endiOnAmrData(HANDLE codi, HANDLE endi, BYTE ctrl, ENDI_AMR_PAYLOAD *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnAmrData	samples/enditest/enditest.cpp	/^void endiOnAmrData(HANDLE codi, HANDLE endi, BYTE ctrl, ENDI_AMR_PAYLOAD *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnAmrData	samples/ge/ge.cpp	/^void endiOnAmrData(HANDLE codi, HANDLE endi, BYTE ctrl, ENDI_AMR_PAYLOAD *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnAmrData	samples/init/init.cpp	/^void endiOnAmrData(HANDLE codi, HANDLE endi, BYTE ctrl, ENDI_AMR_PAYLOAD *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnAmrData	samples/rfmonitor/rfmonitor.cpp	/^void endiOnAmrData(HANDLE codi, HANDLE endi, BYTE ctrl, ENDI_AMR_PAYLOAD *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnAmrData	samples/update/update.cpp	/^void endiOnAmrData(HANDLE codi, HANDLE endi, BYTE ctrl, ENDI_AMR_PAYLOAD *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnBypass	samples/aidon/aidon.cpp	/^void endiOnBypass(HANDLE codi, HANDLE endi, BYTE ctrl, BYTE seq, BYTE *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnBypass	samples/bypass/bypass.cpp	/^void endiOnBypass(HANDLE codi, HANDLE endi, BYTE ctrl, BYTE seq, BYTE *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnBypass	samples/dump/dump.cpp	/^void endiOnBypass(HANDLE codi, HANDLE endi, BYTE ctrl, BYTE seq, BYTE *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnBypass	samples/enditest/enditest.cpp	/^void endiOnBypass(HANDLE codi, HANDLE endi, BYTE ctrl, BYTE seq, BYTE *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnBypass	samples/ge/ge.cpp	/^void endiOnBypass(HANDLE codi, HANDLE endi, BYTE ctrl, BYTE seq, BYTE *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnBypass	samples/init/init.cpp	/^void endiOnBypass(HANDLE codi, HANDLE endi, BYTE ctrl, BYTE seq, BYTE *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnBypass	samples/rfmonitor/rfmonitor.cpp	/^void endiOnBypass(HANDLE codi, HANDLE endi, BYTE ctrl, BYTE seq, BYTE *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnBypass	samples/update/update.cpp	/^void endiOnBypass(HANDLE codi, HANDLE endi, BYTE ctrl, BYTE seq, BYTE *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnCommand	samples/aidon/aidon.cpp	/^void endiOnCommand(HANDLE codi, HANDLE endi, BYTE ctrl, ENDI_COMMAND_PAYLOAD *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnCommand	samples/bypass/bypass.cpp	/^void endiOnCommand(HANDLE codi, HANDLE endi, BYTE ctrl, ENDI_COMMAND_PAYLOAD *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnCommand	samples/dump/dump.cpp	/^void endiOnCommand(HANDLE codi, HANDLE endi, BYTE ctrl, ENDI_COMMAND_PAYLOAD *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnCommand	samples/enditest/enditest.cpp	/^void endiOnCommand(HANDLE codi, HANDLE endi, BYTE ctrl, ENDI_COMMAND_PAYLOAD *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnCommand	samples/ge/ge.cpp	/^void endiOnCommand(HANDLE codi, HANDLE endi, BYTE ctrl, ENDI_COMMAND_PAYLOAD *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnCommand	samples/init/init.cpp	/^void endiOnCommand(HANDLE codi, HANDLE endi, BYTE ctrl, ENDI_COMMAND_PAYLOAD *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnCommand	samples/rfmonitor/rfmonitor.cpp	/^void endiOnCommand(HANDLE codi, HANDLE endi, BYTE ctrl, ENDI_COMMAND_PAYLOAD *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnCommand	samples/update/update.cpp	/^void endiOnCommand(HANDLE codi, HANDLE endi, BYTE ctrl, ENDI_COMMAND_PAYLOAD *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnConnect	samples/aidon/aidon.cpp	/^void endiOnConnect(HANDLE codi, HANDLE endi)$/;"	f
endiOnConnect	samples/bypass/bypass.cpp	/^void endiOnConnect(HANDLE codi, HANDLE endi)$/;"	f
endiOnConnect	samples/dump/dump.cpp	/^void endiOnConnect(HANDLE codi, HANDLE endi)$/;"	f
endiOnConnect	samples/enditest/enditest.cpp	/^void endiOnConnect(HANDLE codi, HANDLE endi)$/;"	f
endiOnConnect	samples/ge/ge.cpp	/^void endiOnConnect(HANDLE codi, HANDLE endi)$/;"	f
endiOnConnect	samples/init/init.cpp	/^void endiOnConnect(HANDLE codi, HANDLE endi)$/;"	f
endiOnConnect	samples/rfmonitor/rfmonitor.cpp	/^void endiOnConnect(HANDLE codi, HANDLE endi)$/;"	f
endiOnConnect	samples/update/update.cpp	/^void endiOnConnect(HANDLE codi, HANDLE endi)$/;"	f
endiOnData	samples/aidon/aidon.cpp	/^void endiOnData(HANDLE codi, EUI64 *id, BYTE seq, BYTE *data, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnData	samples/bypass/bypass.cpp	/^void endiOnData(HANDLE codi, EUI64 *id, BYTE seq, BYTE *data, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnData	samples/dump/dump.cpp	/^void endiOnData(HANDLE codi, EUI64 *id, BYTE seq, BYTE *data, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnData	samples/enditest/enditest.cpp	/^void endiOnData(HANDLE codi, EUI64 *id, BYTE seq, BYTE *data, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnData	samples/ge/ge.cpp	/^void endiOnData(HANDLE codi, EUI64 *id, BYTE seq, BYTE *data, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnData	samples/init/init.cpp	/^void endiOnData(HANDLE codi, EUI64 *id, BYTE seq, BYTE *data, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnData	samples/rfmonitor/rfmonitor.cpp	/^void endiOnData(HANDLE codi, EUI64 *id, BYTE seq, BYTE *data, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnData	samples/update/update.cpp	/^void endiOnData(HANDLE codi, EUI64 *id, BYTE seq, BYTE *data, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnDisconnect	samples/aidon/aidon.cpp	/^void endiOnDisconnect(HANDLE codi, HANDLE endi)$/;"	f
endiOnDisconnect	samples/bypass/bypass.cpp	/^void endiOnDisconnect(HANDLE codi, HANDLE endi)$/;"	f
endiOnDisconnect	samples/dump/dump.cpp	/^void endiOnDisconnect(HANDLE codi, HANDLE endi)$/;"	f
endiOnDisconnect	samples/enditest/enditest.cpp	/^void endiOnDisconnect(HANDLE codi, HANDLE endi)$/;"	f
endiOnDisconnect	samples/ge/ge.cpp	/^void endiOnDisconnect(HANDLE codi, HANDLE endi)$/;"	f
endiOnDisconnect	samples/init/init.cpp	/^void endiOnDisconnect(HANDLE codi, HANDLE endi)$/;"	f
endiOnDisconnect	samples/rfmonitor/rfmonitor.cpp	/^void endiOnDisconnect(HANDLE codi, HANDLE endi)$/;"	f
endiOnDisconnect	samples/update/update.cpp	/^void endiOnDisconnect(HANDLE codi, HANDLE endi)$/;"	f
endiOnDiscovery	samples/aidon/aidon.cpp	/^void endiOnDiscovery(HANDLE codi, EUI64 *id, BYTE ctrl, ENDI_DISCOVERY_PAYLOAD *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnDiscovery	samples/bypass/bypass.cpp	/^void endiOnDiscovery(HANDLE codi, EUI64 *id, BYTE ctrl, ENDI_DISCOVERY_PAYLOAD *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnDiscovery	samples/dump/dump.cpp	/^void endiOnDiscovery(HANDLE codi, EUI64 *id, BYTE ctrl, ENDI_DISCOVERY_PAYLOAD *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnDiscovery	samples/enditest/enditest.cpp	/^void endiOnDiscovery(HANDLE codi, EUI64 *id, BYTE ctrl, ENDI_DISCOVERY_PAYLOAD *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnDiscovery	samples/ge/ge.cpp	/^void endiOnDiscovery(HANDLE codi, EUI64 *id, BYTE ctrl, ENDI_DISCOVERY_PAYLOAD *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnDiscovery	samples/init/init.cpp	/^void endiOnDiscovery(HANDLE codi, EUI64 *id, BYTE ctrl, ENDI_DISCOVERY_PAYLOAD *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnDiscovery	samples/rfmonitor/rfmonitor.cpp	/^void endiOnDiscovery(HANDLE codi, EUI64 *id, BYTE ctrl, ENDI_DISCOVERY_PAYLOAD *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnDiscovery	samples/update/update.cpp	/^void endiOnDiscovery(HANDLE codi, EUI64 *id, BYTE ctrl, ENDI_DISCOVERY_PAYLOAD *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnError	samples/aidon/aidon.cpp	/^void endiOnError(HANDLE codi, HANDLE endi, BYTE ctrl, BYTE type, BYTE code)$/;"	f
endiOnError	samples/bypass/bypass.cpp	/^void endiOnError(HANDLE codi, HANDLE endi, BYTE ctrl, BYTE type, BYTE code)$/;"	f
endiOnError	samples/dump/dump.cpp	/^void endiOnError(HANDLE codi, HANDLE endi, BYTE ctrl, BYTE type, BYTE code)$/;"	f
endiOnError	samples/enditest/enditest.cpp	/^void endiOnError(HANDLE codi, HANDLE endi, BYTE ctrl, BYTE type, BYTE code)$/;"	f
endiOnError	samples/ge/ge.cpp	/^void endiOnError(HANDLE codi, HANDLE endi, BYTE ctrl, BYTE type, BYTE code)$/;"	f
endiOnError	samples/init/init.cpp	/^void endiOnError(HANDLE codi, HANDLE endi, BYTE ctrl, BYTE type, BYTE code)$/;"	f
endiOnError	samples/rfmonitor/rfmonitor.cpp	/^void endiOnError(HANDLE codi, HANDLE endi, BYTE ctrl, BYTE type, BYTE code)$/;"	f
endiOnError	samples/update/update.cpp	/^void endiOnError(HANDLE codi, HANDLE endi, BYTE ctrl, BYTE type, BYTE code)$/;"	f
endiOnEvent	samples/aidon/aidon.cpp	/^void endiOnEvent(HANDLE codi, EUI64 *id, BYTE ctrl, ENDI_EVENT_PAYLOAD *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnEvent	samples/bypass/bypass.cpp	/^void endiOnEvent(HANDLE codi, EUI64 *id, BYTE ctrl, ENDI_EVENT_PAYLOAD *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnEvent	samples/dump/dump.cpp	/^void endiOnEvent(HANDLE codi, EUI64 *id, BYTE ctrl, ENDI_EVENT_PAYLOAD *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnEvent	samples/enditest/enditest.cpp	/^void endiOnEvent(HANDLE codi, EUI64 *id, BYTE ctrl, ENDI_EVENT_PAYLOAD *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnEvent	samples/ge/ge.cpp	/^void endiOnEvent(HANDLE codi, EUI64 *id, BYTE ctrl, ENDI_EVENT_PAYLOAD *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnEvent	samples/init/init.cpp	/^void endiOnEvent(HANDLE codi, EUI64 *id, BYTE ctrl, ENDI_EVENT_PAYLOAD *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnEvent	samples/rfmonitor/rfmonitor.cpp	/^void endiOnEvent(HANDLE codi, EUI64 *id, BYTE ctrl, ENDI_EVENT_PAYLOAD *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnEvent	samples/update/update.cpp	/^void endiOnEvent(HANDLE codi, EUI64 *id, BYTE ctrl, ENDI_EVENT_PAYLOAD *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnKeepAlive	samples/aidon/aidon.cpp	/^void endiOnKeepAlive(HANDLE codi, EUI64 *id, BYTE ctrl, ENDI_AMR_PAYLOAD *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnKeepAlive	samples/bypass/bypass.cpp	/^void endiOnKeepAlive(HANDLE codi, EUI64 *id, BYTE ctrl, ENDI_AMR_PAYLOAD *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnKeepAlive	samples/dump/dump.cpp	/^void endiOnKeepAlive(HANDLE codi, EUI64 *id, BYTE ctrl, ENDI_AMR_PAYLOAD *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnKeepAlive	samples/enditest/enditest.cpp	/^void endiOnKeepAlive(HANDLE codi, EUI64 *id, BYTE ctrl, ENDI_AMR_PAYLOAD *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnKeepAlive	samples/ge/ge.cpp	/^void endiOnKeepAlive(HANDLE codi, EUI64 *id, BYTE ctrl, ENDI_AMR_PAYLOAD *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnKeepAlive	samples/init/init.cpp	/^void endiOnKeepAlive(HANDLE codi, EUI64 *id, BYTE ctrl, ENDI_AMR_PAYLOAD *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnKeepAlive	samples/rfmonitor/rfmonitor.cpp	/^void endiOnKeepAlive(HANDLE codi, EUI64 *id, BYTE ctrl, ENDI_AMR_PAYLOAD *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnKeepAlive	samples/update/update.cpp	/^void endiOnKeepAlive(HANDLE codi, EUI64 *id, BYTE ctrl, ENDI_AMR_PAYLOAD *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnLink	samples/aidon/aidon.cpp	/^BOOL endiOnLink(HANDLE codi, EUI64 *id, BYTE type, BYTE LQI, signed char RSSI)$/;"	f
endiOnLink	samples/bypass/bypass.cpp	/^BOOL endiOnLink(HANDLE codi, EUI64 *id, BYTE type, BYTE LQI, signed char RSSI)$/;"	f
endiOnLink	samples/dump/dump.cpp	/^BOOL endiOnLink(HANDLE codi, EUI64 *id, BYTE type, BYTE LQI, signed char RSSI)$/;"	f
endiOnLink	samples/enditest/enditest.cpp	/^BOOL endiOnLink(HANDLE codi, EUI64 *id, BYTE type, BYTE LQI, signed char RSSI)$/;"	f
endiOnLink	samples/ge/ge.cpp	/^BOOL endiOnLink(HANDLE codi, EUI64 *id, BYTE type, BYTE LQI, signed char RSSI)$/;"	f
endiOnLink	samples/init/init.cpp	/^BOOL endiOnLink(HANDLE codi, EUI64 *id, BYTE type, BYTE LQI, signed char RSSI)$/;"	f
endiOnLink	samples/rfmonitor/rfmonitor.cpp	/^BOOL endiOnLink(HANDLE codi, EUI64 *id, BYTE type, BYTE LQI, signed char RSSI)$/;"	f
endiOnLink	samples/update/update.cpp	/^BOOL endiOnLink(HANDLE codi, EUI64 *id, BYTE type, BYTE LQI, signed char RSSI)$/;"	f
endiOnLongRomRead	samples/aidon/aidon.cpp	/^void endiOnLongRomRead(HANDLE codi, HANDLE endi, BYTE ctrl, ENDI_LONG_ROM_PAYLOAD *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnLongRomRead	samples/bypass/bypass.cpp	/^void endiOnLongRomRead(HANDLE codi, HANDLE endi, BYTE ctrl, ENDI_LONG_ROM_PAYLOAD *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnLongRomRead	samples/dump/dump.cpp	/^void endiOnLongRomRead(HANDLE codi, HANDLE endi, BYTE ctrl, ENDI_LONG_ROM_PAYLOAD *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnLongRomRead	samples/enditest/enditest.cpp	/^void endiOnLongRomRead(HANDLE codi, HANDLE endi, BYTE ctrl, ENDI_LONG_ROM_PAYLOAD *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnLongRomRead	samples/ge/ge.cpp	/^void endiOnLongRomRead(HANDLE codi, HANDLE endi, BYTE ctrl, ENDI_LONG_ROM_PAYLOAD *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnLongRomRead	samples/init/init.cpp	/^void endiOnLongRomRead(HANDLE codi, HANDLE endi, BYTE ctrl, ENDI_LONG_ROM_PAYLOAD *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnLongRomRead	samples/rfmonitor/rfmonitor.cpp	/^void endiOnLongRomRead(HANDLE codi, HANDLE endi, BYTE ctrl, ENDI_LONG_ROM_PAYLOAD *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnLongRomRead	samples/update/update.cpp	/^void endiOnLongRomRead(HANDLE codi, HANDLE endi, BYTE ctrl, ENDI_LONG_ROM_PAYLOAD *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnMbusData	samples/aidon/aidon.cpp	/^void endiOnMbusData(HANDLE codi, EUI64 *id, BYTE ctrl, BYTE seq, BYTE mseq, BYTE mtype, BYTE *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnMbusData	samples/bypass/bypass.cpp	/^void endiOnMbusData(HANDLE codi, EUI64 *id, BYTE ctrl, BYTE seq, BYTE mseq, BYTE mtype, BYTE *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnMbusData	samples/dump/dump.cpp	/^void endiOnMbusData(HANDLE codi, EUI64 *id, BYTE ctrl, BYTE seq, BYTE mseq, BYTE mtype, BYTE *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnMbusData	samples/enditest/enditest.cpp	/^void endiOnMbusData(HANDLE codi, EUI64 *id, BYTE ctrl, BYTE seq, BYTE mseq, BYTE mtype, BYTE *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnMbusData	samples/ge/ge.cpp	/^void endiOnMbusData(HANDLE codi, EUI64 *id, BYTE ctrl, BYTE seq, BYTE mseq, BYTE mtype, BYTE *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnMbusData	samples/init/init.cpp	/^void endiOnMbusData(HANDLE codi, EUI64 *id, BYTE ctrl, BYTE seq, BYTE mseq, BYTE mtype, BYTE *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnMbusData	samples/rfmonitor/rfmonitor.cpp	/^void endiOnMbusData(HANDLE codi, EUI64 *id, BYTE ctrl, BYTE seq, BYTE mseq, BYTE mtype, BYTE *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnMbusData	samples/update/update.cpp	/^void endiOnMbusData(HANDLE codi, EUI64 *id, BYTE ctrl, BYTE seq, BYTE mseq, BYTE mtype, BYTE *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnMccbData	samples/aidon/aidon.cpp	/^void endiOnMccbData(HANDLE codi, HANDLE endi, BYTE ctrl, ENDI_MCCB_PAYLOAD *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnMccbData	samples/bypass/bypass.cpp	/^void endiOnMccbData(HANDLE codi, HANDLE endi, BYTE ctrl, ENDI_MCCB_PAYLOAD *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnMccbData	samples/dump/dump.cpp	/^void endiOnMccbData(HANDLE codi, HANDLE endi, BYTE ctrl, ENDI_MCCB_PAYLOAD *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnMccbData	samples/enditest/enditest.cpp	/^void endiOnMccbData(HANDLE codi, HANDLE endi, BYTE ctrl, ENDI_MCCB_PAYLOAD *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnMccbData	samples/ge/ge.cpp	/^void endiOnMccbData(HANDLE codi, HANDLE endi, BYTE ctrl, ENDI_MCCB_PAYLOAD *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnMccbData	samples/init/init.cpp	/^void endiOnMccbData(HANDLE codi, HANDLE endi, BYTE ctrl, ENDI_MCCB_PAYLOAD *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnMccbData	samples/rfmonitor/rfmonitor.cpp	/^void endiOnMccbData(HANDLE codi, HANDLE endi, BYTE ctrl, ENDI_MCCB_PAYLOAD *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnMccbData	samples/update/update.cpp	/^void endiOnMccbData(HANDLE codi, HANDLE endi, BYTE ctrl, ENDI_MCCB_PAYLOAD *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnMetering	samples/aidon/aidon.cpp	/^void endiOnMetering(HANDLE codi, EUI64 *id, BYTE ctrl, ENDI_METERING_PAYLOAD *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnMetering	samples/bypass/bypass.cpp	/^void endiOnMetering(HANDLE codi, EUI64 *id, BYTE ctrl, ENDI_METERING_PAYLOAD *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnMetering	samples/dump/dump.cpp	/^void endiOnMetering(HANDLE codi, EUI64 *id, BYTE ctrl, ENDI_METERING_PAYLOAD *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnMetering	samples/enditest/enditest.cpp	/^void endiOnMetering(HANDLE codi, EUI64 *id, BYTE ctrl, ENDI_METERING_PAYLOAD *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnMetering	samples/ge/ge.cpp	/^void endiOnMetering(HANDLE codi, EUI64 *id, BYTE ctrl, ENDI_METERING_PAYLOAD *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnMetering	samples/init/init.cpp	/^void endiOnMetering(HANDLE codi, EUI64 *id, BYTE ctrl, ENDI_METERING_PAYLOAD *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnMetering	samples/rfmonitor/rfmonitor.cpp	/^void endiOnMetering(HANDLE codi, EUI64 *id, BYTE ctrl, ENDI_METERING_PAYLOAD *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnMetering	samples/update/update.cpp	/^void endiOnMetering(HANDLE codi, EUI64 *id, BYTE ctrl, ENDI_METERING_PAYLOAD *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnNanData	samples/aidon/aidon.cpp	/^void endiOnNanData(HANDLE codi, EUI64 *id, BYTE reqid, BYTE flow, BYTE tailframe, BYTE seq, BYTE *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnNanData	samples/bypass/bypass.cpp	/^void endiOnNanData(HANDLE codi, EUI64 *id, BYTE reqid, BYTE flow, BYTE tailframe, BYTE seq, BYTE *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnNanData	samples/dump/dump.cpp	/^void endiOnNanData(HANDLE codi, EUI64 *id, BYTE reqid, BYTE flow, BYTE tailframe, BYTE seq, BYTE *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnNanData	samples/enditest/enditest.cpp	/^void endiOnNanData(HANDLE codi, EUI64 *id, BYTE reqid, BYTE flow, BYTE tailframe, BYTE seq, BYTE *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnNanData	samples/ge/ge.cpp	/^void endiOnNanData(HANDLE codi, EUI64 *id, BYTE reqid, BYTE flow, BYTE tailframe, BYTE seq, BYTE *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnNanData	samples/init/init.cpp	/^void endiOnNanData(HANDLE codi, EUI64 *id, BYTE reqid, BYTE flow, BYTE tailframe, BYTE seq, BYTE *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnNanData	samples/rfmonitor/rfmonitor.cpp	/^void endiOnNanData(HANDLE codi, EUI64 *id, BYTE reqid, BYTE flow, BYTE tailframe, BYTE seq, BYTE *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnNanData	samples/update/update.cpp	/^void endiOnNanData(HANDLE codi, EUI64 *id, BYTE reqid, BYTE flow, BYTE tailframe, BYTE seq, BYTE *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnNetworkLeave	samples/aidon/aidon.cpp	/^void endiOnNetworkLeave(HANDLE codi, HANDLE endi, BYTE ctrl, ENDI_LEAVE_PAYLOAD *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnNetworkLeave	samples/bypass/bypass.cpp	/^void endiOnNetworkLeave(HANDLE codi, HANDLE endi, BYTE ctrl, ENDI_LEAVE_PAYLOAD *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnNetworkLeave	samples/dump/dump.cpp	/^void endiOnNetworkLeave(HANDLE codi, HANDLE endi, BYTE ctrl, ENDI_LEAVE_PAYLOAD *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnNetworkLeave	samples/enditest/enditest.cpp	/^void endiOnNetworkLeave(HANDLE codi, HANDLE endi, BYTE ctrl, ENDI_LEAVE_PAYLOAD *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnNetworkLeave	samples/ge/ge.cpp	/^void endiOnNetworkLeave(HANDLE codi, HANDLE endi, BYTE ctrl, ENDI_LEAVE_PAYLOAD *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnNetworkLeave	samples/init/init.cpp	/^void endiOnNetworkLeave(HANDLE codi, HANDLE endi, BYTE ctrl, ENDI_LEAVE_PAYLOAD *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnNetworkLeave	samples/rfmonitor/rfmonitor.cpp	/^void endiOnNetworkLeave(HANDLE codi, HANDLE endi, BYTE ctrl, ENDI_LEAVE_PAYLOAD *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnNetworkLeave	samples/update/update.cpp	/^void endiOnNetworkLeave(HANDLE codi, HANDLE endi, BYTE ctrl, ENDI_LEAVE_PAYLOAD *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnPush	samples/aidon/aidon.cpp	/^void endiOnPush(HANDLE codi, EUI64 *id, BYTE ctrl, BYTE seq, BYTE *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnPush	samples/bypass/bypass.cpp	/^void endiOnPush(HANDLE codi, EUI64 *id, BYTE ctrl, BYTE seq, BYTE *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnPush	samples/dump/dump.cpp	/^void endiOnPush(HANDLE codi, EUI64 *id, BYTE ctrl, BYTE seq, BYTE *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnPush	samples/enditest/enditest.cpp	/^void endiOnPush(HANDLE codi, EUI64 *id, BYTE ctrl, BYTE seq, BYTE *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnPush	samples/ge/ge.cpp	/^void endiOnPush(HANDLE codi, EUI64 *id, BYTE ctrl, BYTE seq, BYTE *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnPush	samples/init/init.cpp	/^void endiOnPush(HANDLE codi, EUI64 *id, BYTE ctrl, BYTE seq, BYTE *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnPush	samples/rfmonitor/rfmonitor.cpp	/^void endiOnPush(HANDLE codi, EUI64 *id, BYTE ctrl, BYTE seq, BYTE *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnPush	samples/update/update.cpp	/^void endiOnPush(HANDLE codi, EUI64 *id, BYTE ctrl, BYTE seq, BYTE *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnRead	samples/aidon/aidon.cpp	/^void endiOnRead(HANDLE codi, EUI64 *id, BYTE seq, WORD addr, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnRead	samples/bypass/bypass.cpp	/^void endiOnRead(HANDLE codi, EUI64 *id, BYTE seq, WORD addr, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnRead	samples/dump/dump.cpp	/^void endiOnRead(HANDLE codi, EUI64 *id, BYTE seq, WORD addr, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnRead	samples/enditest/enditest.cpp	/^void endiOnRead(HANDLE codi, EUI64 *id, BYTE seq, WORD addr, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnRead	samples/ge/ge.cpp	/^void endiOnRead(HANDLE codi, EUI64 *id, BYTE seq, WORD addr, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnRead	samples/init/init.cpp	/^void endiOnRead(HANDLE codi, EUI64 *id, BYTE seq, WORD addr, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnRead	samples/rfmonitor/rfmonitor.cpp	/^void endiOnRead(HANDLE codi, EUI64 *id, BYTE seq, WORD addr, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnRead	samples/update/update.cpp	/^void endiOnRead(HANDLE codi, EUI64 *id, BYTE seq, WORD addr, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnRomRead	samples/aidon/aidon.cpp	/^void endiOnRomRead(HANDLE codi, HANDLE endi, BYTE ctrl, ENDI_ROM_PAYLOAD *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnRomRead	samples/bypass/bypass.cpp	/^void endiOnRomRead(HANDLE codi, HANDLE endi, BYTE ctrl, ENDI_ROM_PAYLOAD *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnRomRead	samples/dump/dump.cpp	/^void endiOnRomRead(HANDLE codi, HANDLE endi, BYTE ctrl, ENDI_ROM_PAYLOAD *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnRomRead	samples/enditest/enditest.cpp	/^void endiOnRomRead(HANDLE codi, HANDLE endi, BYTE ctrl, ENDI_ROM_PAYLOAD *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnRomRead	samples/ge/ge.cpp	/^void endiOnRomRead(HANDLE codi, HANDLE endi, BYTE ctrl, ENDI_ROM_PAYLOAD *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnRomRead	samples/init/init.cpp	/^void endiOnRomRead(HANDLE codi, HANDLE endi, BYTE ctrl, ENDI_ROM_PAYLOAD *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnRomRead	samples/rfmonitor/rfmonitor.cpp	/^void endiOnRomRead(HANDLE codi, HANDLE endi, BYTE ctrl, ENDI_ROM_PAYLOAD *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnRomRead	samples/update/update.cpp	/^void endiOnRomRead(HANDLE codi, HANDLE endi, BYTE ctrl, ENDI_ROM_PAYLOAD *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnSend	samples/aidon/aidon.cpp	/^void endiOnSend(HANDLE codi, HANDLE endi, BYTE ctrl, BYTE type, BYTE seq, BYTE *payload, int nLength)$/;"	f
endiOnSend	samples/bypass/bypass.cpp	/^void endiOnSend(HANDLE codi, HANDLE endi, BYTE ctrl, BYTE type, BYTE seq, BYTE *payload, int nLength)$/;"	f
endiOnSend	samples/dump/dump.cpp	/^void endiOnSend(HANDLE codi, HANDLE endi, BYTE ctrl, BYTE type, BYTE seq, BYTE *payload, int nLength)$/;"	f
endiOnSend	samples/enditest/enditest.cpp	/^void endiOnSend(HANDLE codi, HANDLE endi, BYTE ctrl, BYTE type, BYTE seq, BYTE *payload, int nLength)$/;"	f
endiOnSend	samples/ge/ge.cpp	/^void endiOnSend(HANDLE codi, HANDLE endi, BYTE ctrl, BYTE type, BYTE seq, BYTE *payload, int nLength)$/;"	f
endiOnSend	samples/init/init.cpp	/^void endiOnSend(HANDLE codi, HANDLE endi, BYTE ctrl, BYTE type, BYTE seq, BYTE *payload, int nLength)$/;"	f
endiOnSend	samples/rfmonitor/rfmonitor.cpp	/^void endiOnSend(HANDLE codi, HANDLE endi, BYTE ctrl, BYTE type, BYTE seq, BYTE *payload, int nLength)$/;"	f
endiOnSend	samples/update/update.cpp	/^void endiOnSend(HANDLE codi, HANDLE endi, BYTE ctrl, BYTE type, BYTE seq, BYTE *payload, int nLength)$/;"	f
endiOnState	samples/aidon/aidon.cpp	/^void endiOnState(HANDLE codi, EUI64 *id, BYTE ctrl, ENDI_STATE_PAYLOAD *payload, int nLength, BYTE LQI, signed char RSSI, WORD shortid)$/;"	f
endiOnState	samples/bypass/bypass.cpp	/^void endiOnState(HANDLE codi, EUI64 *id, BYTE ctrl, ENDI_STATE_PAYLOAD *payload, int nLength, BYTE LQI, signed char RSSI, WORD shortid)$/;"	f
endiOnState	samples/dump/dump.cpp	/^void endiOnState(HANDLE codi, EUI64 *id, BYTE ctrl, ENDI_STATE_PAYLOAD *payload, int nLength, BYTE LQI, signed char RSSI, WORD shortid)$/;"	f
endiOnState	samples/enditest/enditest.cpp	/^void endiOnState(HANDLE codi, EUI64 *id, BYTE ctrl, ENDI_STATE_PAYLOAD *payload, int nLength, BYTE LQI, signed char RSSI, WORD shortid)$/;"	f
endiOnState	samples/ge/ge.cpp	/^void endiOnState(HANDLE codi, EUI64 *id, BYTE ctrl, ENDI_STATE_PAYLOAD *payload, int nLength, BYTE LQI, signed char RSSI, WORD shortid)$/;"	f
endiOnState	samples/init/init.cpp	/^void endiOnState(HANDLE codi, EUI64 *id, BYTE ctrl, ENDI_STATE_PAYLOAD *payload, int nLength, BYTE LQI, signed char RSSI, WORD shortid)$/;"	f
endiOnState	samples/rfmonitor/rfmonitor.cpp	/^void endiOnState(HANDLE codi, EUI64 *id, BYTE ctrl, ENDI_STATE_PAYLOAD *payload, int nLength, BYTE LQI, signed char RSSI, WORD shortid)$/;"	f
endiOnState	samples/update/update.cpp	/^void endiOnState(HANDLE codi, EUI64 *id, BYTE ctrl, ENDI_STATE_PAYLOAD *payload, int nLength, BYTE LQI, signed char RSSI, WORD shortid)$/;"	f
endiOnTimesync	samples/aidon/aidon.cpp	/^void endiOnTimesync(HANDLE codi, EUI64 *id, BYTE ctrl, ENDI_TIMESYNC_PAYLOAD *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnTimesync	samples/bypass/bypass.cpp	/^void endiOnTimesync(HANDLE codi, EUI64 *id, BYTE ctrl, ENDI_TIMESYNC_PAYLOAD *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnTimesync	samples/dump/dump.cpp	/^void endiOnTimesync(HANDLE codi, EUI64 *id, BYTE ctrl, ENDI_TIMESYNC_PAYLOAD *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnTimesync	samples/enditest/enditest.cpp	/^void endiOnTimesync(HANDLE codi, EUI64 *id, BYTE ctrl, ENDI_TIMESYNC_PAYLOAD *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnTimesync	samples/ge/ge.cpp	/^void endiOnTimesync(HANDLE codi, EUI64 *id, BYTE ctrl, ENDI_TIMESYNC_PAYLOAD *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnTimesync	samples/init/init.cpp	/^void endiOnTimesync(HANDLE codi, EUI64 *id, BYTE ctrl, ENDI_TIMESYNC_PAYLOAD *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnTimesync	samples/rfmonitor/rfmonitor.cpp	/^void endiOnTimesync(HANDLE codi, EUI64 *id, BYTE ctrl, ENDI_TIMESYNC_PAYLOAD *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnTimesync	samples/update/update.cpp	/^void endiOnTimesync(HANDLE codi, EUI64 *id, BYTE ctrl, ENDI_TIMESYNC_PAYLOAD *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnUserDefine	samples/aidon/aidon.cpp	/^void endiOnUserDefine(HANDLE codi, EUI64 *id, BYTE ctrl, BYTE seq, BYTE type, BYTE *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnUserDefine	samples/bypass/bypass.cpp	/^void endiOnUserDefine(HANDLE codi, EUI64 *id, BYTE ctrl, BYTE seq, BYTE type, BYTE *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnUserDefine	samples/dump/dump.cpp	/^void endiOnUserDefine(HANDLE codi, EUI64 *id, BYTE ctrl, BYTE seq, BYTE type, BYTE *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnUserDefine	samples/enditest/enditest.cpp	/^void endiOnUserDefine(HANDLE codi, EUI64 *id, BYTE ctrl, BYTE seq, BYTE type, BYTE *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnUserDefine	samples/ge/ge.cpp	/^void endiOnUserDefine(HANDLE codi, EUI64 *id, BYTE ctrl, BYTE seq, BYTE type, BYTE *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnUserDefine	samples/init/init.cpp	/^void endiOnUserDefine(HANDLE codi, EUI64 *id, BYTE ctrl, BYTE seq, BYTE type, BYTE *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnUserDefine	samples/rfmonitor/rfmonitor.cpp	/^void endiOnUserDefine(HANDLE codi, EUI64 *id, BYTE ctrl, BYTE seq, BYTE type, BYTE *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOnUserDefine	samples/update/update.cpp	/^void endiOnUserDefine(HANDLE codi, EUI64 *id, BYTE ctrl, BYTE seq, BYTE type, BYTE *payload, int nLength, BYTE LQI, signed char RSSI)$/;"	f
endiOpen	src/codiapi.cpp	/^int endiOpen(HANDLE codi, HANDLE *endi, EUI64 *id)$/;"	f
endiReadAmr	src/codiapi.cpp	/^int endiReadAmr(HANDLE endi, BYTE *data, int *nLength, int nTimeout)$/;"	f
endiReadLongRom	src/codiapi.cpp	/^int endiReadLongRom(HANDLE endi, UINT addr, int nLength, BYTE *data, int *nSize, int nTimeout)$/;"	f
endiReadRom	src/codiapi.cpp	/^int endiReadRom(HANDLE endi, WORD addr, int nLength, BYTE *data, int *nSize, int nTimeout)$/;"	f
endiSend	src/codiapi.cpp	/^int endiSend(HANDLE endi, BYTE rw, BYTE type, BYTE *payload, int nLength, int nTimeout)$/;"	f
endiSendRecv	src/codiapi.cpp	/^int endiSendRecv(HANDLE endi, BYTE read_write_req, BYTE type, BYTE *payload, int nLength, BYTE *data, int *datalen, int nTimeout)$/;"	f
endiSetOption	src/codiapi.cpp	/^int endiSetOption(HANDLE endi, int nOption, int nValue)$/;"	f
endiWrite	src/codiapi.cpp	/^int endiWrite(HANDLE codi, EUI64 *id, BYTE seq, BYTE type, BYTE *data, int nLength, int nTimeout)$/;"	f
endiWriteAmr	src/codiapi.cpp	/^int endiWriteAmr(HANDLE endi, WORD mask, BYTE *data, int nLength, int nTimeout)$/;"	f
endiWriteCid	src/codiapi.cpp	/^int endiWriteCid(HANDLE endi, BYTE *value, int valuelen, BYTE *data, int *datalen, int nTimeout)$/;"	f
endiWriteLongRom	src/codiapi.cpp	/^int endiWriteLongRom(HANDLE endi, UINT addr, BYTE *data, int nLength, BYTE *replay, int *nSize, int nTimeout)$/;"	f
endiWriteMccb	src/codiapi.cpp	/^int endiWriteMccb(HANDLE endi, BYTE value, BYTE *data, int nTimeout)$/;"	f
endiWriteRom	src/codiapi.cpp	/^int endiWriteRom(HANDLE endi, WORD addr, BYTE *data, int nLength, int nTimeout)$/;"	f
energyLevel	include/endiFrame.h	/^        BYTE                    energyLevel;                    \/\/ Device Energy Level (0:Undefined, 1~15)$/;"	m	struct:_tagENDI_METERING_INFO
energyLevel	include/endiFrame.h	/^        BYTE                    energyLevel;                    \/\/ Energy Level$/;"	m	struct:_tagENDI_PUSH_HEADER
energy_scan_duration	include/codiFrame.h	/^		BYTE				energy_scan_duration;			\/\/ Energy Scan Duration$/;"	m	struct:_tagCODI_SCAN_PAYLOAD
energy_scan_duration	include/codiTypedef.h	/^		BYTE		energy_scan_duration;$/;"	m	struct:_tagCOORDINATOR
eof	samples/ge/GeMeter.h	/^		char		eof;$/;"	m	struct:_tagPACKET_TAIL
errorCode	include/common/CppSQLite3.h	/^    const int errorCode() { return mnErrCode; }$/;"	f	class:CppSQLite3Exception
errorMessage	include/common/CppSQLite3.h	/^    const char* errorMessage() { return mpszErrMess; }$/;"	f	class:CppSQLite3Exception
etx	include/endiFrame.h	/^        BYTE        etx;                                    \/\/ 0x03$/;"	m	struct:_tagENDI_3PARTY_TAIL
eui64	include/codiTypedef.h	/^		EUI64		eui64;									\/\/ EUI64 ID$/;"	m	struct:_tagCOORDINATOR
eui64toa	src/codiapi.cpp	/^int eui64toa(const EUI64 *id, char *pszString)$/;"	f
eventCount	include/endiFrame.h	/^        BYTE                    eventCount;                     \/\/ Event Count$/;"	m	struct:_tagPUSH_EVENT
eventData	include/endiFrame.h	/^        PUSH_EVENT              eventData[0];                   \/\/ Event Data$/;"	m	struct:_tagENDI_PUSH_EVT_HEADER
eventLength	include/endiFrame.h	/^        BYTE                    eventLength;                    \/\/ Event Data Length$/;"	m	struct:_tagPUSH_EVENT
eventType	include/endiFrame.h	/^        BYTE                    eventType;                      \/\/ Event Type (Meter specific)$/;"	m	struct:_tagPUSH_EVENT
expecting_join	include/codiFrame.h	/^		BYTE				expecting_join;					\/\/ Expecting Join$/;"	m	struct:_tagCODI_ACTIVESCAN_PAYLOAD
extpanid	include/codiFrame.h	/^		BYTE				extpanid[8];					\/\/ Extended PAN ID$/;"	m	struct:_tagCODI_ACTIVESCAN_PAYLOAD
extpanid	include/codiFrame.h	/^		BYTE				extpanid[8];					\/\/ Extended panid$/;"	m	struct:_tagCODI_NETWORK_PAYLOAD
extpanid	include/codiTypedef.h	/^        BYTE        extpanid[8];                    		\/\/ Extended panid$/;"	m	struct:_tagCOORDINATOR
fcs	include/codiFrame.h	/^		WORD				fcs;							\/\/ CRC16$/;"	m	struct:_tagCODI_TAIL
fcs	include/endiFrame.h	/^        WORD        fcs;                                    \/\/ CRC16$/;"	m	struct:_tagENDI_3PARTY_TAIL
findOperation	samples/ge/Operation.cpp	/^ONDEMANDPARAM *COperation::findOperation(EUI64 *id)$/;"	f	class:COperation
first	include/codiFrame.h	/^		BYTE				first;							\/\/ Always 0x87$/;"	m	struct:_tagCODI_IDENT
flow	include/codiTypedef.h	/^		BYTE			flow;								\/\/ Read\/Write$/;"	m	struct:_tagCODIWAITREPLY
frameType	include/endiFrame.h	/^        BYTE                    frameType;                      \/\/ Frame Type, Ordering$/;"	m	struct:_tagENDI_PUSH_EVT_HEADER
frameType	include/endiFrame.h	/^        BYTE                    frameType;                      \/\/ Frame Type, Ordering$/;"	m	struct:_tagENDI_PUSH_HEADER
frame_type	include/endiFrame.h	/^		BYTE					frame_type;						\/\/ frame type$/;"	m	struct:_tagENDI_COMMAND_PAYLOAD
fw	include/codiFrame.h	/^		BYTE				fw;								\/\/ Firmware version$/;"	m	struct:_tagCODI_BOOT_PAYLOAD
fw	include/codiFrame.h	/^		BYTE				fw;								\/\/ Firmware version$/;"	m	struct:_tagCODI_MODULE_PAYLOAD
fw	include/codiTypedef.h	/^		BYTE		fw;										\/\/ Firmware version$/;"	m	struct:_tagCOORDINATOR
fwBuild	include/endiFrame.h	/^        BYTE                    fwBuild;                        \/\/$/;"	m	struct:_tagENDI_METERING_INFO
fwVersion	include/endiFrame.h	/^        BYTE                    fwVersion;                      \/\/$/;"	m	struct:_tagENDI_METERING_INFO
fwVersion	samples/ge/i210.cpp	/^BYTE	fwVersion = 0;$/;"	v
g_EndListHash	samples/bypass/bypass.cpp	/^CHash g_EndListHash;$/;"	v
g_EndListHash	samples/dump/dump.cpp	/^CHash g_EndListHash;$/;"	v
g_EndListHash	samples/rfmonitor/rfmonitor.cpp	/^CHash g_EndListHash;$/;"	v
g_EndiList	samples/bypass/bypass.cpp	/^CLinkedList<ENDI *> g_EndiList;$/;"	v
g_EndiList	samples/dump/dump.cpp	/^CLinkedList<ENDI *> g_EndiList;$/;"	v
g_EndiList	samples/rfmonitor/rfmonitor.cpp	/^CLinkedList<ENDI *> g_EndiList;$/;"	v
g_szCodiId	samples/bypass/bypass.cpp	/^char g_szCodiId[64];$/;"	v
g_szCodiId	samples/dump/dump.cpp	/^char g_szCodiId[64];$/;"	v
g_szCodiId	samples/rfmonitor/rfmonitor.cpp	/^char g_szCodiId[64];$/;"	v
ge_logon	samples/ge/i210.cpp	/^BYTE ge_logon[10] 	 = { 'a','i','m','i','r',0,0,0,0,0 };$/;"	v
ge_negotiate	samples/ge/i210.cpp	/^BYTE ge_negotiate[4] = { 0x01, 0x00, 0x01, 0x06 };$/;"	v
ge_security	samples/ge/i210.cpp	/^BYTE ge_security[20] = { 'M','A','S','T','E','R','_','0','1','2',0,0,0,0,0,0,0,0,0,0 };$/;"	v
get_direction	include/gpio/gpio.h	53;"	d
get_gpio_num	include/gpio/gpio.h	52;"	d
gid	include/typedef.h	/^        EUI64           gid;$/;"	m	struct:_tagGEUI64
gmt	include/endiFrame.h	/^		GMTTIMESTAMP			gmt;							\/\/ Event time$/;"	m	struct:_tagENDI_EVENT_PAYLOAD
gmt	include/endiFrame.h	/^		GMTTIMESTAMP			gmt;							\/\/ GMT Time$/;"	m	struct:_tagENDI_TIMESYNC_PAYLOAD
gmttime	include/endiFrame.h	/^		GMTTIMESTAMP			gmttime;						\/\/ Time$/;"	m	struct:_tagENDI_AMR_DATA
gpio_nr	include/gpio/gpio.h	/^        int        gpio_nr;$/;"	m	struct:_tagGPIOINTENTRY
gport	include/typedef.h	/^        BYTE            gport;                      \/\/ 8 Bytes Stream$/;"	m	struct:_tagGEUI64
group	samples/ge/GeMeter.h	/^		BYTE		group;$/;"	m	struct:_tagPACKET_HEADER
hEvent	include/codiTypedef.h	/^		HANDLE			hEvent;								\/\/ Event handle$/;"	m	struct:_tagCODIWAITREPLY
hEvent	samples/ge/Operation.h	/^		HANDLE			hEvent;$/;"	m	struct:_tagONDEMANDPARAM
hFile	include/typedef.h	/^		HANDLE			hFile;						\/\/ File handle$/;"	m	struct:_tagWORKSESSION
hHeap	include/common/_WinSerialWriter.h	/^		HANDLE		hHeap;							\/\/ Heap containing buffer$/;"	m	struct:_tagWRITEREQUEST
hWndProgress	include/common/_WinSerialWriter.h	/^		HWND		hWndProgress;					\/\/ Status bar window handle$/;"	m	struct:_tagWRITEREQUEST
hdr	include/codiFrame.h	/^		CODI_HEADER			hdr;							\/\/ Header$/;"	m	struct:_tagCODI_BINDINGTABLE_FRAME
hdr	include/codiFrame.h	/^		CODI_HEADER			hdr;							\/\/ Header$/;"	m	struct:_tagCODI_BIND_FRAME
hdr	include/codiFrame.h	/^		CODI_HEADER			hdr;							\/\/ Header$/;"	m	struct:_tagCODI_BOOTLOAD_FRAME
hdr	include/codiFrame.h	/^		CODI_HEADER			hdr;							\/\/ Header$/;"	m	struct:_tagCODI_COMMAND_FRAME
hdr	include/codiFrame.h	/^		CODI_HEADER			hdr;							\/\/ Header$/;"	m	struct:_tagCODI_DIRECTCOMM_FRAME
hdr	include/codiFrame.h	/^		CODI_HEADER			hdr;							\/\/ Header$/;"	m	struct:_tagCODI_EXTENDEDTIMEOUT_FRAME
hdr	include/codiFrame.h	/^		CODI_HEADER			hdr;							\/\/ Header$/;"	m	struct:_tagCODI_FORMNETWORK_FRAME
hdr	include/codiFrame.h	/^		CODI_HEADER			hdr;							\/\/ Header$/;"	m	struct:_tagCODI_GENERAL_FRAME
hdr	include/codiFrame.h	/^		CODI_HEADER			hdr;							\/\/ Header$/;"	m	struct:_tagCODI_INFO_ACTIVESCAN_FRAME
hdr	include/codiFrame.h	/^		CODI_HEADER			hdr;							\/\/ Header$/;"	m	struct:_tagCODI_INFO_BOOT_FRAME
hdr	include/codiFrame.h	/^		CODI_HEADER			hdr;							\/\/ Header$/;"	m	struct:_tagCODI_INFO_ENERGYSCAN_FRAME
hdr	include/codiFrame.h	/^		CODI_HEADER			hdr;							\/\/ Header$/;"	m	struct:_tagCODI_INFO_ERROR_FRAME
hdr	include/codiFrame.h	/^		CODI_HEADER			hdr;							\/\/ Header$/;"	m	struct:_tagCODI_INFO_FRAME
hdr	include/codiFrame.h	/^		CODI_HEADER			hdr;							\/\/ Header$/;"	m	struct:_tagCODI_INFO_JOIN_FRAME
hdr	include/codiFrame.h	/^		CODI_HEADER			hdr;							\/\/ Header$/;"	m	struct:_tagCODI_INFO_ROUTERECORD_FRAME
hdr	include/codiFrame.h	/^		CODI_HEADER			hdr;							\/\/ Header$/;"	m	struct:_tagCODI_INFO_SCANCOMPLETE_FRAME
hdr	include/codiFrame.h	/^		CODI_HEADER			hdr;							\/\/ Header$/;"	m	struct:_tagCODI_INFO_STACK_FRAME
hdr	include/codiFrame.h	/^		CODI_HEADER			hdr;							\/\/ Header$/;"	m	struct:_tagCODI_KEY_FRAME
hdr	include/codiFrame.h	/^		CODI_HEADER			hdr;							\/\/ Header$/;"	m	struct:_tagCODI_MANYTOONE_FRAME
hdr	include/codiFrame.h	/^		CODI_HEADER			hdr;							\/\/ Header$/;"	m	struct:_tagCODI_MODULE_FRAME
hdr	include/codiFrame.h	/^		CODI_HEADER			hdr;							\/\/ Header$/;"	m	struct:_tagCODI_MULTICASTHOP_FRAME
hdr	include/codiFrame.h	/^		CODI_HEADER			hdr;							\/\/ Header$/;"	m	struct:_tagCODI_NEIGHBORTABLE_FRAME
hdr	include/codiFrame.h	/^		CODI_HEADER			hdr;							\/\/ Header$/;"	m	struct:_tagCODI_NETWORK_FRAME
hdr	include/codiFrame.h	/^		CODI_HEADER			hdr;							\/\/ Header$/;"	m	struct:_tagCODI_PERMIT_FRAME
hdr	include/codiFrame.h	/^		CODI_HEADER			hdr;							\/\/ Header$/;"	m	struct:_tagCODI_RESET_FRAME
hdr	include/codiFrame.h	/^		CODI_HEADER			hdr;							\/\/ Header$/;"	m	struct:_tagCODI_ROUTEDISCOVERY_FRAME
hdr	include/codiFrame.h	/^		CODI_HEADER			hdr;							\/\/ Header$/;"	m	struct:_tagCODI_ROUTE_FRAME
hdr	include/codiFrame.h	/^		CODI_HEADER			hdr;							\/\/ Header$/;"	m	struct:_tagCODI_SCANNETWORK_FRAME
hdr	include/codiFrame.h	/^		CODI_HEADER			hdr;							\/\/ Header$/;"	m	struct:_tagCODI_SCAN_FRAME
hdr	include/codiFrame.h	/^		CODI_HEADER			hdr;							\/\/ Header$/;"	m	struct:_tagCODI_SECURITY_FRAME
hdr	include/codiFrame.h	/^		CODI_HEADER			hdr;							\/\/ Header$/;"	m	struct:_tagCODI_SERIAL_FRAME
hdr	include/codiFrame.h	/^		CODI_HEADER			hdr;							\/\/ Header$/;"	m	struct:_tagCODI_STACKMEMORY_FRAME
hdr	include/codiFrame.h	/^		CODI_HEADER			hdr;							\/\/ Header$/;"	m	struct:_tagCODI_WRITE_FRAME
hdr	include/endiFrame.h	/^		CODI_HEADER				hdr;							\/\/ Header$/;"	m	struct:_tagENDI_AMR_FRAME
hdr	include/endiFrame.h	/^		CODI_HEADER				hdr;							\/\/ Header$/;"	m	struct:_tagENDI_BYPASS_FRAME
hdr	include/endiFrame.h	/^		CODI_HEADER				hdr;							\/\/ Header$/;"	m	struct:_tagENDI_COMMAND_FRAME
hdr	include/endiFrame.h	/^		CODI_HEADER				hdr;							\/\/ Header$/;"	m	struct:_tagENDI_DATA_FRAME
hdr	include/endiFrame.h	/^		CODI_HEADER				hdr;							\/\/ Header$/;"	m	struct:_tagENDI_DIO_FRAME
hdr	include/endiFrame.h	/^		CODI_HEADER				hdr;							\/\/ Header$/;"	m	struct:_tagENDI_DISCOVERY_FRAME
hdr	include/endiFrame.h	/^		CODI_HEADER				hdr;							\/\/ Header$/;"	m	struct:_tagENDI_ERROR_FRAME
hdr	include/endiFrame.h	/^		CODI_HEADER				hdr;							\/\/ Header$/;"	m	struct:_tagENDI_EVENT_FRAME
hdr	include/endiFrame.h	/^		CODI_HEADER				hdr;							\/\/ Header$/;"	m	struct:_tagENDI_LEAVE_FRAME
hdr	include/endiFrame.h	/^		CODI_HEADER				hdr;							\/\/ Header$/;"	m	struct:_tagENDI_LINK_FRAME
hdr	include/endiFrame.h	/^		CODI_HEADER				hdr;							\/\/ Header$/;"	m	struct:_tagENDI_LONG_ROM_FRAME
hdr	include/endiFrame.h	/^		CODI_HEADER				hdr;							\/\/ Header$/;"	m	struct:_tagENDI_MCCB_FRAME
hdr	include/endiFrame.h	/^		CODI_HEADER				hdr;							\/\/ Header$/;"	m	struct:_tagENDI_METERING_FRAME
hdr	include/endiFrame.h	/^		CODI_HEADER				hdr;							\/\/ Header$/;"	m	struct:_tagENDI_PUSH_FRAME
hdr	include/endiFrame.h	/^		CODI_HEADER				hdr;							\/\/ Header$/;"	m	struct:_tagENDI_ROM_FRAME
hdr	include/endiFrame.h	/^		CODI_HEADER				hdr;							\/\/ Header$/;"	m	struct:_tagENDI_STATE_FRAME
hdr	include/endiFrame.h	/^		CODI_HEADER				hdr;							\/\/ Header$/;"	m	struct:_tagENDI_SUPER_PARENT_FRAME
hdr	include/endiFrame.h	/^		CODI_HEADER				hdr;							\/\/ Header$/;"	m	struct:_tagENDI_TIMESYNC_FRAME
hdr	include/endiFrame.h	/^		CODI_HEADER				hdr;                            \/\/ Header$/;"	m	struct:_tagENDI_NAN_FRAME
hdr	include/endiFrame.h	/^        APP_3PARTY_HEADER   hdr;$/;"	m	struct:_tagAPP_3PARTY_PAYLOAD
hdr	include/endiFrame.h	/^        ENDI_3PARTY_HEADER  hdr;$/;"	m	struct:_tagENDI_3PARTY_FRAME
hdr	samples/ge/GeMeter.h	/^		ANSI_HEADER	hdr;$/;"	m	struct:_tagANSI_FRAME
hdr	samples/ge/GeMeter.h	/^		PACKET_TABLE_HEADER	hdr;$/;"	m	struct:_tagPACKET_TABLE
hop	include/codiFrame.h	/^        BYTE                hop;                            \/\/ Multicast hop count$/;"	m	struct:_tagCODI_MULTICASTHOP_PAYLOAD
hops	include/codiFrame.h	/^		BYTE				hops;							\/\/ Hop count$/;"	m	struct:_tagCODI_BIND_PAYLOAD
hops	include/codiFrame.h	/^		BYTE				hops;							\/\/ Hop count$/;"	m	struct:_tagCODI_ROUTERECORD_PAYLOAD
hour	include/typedef.h	/^		BYTE			hour;						\/\/ Hour$/;"	m	struct:_tagGMTTIMESTAMP
hour	include/typedef.h	/^		BYTE			hour;						\/\/ Hour$/;"	m	struct:_tagTIMESTAMP
hour	include/typedef.h	/^		BYTE			hour;						\/\/ Hour$/;"	m	struct:_tagTIMESTAMP5
hour	include/typedef.h	/^		BYTE			hour;						\/\/ Hour$/;"	m	struct:_tagTIMESTAMP6
hourmask	include/endiFrame.h	/^		BYTE					hourmask[12];					\/\/ Metering hour$/;"	m	struct:_tagENDI_AMR_DATA
hw	include/codiFrame.h	/^		BYTE				hw;								\/\/ Hardware version$/;"	m	struct:_tagCODI_BOOT_PAYLOAD
hw	include/codiFrame.h	/^		BYTE				hw;								\/\/ Hardware version$/;"	m	struct:_tagCODI_MODULE_PAYLOAD
hw	include/codiTypedef.h	/^		BYTE		hw;										\/\/ Hardware version$/;"	m	struct:_tagCOORDINATOR
hwVersion	include/endiFrame.h	/^        BYTE                    hwVersion;                      \/\/$/;"	m	struct:_tagENDI_METERING_INFO
hwVersion	samples/ge/i210.cpp	/^BYTE	hwVersion = 0;$/;"	v
id	include/codiFrame.h	/^		EUI64				id;								\/\/ Cordinator EUI64$/;"	m	struct:_tagCODI_BOOT_PAYLOAD
id	include/codiFrame.h	/^		EUI64				id;								\/\/ Cordinator EUI64$/;"	m	struct:_tagCODI_MODULE_PAYLOAD
id	include/codiFrame.h	/^		EUI64				id;								\/\/ Destination address$/;"	m	struct:_tagCODI_BIND_PAYLOAD
id	include/codiFrame.h	/^		EUI64				id;								\/\/ Destination address$/;"	m	struct:_tagCODI_KEY_PAYLOAD
id	include/codiFrame.h	/^		EUI64				id;								\/\/ EUI64 ID$/;"	m	struct:_tagCODI_BINDING_ENTRY
id	include/codiFrame.h	/^		EUI64				id;								\/\/ EUI64 ID$/;"	m	struct:_tagCODI_KEY_TABLE_ENTRY
id	include/codiFrame.h	/^		EUI64				id;								\/\/ EUI64 ID$/;"	m	struct:_tagCODI_NEIGHBOR_ENTRY
id	include/codiFrame.h	/^		EUI64				id;								\/\/ End device ID$/;"	m	struct:_tagCODI_JOIN_PAYLOAD
id	include/codiFrame.h	/^		EUI64				id;								\/\/ Source EUI ID$/;"	m	struct:_tagCODI_ROUTERECORD_PAYLOAD
id	include/codiFrame.h	/^        EUI64               id;                             \/\/ EUI 64$/;"	m	struct:_tagCODI_DIRECTCOMM_PAYLOAD
id	include/codiFrame.h	/^        EUI64               id;                             \/\/ EUI 64$/;"	m	struct:_tagCODI_EXTENDEDTIMEOUT_PAYLOAD
id	include/codiTypedef.h	/^		EUI64			id;									\/\/ EUI64 ID$/;"	m	struct:_tagENDDEVICE
id	include/codiTypedef.h	/^		EUI64			id;									\/\/ End Device EUI64 ID$/;"	m	struct:_tagCODIWAITREPLY
id	include/endiFrame.h	/^		EUI64					id;								\/\/ Source address$/;"	m	struct:_tagENDI_AMR_FRAME
id	include/endiFrame.h	/^		EUI64					id;								\/\/ Source address$/;"	m	struct:_tagENDI_BYPASS_FRAME
id	include/endiFrame.h	/^		EUI64					id;								\/\/ Source address$/;"	m	struct:_tagENDI_COMMAND_FRAME
id	include/endiFrame.h	/^		EUI64					id;								\/\/ Source address$/;"	m	struct:_tagENDI_DATA_FRAME
id	include/endiFrame.h	/^		EUI64					id;								\/\/ Source address$/;"	m	struct:_tagENDI_DIO_FRAME
id	include/endiFrame.h	/^		EUI64					id;								\/\/ Source address$/;"	m	struct:_tagENDI_DISCOVERY_FRAME
id	include/endiFrame.h	/^		EUI64					id;								\/\/ Source address$/;"	m	struct:_tagENDI_ERROR_FRAME
id	include/endiFrame.h	/^		EUI64					id;								\/\/ Source address$/;"	m	struct:_tagENDI_EVENT_FRAME
id	include/endiFrame.h	/^		EUI64					id;								\/\/ Source address$/;"	m	struct:_tagENDI_LEAVE_FRAME
id	include/endiFrame.h	/^		EUI64					id;								\/\/ Source address$/;"	m	struct:_tagENDI_LINK_FRAME
id	include/endiFrame.h	/^		EUI64					id;								\/\/ Source address$/;"	m	struct:_tagENDI_LONG_ROM_FRAME
id	include/endiFrame.h	/^		EUI64					id;								\/\/ Source address$/;"	m	struct:_tagENDI_MCCB_FRAME
id	include/endiFrame.h	/^		EUI64					id;								\/\/ Source address$/;"	m	struct:_tagENDI_METERING_FRAME
id	include/endiFrame.h	/^		EUI64					id;								\/\/ Source address$/;"	m	struct:_tagENDI_PUSH_FRAME
id	include/endiFrame.h	/^		EUI64					id;								\/\/ Source address$/;"	m	struct:_tagENDI_ROM_FRAME
id	include/endiFrame.h	/^		EUI64					id;								\/\/ Source address$/;"	m	struct:_tagENDI_STATE_FRAME
id	include/endiFrame.h	/^		EUI64					id;								\/\/ Source address$/;"	m	struct:_tagENDI_SUPER_PARENT_FRAME
id	include/endiFrame.h	/^		EUI64					id;								\/\/ Source address$/;"	m	struct:_tagENDI_TIMESYNC_FRAME
id	include/endiFrame.h	/^		EUI64					id;                             \/\/ Source address$/;"	m	struct:_tagENDI_NAN_FRAME
id	include/typedef.h	/^		OID3			id;							\/\/ Event ID$/;"	m	struct:_tagEVENTWRITEITEM
id	include/typedef.h	/^	EUI64	id;$/;"	m	struct:_tagGROUPCOMMANDINFO
id	samples/bypass/bypass.cpp	/^    EUI64       id;$/;"	m	struct:__anon7	file:
id	samples/dump/dump.cpp	/^    EUI64       id;$/;"	m	struct:__anon6	file:
id	samples/ge/MeterParser.h	/^		EUI64		id;							\/\/ Sensor ID$/;"	m	struct:_tagCMDPARAM
id	samples/ge/Operation.h	/^		EUI64			id;$/;"	m	struct:_tagONDEMANDPARAM
id	samples/rfmonitor/rfmonitor.cpp	/^    EUI64       id;$/;"	m	struct:__anon5	file:
id1	include/typedef.h	/^		BYTE			id1;						\/\/ First OID$/;"	m	struct:_tagOID3
id2	include/typedef.h	/^		BYTE			id2;						\/\/ Second OID$/;"	m	struct:_tagOID3
id3	include/typedef.h	/^		BYTE			id3;						\/\/ 3th OID$/;"	m	struct:_tagOID3
ident	include/codiFrame.h	/^		CODI_IDENT			ident;							\/\/ Start Flag$/;"	m	struct:_tagCODI_HEADER
ident	samples/ge/GeMeter.h	/^		char		ident[3];$/;"	m	struct:_tagPACKET_HEADER
ids	include/typedef.h	/^		BYTE			ids[8];						\/\/ 8 Bytes Stream$/;"	m	struct:_tagEUI64
in_cost	include/codiFrame.h	/^		BYTE				in_cost;						\/\/ In Cost$/;"	m	struct:_tagCODI_NEIGHBOR_ENTRY
index	include/codiFrame.h	/^		BYTE				index;							\/\/ Binding table index$/;"	m	struct:_tagCODI_BINDING_ENTRY
index	include/common/Hash.h	/^		int		index;							\/\/ Data 값$/;"	m	struct:_tagHASHENTRY
info	include/endiFrame.h	/^            ENDI_METERING_INFO  info;                           \/\/ Information $/;"	m	union:_tagENDI_METERING_PAYLOAD::__anon3
interrupt	include/common/CppSQLite3.h	/^    void interrupt() { sqlite3_interrupt(mpDB); }$/;"	f	class:CppSQLite3DB
is_high_level	include/gpio/gpio.h	54;"	d
iv	include/typedef.h	/^        UINT iv;$/;"	m	union:_tagUNIONVALUE
join	include/endiFrame.h	/^		BYTE					join;							\/\/ Join time$/;"	m	struct:_tagENDI_LEAVE_PAYLOAD
key	include/codiFrame.h	/^		BYTE				key[2];							\/\/ Bootloader key$/;"	m	struct:_tagCODI_BOOTLOAD_PAYLOAD
key	include/common/Hash.h	/^		BYTE	key[MAX_HASH_KEY_SIZE];			\/\/ Key 값$/;"	m	struct:_tagHASHENTRY
key	include/common/PrivateProfile.h	/^	char	*key;$/;"	m	struct:_tagPPOBJECT
keyLen	include/common/Hash.h	/^        BYTE    keyLen;                         \/\/ Key Length$/;"	m	struct:_tagHASHENTRY
key_table_size	include/codiTypedef.h	/^        BYTE        key_table_size;                         \/\/ Issue #2490$/;"	m	struct:_tagCOORDINATOR
kind	samples/ge/GeMeter.h	/^		char		kind;$/;"	m	struct:_tagPACKET_TABLE_HEADER
lLastInput	include/typedef.h	/^		long			lLastInput;					\/\/ Last Input Time$/;"	m	struct:_tagWORKSESSION
lastTick	include/typedef.h	/^		TIMETICK		lastTick;					\/\/ Last Input tick$/;"	m	struct:_tagWORKSESSION
lastTime	include/endiFrame.h	/^        TIMESTAMP5              lastTime;                       \/\/ Last Block Time$/;"	m	struct:_tagENDI_PUSH_LP
last_pulse	include/endiFrame.h	/^		UINT					last_pulse;						\/\/ $/;"	m	struct:_tagENDI_AMR_DATA
lastheard	include/codiFrame.h	/^		WORD				lastheard;						\/\/ Coordinator heard since last tick$/;"	m	struct:_tagCODI_BINDING_ENTRY
len	include/codiFrame.h	/^		BYTE				len;							\/\/ Length$/;"	m	struct:_tagCODI_HEADER
len	include/endiFrame.h	/^		BYTE					len;						    \/\/ length$/;"	m	struct:_tagENDI_LONG_ROMREAD_PAYLOAD
len	include/endiFrame.h	/^		BYTE					len;						    \/\/ length$/;"	m	struct:_tagENDI_LONG_ROM_PAYLOAD
len	include/endiFrame.h	/^        BYTE        len;$/;"	m	struct:_tagENDI_3PARTY_HEADER
len	include/endiFrame.h	/^        WORD        len;                                    \/\/ length$/;"	m	struct:_tagAPP_3PARTY_HEADER
len	samples/ge/GeMeter.h	/^    WORD      	len;$/;"	m	struct:_meterbuf
len	samples/ge/i210.cpp	/^        WORD    len; $/;"	m	struct:_tagGETABLE	file:
length	include/endiFrame.h	/^        WORD                    length;                         \/\/ Big Endian$/;"	m	struct:_tagENDI_PUSH_EVT_HEADER
length	include/endiFrame.h	/^        WORD                    length;                         \/\/ Big Endian$/;"	m	struct:_tagENDI_PUSH_HEADER
length	samples/ge/GeMeter.h	/^		WORD		length;$/;"	m	struct:_tagANSI_HEADER
length	samples/ge/GeMeter.h	/^		WORD		length;$/;"	m	struct:_tagPACKET_TABLE_HEADER
length	samples/ge/GeMeter.h	/^		int			length;$/;"	m	struct:_tagPACKET_HEADER
link_key	include/codiFrame.h	/^		BYTE				link_key[16];					\/\/ Link key$/;"	m	struct:_tagCODI_SECURITY_PAYLOAD
link_key	include/codiTypedef.h	/^        BYTE        link_key[16];                   		\/\/ Link key$/;"	m	struct:_tagCOORDINATOR
list	include/codiFrame.h	/^		CODI_BINDING_ENTRY	list[16];						\/\/ Binding list$/;"	m	struct:_tagCODI_BINDING_PAYLOAD
list	include/codiFrame.h	/^		CODI_KEY_TABLE_ENTRY	list[24];					\/\/ key table node entry$/;"	m	struct:_tagCODI_KEY_TABLE_PAYLOAD
list	include/codiFrame.h	/^		CODI_NEIGHBOR_ENTRY	list[16];						\/\/ Neighbor node entry$/;"	m	struct:_tagCODI_NEIGHBOR_PAYLOAD
local	include/codiFrame.h	/^		BYTE				local;							\/\/ The endpoint on the local node$/;"	m	struct:_tagCODI_BINDING_ENTRY
lockOperation	samples/ge/Operation.cpp	/^void COperation::lockOperation()$/;"	f	class:COperation
lp	include/endiFrame.h	/^        BYTE                    lp[0];                          \/\/ Load Profile$/;"	m	struct:_tagENDI_PUSH_LP
lpChoice	include/endiFrame.h	/^        BYTE                    lpChoice;                       \/\/ (0: Current LP, n: n days ago);$/;"	m	struct:_tagENDI_METERING_INFO
lpCount	include/endiFrame.h	/^        BYTE                    lpCount;                        \/\/ LP Count$/;"	m	struct:_tagENDI_PUSH_LPINFO
lpData	include/endiFrame.h	/^		    WORD				lpData[24];						\/\/ LP data$/;"	m	union:_tagENDI_METERING_PAYLOAD::__anon3
lpData	include/endiFrame.h	/^        BYTE                    lpData[0];                      \/\/ LP Data$/;"	m	struct:_tagENDI_PUSH_LPINFO
lpDate	include/endiFrame.h	/^		TIMEDATE				lpDate;							\/\/ LP Date (year\/mon\/day)$/;"	m	struct:_tagENDI_METERING_INFO
lpInterval	include/endiFrame.h	/^        BYTE                    lpInterval;                     \/\/ Interval (minute)$/;"	m	struct:_tagENDI_PUSH_LPINFO
lpPeriod	include/endiFrame.h	/^		BYTE					lpPeriod;						\/\/ LP period$/;"	m	struct:_tagENDI_METERING_INFO
lqi	include/codiFrame.h	/^		BYTE				lqi;							\/\/ LQI$/;"	m	struct:_tagCODI_NEIGHBOR_ENTRY
m_Chunk	include/common/Chunk.h	/^	CHUNK	m_Chunk;$/;"	m	class:CChunk
m_ComStatNew	include/common/_WinSerialServer.h	/^    COMSTAT		m_ComStatNew;$/;"	m	class:CSerialServer
m_ComStatOld	include/common/_WinSerialServer.h	/^	COMSTAT		m_ComStatOld;$/;"	m	class:CSerialServer
m_List	samples/ge/Operation.h	/^	CLinkedList<ONDEMANDPARAM *>	m_List;$/;"	m	class:COperation
m_Locker	include/common/Hash.h	/^	CLocker		m_Locker;$/;"	m	class:CHash
m_Locker	include/common/PrivateProfile.h	/^	CLocker		m_Locker;$/;"	m	class:CPrivateProfile
m_Locker	include/common/Queue.h	/^	CLocker		m_Locker;$/;"	m	class:CQueue
m_Locker	samples/ge/Operation.h	/^	CLocker		m_Locker;$/;"	m	class:COperation
m_OldTIO	include/common/_UnixSerialServer.h	/^	struct	termios					m_OldTIO;$/;"	m	class:CSerialServer	typeref:struct:CSerialServer::termios
m_Operation	samples/ge/Ondemander.h	/^	COperation		m_Operation;$/;"	m	class:COndemander
m_ParserLocker	samples/ge/MeterParser.h	/^	CLocker	m_ParserLocker;$/;"	m	class:CMeterParser
m_SendList	include/common/TCPClient.h	/^	CLinkedList<TCPDATASTREAM *>	m_SendList;$/;"	m	class:CTCPClient
m_SendLocker	include/common/TCPClient.h	/^	CLocker							m_SendLocker;$/;"	m	class:CTCPClient
m_SessionList	include/common/TCPMultiplexServer.h	/^	CLinkedList<WORKSESSION *>		m_SessionList;$/;"	m	class:CTCPMultiplexServer
m_SessionList	include/common/_UnixSerialServer.h	/^	CLinkedList<WORKSESSION *>		m_SessionList;$/;"	m	class:CSerialServer
m_SessionLocker	include/common/TCPMultiplexServer.h	/^	CLocker							m_SessionLocker;$/;"	m	class:CTCPMultiplexServer
m_SessionLocker	include/common/_UnixSerialServer.h	/^	CLocker							m_SessionLocker;$/;"	m	class:CSerialServer
m_StreamList	include/common/TCPMultiplexServer.h	/^	CLinkedList<TCPDATASTREAM *>	m_StreamList;$/;"	m	class:CTCPMultiplexServer
m_StreamList	include/common/_UnixSerialServer.h	/^	CLinkedList<TCPDATASTREAM *>	m_StreamList;$/;"	m	class:CSerialServer
m_StreamLocker	include/common/TCPMultiplexServer.h	/^	CLocker							m_StreamLocker;$/;"	m	class:CTCPMultiplexServer
m_StreamLocker	include/common/_UnixSerialServer.h	/^	CLocker							m_StreamLocker;$/;"	m	class:CSerialServer
m_TimesyncLocker	samples/ge/i210.h	/^	CLocker	m_TimesyncLocker;$/;"	m	class:CI210Parser
m_WriteLocker	include/common/_WinSerialWriter.h	/^	CLocker			m_WriteLocker;$/;"	m	class:CSerialWriter
m_bAbnormal	include/common/_WinMultiThread.h	/^	BOOL		m_bAbnormal;$/;"	m	class:CMultiThread
m_bAsyncMode	include/common/TCPSocket.h	/^	BOOL	m_bAsyncMode;$/;"	m	class:CTCPSocket
m_bCTSOutFlow	include/common/_WinSerialServer.h	/^	BOOL		m_bCTSOutFlow;$/;"	m	class:CSerialServer
m_bCodiExitPending	samples/aidon/aidon.cpp	/^static BOOL m_bCodiExitPending = FALSE;$/;"	v	file:
m_bCodiExitPending	samples/bypass/bypass.cpp	/^static BOOL m_bCodiExitPending = FALSE;$/;"	v	file:
m_bCodiExitPending	samples/dump/dump.cpp	/^static BOOL m_bCodiExitPending = FALSE;$/;"	v	file:
m_bCodiExitPending	samples/enditest/enditest.cpp	/^static BOOL m_bCodiExitPending = FALSE;$/;"	v	file:
m_bCodiExitPending	samples/ge/ge.cpp	/^static BOOL m_bCodiExitPending = FALSE;$/;"	v	file:
m_bCodiExitPending	samples/init/init.cpp	/^static BOOL m_bCodiExitPending = FALSE;$/;"	v	file:
m_bCodiExitPending	samples/rfmonitor/rfmonitor.cpp	/^static BOOL m_bCodiExitPending = FALSE;$/;"	v	file:
m_bCodiExitPending	samples/update/update.cpp	/^static BOOL m_bCodiExitPending = FALSE;$/;"	v	file:
m_bConnected	include/common/TCPClient.h	/^	BOOL	m_bConnected;$/;"	m	class:CTCPClient
m_bConnected	include/common/_WinSerialServer.h	/^	BOOL		m_bConnected;$/;"	m	class:CSerialServer
m_bDSRInFlow	include/common/_WinSerialServer.h	/^	BOOL		m_bDSRInFlow;$/;"	m	class:CSerialServer
m_bDSROutFlow	include/common/_WinSerialServer.h	/^	BOOL		m_bDSROutFlow;$/;"	m	class:CSerialServer
m_bDisableSendFail	include/common/_UnixSerialServer.h	/^	BOOL							m_bDisableSendFail;$/;"	m	class:CSerialServer
m_bDisconnectPending	include/common/_WinSerialServer.h	/^	BOOL		m_bDisconnectPending;$/;"	m	class:CSerialServer
m_bDisplayTimeouts	include/common/_WinSerialServer.h	/^	BOOL		m_bDisplayTimeouts;$/;"	m	class:CSerialServer
m_bEndSession	include/common/_WinMultiThread.h	/^	BOOL		m_bEndSession;$/;"	m	class:CMultiThread
m_bExitPending	include/common/TCPMultiplexServer.h	/^	BOOL							m_bExitPending;$/;"	m	class:CTCPMultiplexServer
m_bExitPending	include/common/_UnixSerialServer.h	/^	BOOL							m_bExitPending;$/;"	m	class:CSerialServer
m_bExitPending	include/common/_UnixTimeoutThread.h	/^    BOOL            m_bExitPending;$/;"	m	class:CTimeoutThread
m_bExitRecvPending	include/common/TCPClient.h	/^	BOOL	m_bExitRecvPending;$/;"	m	class:CTCPClient
m_bExitSendPending	include/common/TCPClient.h	/^	BOOL	m_bExitSendPending;$/;"	m	class:CTCPClient
m_bExitSignalPending	include/common/IdleApplication.h	/^	BOOL	m_bExitSignalPending;$/;"	m	class:CIdleApplication
m_bExitThread	include/common/_WinMultiThread.h	/^	BOOL		m_bExitThread;$/;"	m	class:CMultiThread
m_bExitWriter	include/common/_WinSerialWriter.h	/^	BOOL			m_bExitWriter;$/;"	m	class:CSerialWriter
m_bInitialized	src/CoordinatorServer.h	/^	BOOL		m_bInitialized;$/;"	m	class:CCoordinatorServer
m_bLoading	include/common/PrivateProfile.h	/^	BOOL		m_bLoading;$/;"	m	class:CPrivateProfile
m_bLocalEcho	include/common/_WinSerialServer.h	/^	BOOL		m_bLocalEcho;$/;"	m	class:CSerialServer
m_bModified	include/common/Profile.h	/^	BOOL	m_bModified;$/;"	m	class:CProfile
m_bNoEvents	include/common/_WinSerialServer.h	/^	BOOL		m_bNoEvents;$/;"	m	class:CSerialServer
m_bNoReading	include/common/_WinSerialServer.h	/^	BOOL		m_bNoReading;$/;"	m	class:CSerialServer
m_bNoStatus	include/common/_WinSerialServer.h	/^	BOOL		m_bNoStatus;$/;"	m	class:CSerialServer
m_bNoWriting	include/common/_WinSerialServer.h	/^	BOOL		m_bNoWriting;$/;"	m	class:CSerialServer
m_bPassiveMode	include/common/_UnixSerialServer.h	/^	BOOL							m_bPassiveMode;$/;"	m	class:CSerialServer
m_bPassiveMode	include/common/_WinSerialWriter.h	/^	BOOL			m_bPassiveMode;$/;"	m	class:CSerialWriter
m_bPingTestMode	samples/ge/i210.cpp	/^BOOL	m_bPingTestMode = FALSE;$/;"	v
m_bReadyRecv	include/common/TCPClient.h	/^	BOOL	m_bReadyRecv;$/;"	m	class:CTCPClient
m_bReadySend	include/common/TCPClient.h	/^	BOOL	m_bReadySend;$/;"	m	class:CTCPClient
m_bRecvReady	include/common/_UnixSerialServer.h	/^	BOOL							m_bRecvReady;$/;"	m	class:CSerialServer
m_bRecvReady	include/common/_WinSerialServer.h	/^	BOOL		m_bRecvReady;$/;"	m	class:CSerialServer
m_bSendReady	include/common/_UnixSerialServer.h	/^	BOOL							m_bSendReady;$/;"	m	class:CSerialServer
m_bSendReady	include/common/_WinSerialWriter.h	/^	BOOL			m_bSendReady;$/;"	m	class:CSerialWriter
m_bStarted	include/common/IdleApplication.h	/^	BOOL	m_bStarted;$/;"	m	class:CIdleApplication
m_bStarted	include/common/TCPMultiplexServer.h	/^	BOOL							m_bStarted;$/;"	m	class:CTCPMultiplexServer
m_bStarted	include/common/_UnixSerialServer.h	/^	BOOL							m_bStarted;$/;"	m	class:CSerialServer
m_bStarted	include/common/_UnixTimeoutThread.h	/^	BOOL			m_bStarted;$/;"	m	class:CTimeoutThread
m_bStarted	include/common/_WinMultiThread.h	/^	BOOL		m_bStarted;$/;"	m	class:CMultiThread
m_bTXafterXoffSent	include/common/_WinSerialServer.h	/^	BOOL		m_bTXafterXoffSent;$/;"	m	class:CSerialServer
m_bUseFlowControl	include/common/_WinSerialServer.h	/^	BOOL		m_bUseFlowControl;$/;"	m	class:CSerialServer
m_bWatchExit	include/common/_UnixSerialServer.h	/^	BOOL							m_bWatchExit;$/;"	m	class:CSerialServer
m_bXonXoffInFlow	include/common/_WinSerialServer.h	/^	BOOL		m_bXonXoffInFlow;$/;"	m	class:CSerialServer
m_bXonXoffOutFlow	include/common/_WinSerialServer.h	/^	BOOL		m_bXonXoffOutFlow;$/;"	m	class:CSerialServer
m_chFlag	include/common/_WinSerialServer.h	/^    char		m_chFlag;$/;"	m	class:CSerialServer
m_chXOFF	include/common/_WinSerialServer.h	/^	char		m_chXOFF;$/;"	m	class:CSerialServer
m_chXON	include/common/_WinSerialServer.h	/^	char		m_chXON;$/;"	m	class:CSerialServer
m_chunk	samples/aidon/aidon.cpp	/^CChunk	m_chunk;$/;"	v
m_codiList	src/CoordinatorServer.h	/^	CLinkedList<COORDINATOR *>	m_codiList;$/;"	m	class:CCoordinatorServer
m_codiLocker	src/CoordinatorServer.h	/^	CLocker		m_codiLocker;$/;"	m	class:CCoordinatorServer
m_ctx	include/common/TCPClient.h	/^	SSL_CTX* m_ctx;$/;"	m	class:CTCPClient
m_dwBaudRate	include/common/_WinSerialServer.h	/^    DWORD		m_dwBaudRate;$/;"	m	class:CSerialServer
m_dwDtrControl	include/common/_WinSerialServer.h	/^    DWORD		m_dwDtrControl;$/;"	m	class:CSerialServer
m_dwErrors	include/common/_WinSerialServer.h	/^    DWORD		m_dwErrors;$/;"	m	class:CSerialServer
m_dwErrorsOld	include/common/_WinSerialServer.h	/^	DWORD		m_dwErrorsOld;$/;"	m	class:CSerialServer
m_dwEventFlags	include/common/_WinSerialServer.h	/^    DWORD		m_dwEventFlags;$/;"	m	class:CSerialServer
m_dwModemStatus	include/common/_WinSerialServer.h	/^	DWORD		m_dwModemStatus;$/;"	m	class:CSerialServer
m_dwOldModemStatus	include/common/_WinSerialServer.h	/^	DWORD		m_dwOldModemStatus;$/;"	m	class:CSerialServer
m_dwParam	include/common/_WinSerialServer.h	/^	DWORD		m_dwParam;$/;"	m	class:CSerialServer
m_dwReadThreadID	include/common/_WinSerialServer.h	/^	DWORD		m_dwReadThreadID;$/;"	m	class:CSerialServer
m_dwRtsControl	include/common/_WinSerialServer.h	/^    DWORD		m_dwRtsControl;$/;"	m	class:CSerialServer
m_dwSendThreadID	include/common/_WinSerialServer.h	/^	DWORD		m_dwSendThreadID;$/;"	m	class:CSerialServer
m_dwSocketParam	include/common/TCPSocket.h	/^	UINT_PTR	m_dwSocketParam;$/;"	m	class:CTCPSocket
m_dwThreadID	include/common/_WinMultiThread.h	/^	DWORD		m_dwThreadID;$/;"	m	class:CMultiThread
m_dwTimeout	include/common/_WinMultiThread.h	/^	DWORD		m_dwTimeout;$/;"	m	class:CMultiThread
m_endiLocker	src/CoordinatorFrame.h	/^	CLocker		m_endiLocker;$/;"	m	class:CCoordinatorFrame
m_exitSem	include/common/IdleApplication.h	/^	sem_t	m_exitSem;$/;"	m	class:CIdleApplication
m_hActiveEvent	include/common/_WinTimeoutThread.h	/^	HANDLE	m_hActiveEvent;$/;"	m	class:CTimeoutThread
m_hComPort	include/common/_WinSerialServer.h	/^	HANDLE		m_hComPort;$/;"	m	class:CSerialServer
m_hExitEvent	include/common/_WinMultiThread.h	/^	HANDLE		m_hExitEvent;$/;"	m	class:CMultiThread
m_hMutex	include/common/Locker.h	/^	HANDLE		m_hMutex;$/;"	m	class:CLocker
m_hReadStopEvent	include/common/_WinSerialServer.h	/^	HANDLE		m_hReadStopEvent;$/;"	m	class:CSerialServer
m_hReadTerminateEvent	include/common/_WinSerialServer.h	/^	HANDLE		m_hReadTerminateEvent;$/;"	m	class:CSerialServer
m_hReadThread	include/common/_WinSerialServer.h	/^	HANDLE		m_hReadThread;$/;"	m	class:CSerialServer
m_hSendEvent	include/common/_WinSerialServer.h	/^	HANDLE		m_hSendEvent;$/;"	m	class:CSerialServer
m_hSendFile	include/common/_WinSerialWriter.h	/^	HANDLE			m_hSendFile;$/;"	m	class:CSerialWriter
m_hSendStopEvent	include/common/_WinSerialServer.h	/^	HANDLE		m_hSendStopEvent;$/;"	m	class:CSerialServer
m_hSendTerminateEvent	include/common/_WinSerialServer.h	/^	HANDLE		m_hSendTerminateEvent;$/;"	m	class:CSerialServer
m_hSendThread	include/common/_WinSerialServer.h	/^	HANDLE		m_hSendThread;$/;"	m	class:CSerialServer
m_hStopEvent	include/common/_WinMultiThread.h	/^	HANDLE		m_hStopEvent;$/;"	m	class:CMultiThread
m_hThread	include/common/_WinMultiThread.h	/^	HANDLE		m_hThread;$/;"	m	class:CMultiThread
m_hThreadExitEvent	include/common/_WinSerialWriter.h	/^	HANDLE			m_hThreadExitEvent;$/;"	m	class:CSerialWriter
m_hTransferCompleteEvent	include/common/_WinSerialServer.h	/^	HANDLE		m_hTransferCompleteEvent;$/;"	m	class:CSerialServer
m_hWriterEvent	include/common/_WinSerialServer.h	/^	HANDLE		m_hWriterEvent;$/;"	m	class:CSerialServer
m_hWriterEvent	include/common/_WinSerialWriter.h	/^	HANDLE			m_hWriterEvent;$/;"	m	class:CSerialWriter
m_hWriterHeap	include/common/_WinSerialServer.h	/^	HANDLE		m_hWriterHeap;$/;"	m	class:CSerialServer
m_hWriterHeap	include/common/_WinSerialWriter.h	/^	HANDLE			m_hWriterHeap;$/;"	m	class:CSerialWriter
m_i210Parser	samples/ge/Ondemander.h	/^	CI210Parser		m_i210Parser;$/;"	m	class:COndemander
m_listEndDevice	src/EndDevicePool.h	/^	ENDDEVICE	m_listEndDevice[ENDI_MAX_POOL_COUNT];$/;"	m	class:CEndDevicePool
m_lockerPool	src/EndDevicePool.h	/^	CLocker		m_lockerPool;$/;"	m	class:CEndDevicePool
m_mutex	include/common/Locker.h	/^	pthread_mutex_t	m_mutex;$/;"	m	class:CLocker
m_myOndemander	samples/ge/ge.cpp	/^COndemander	m_myOndemander;$/;"	v
m_nAllocation	include/common/Hash.h	/^	int			m_nAllocation;$/;"	m	class:CHash
m_nBlockSize	include/common/LinkedList.h	/^	int			m_nBlockSize;$/;"	m	class:CLinkedList
m_nByteSize	include/common/_WinSerialServer.h	/^	int			m_nByteSize;$/;"	m	class:CSerialServer
m_nCoordinatorOption	src/CoordinatorServer.h	/^    int         m_nCoordinatorOption;$/;"	m	class:CCoordinatorServer
m_nCount	include/common/Hash.h	/^	int			m_nCount;$/;"	m	class:CHash
m_nCount	include/common/LinkedList.h	/^	int			m_nCount;$/;"	m	class:CLinkedList
m_nCount	include/common/Queue.h	/^	int			m_nCount;$/;"	m	class:CQueue
m_nFD	include/common/Profile.h	/^	int		m_nFD;$/;"	m	class:CProfile
m_nFD	include/common/_UnixSerialServer.h	/^	int								m_nFD;$/;"	m	class:CSerialServer
m_nGrow	include/common/Hash.h	/^	int			m_nGrow;$/;"	m	class:CHash
m_nGrowSize	include/common/LinkedList.h	/^	int			m_nGrowSize;$/;"	m	class:CLinkedList
m_nHead	include/common/Queue.h	/^	int			m_nHead;$/;"	m	class:CQueue
m_nKeepAliveTime	include/common/_WinSerialServer.h	/^	int			m_nKeepAliveTime;$/;"	m	class:CSerialServer
m_nLastError	include/common/TCPSocket.h	/^	int		m_nLastError;$/;"	m	class:CTCPSocket
m_nLastError	include/common/_WinSerialServer.h	/^	int			m_nLastError;$/;"	m	class:CSerialServer
m_nLength	include/common/Options.h	/^	int		m_nLength;$/;"	m	class:COptions
m_nMaxSession	include/common/TCPMultiplexServer.h	/^	int								m_nMaxSession;$/;"	m	class:CTCPMultiplexServer
m_nMaxSession	include/common/_UnixSerialServer.h	/^	int								m_nMaxSession;$/;"	m	class:CSerialServer
m_nMaximum	include/common/Queue.h	/^	int			m_nMaximum;$/;"	m	class:CQueue
m_nMeterReadInterval	samples/ge/i210.cpp	/^UINT	m_nMeterReadInterval = 60;$/;"	v
m_nNodeFree	include/common/LinkedList.h	/^	int			m_nNodeFree;$/;"	m	class:CLinkedList
m_nNodeHead	include/common/LinkedList.h	/^	int			m_nNodeHead;$/;"	m	class:CLinkedList
m_nNodeTail	include/common/LinkedList.h	/^	int			m_nNodeTail;$/;"	m	class:CLinkedList
m_nObjectCount	include/common/PrivateProfile.h	/^	int			m_nObjectCount;$/;"	m	class:CPrivateProfile
m_nParity	include/common/_WinSerialServer.h	/^	int			m_nParity;$/;"	m	class:CSerialServer
m_nParserType	samples/ge/MeterParser.h	/^	int		m_nParserType;$/;"	m	class:CMeterParser
m_nPoolAllocate	src/EndDevicePool.h	/^	int			m_nPoolAllocate;$/;"	m	class:CEndDevicePool
m_nPort	include/common/TCPSocket.h	/^	WORD	m_nPort;$/;"	m	class:CTCPSocket
m_nPriority	include/common/_WinMultiThread.h	/^	int			m_nPriority;$/;"	m	class:CMultiThread
m_nStopBits	include/common/_WinSerialServer.h	/^	int			m_nStopBits;$/;"	m	class:CSerialServer
m_nTID	include/common/TCPClient.h	/^	TID		m_nTID;$/;"	m	class:CTCPClient
m_nTail	include/common/Queue.h	/^	int			m_nTail;$/;"	m	class:CQueue
m_nTimeout	include/common/TCPMultiplexServer.h	/^	int								m_nTimeout;$/;"	m	class:CTCPMultiplexServer
m_nTimeout	include/common/_UnixSerialServer.h	/^	int								m_nTimeout;$/;"	m	class:CSerialServer
m_nTimeout	include/common/_UnixTimeoutThread.h	/^	int				m_nTimeout;$/;"	m	class:CTimeoutThread
m_pBlocks	include/common/LinkedList.h	/^	LINKNODE	*m_pBlocks;$/;"	m	class:CLinkedList
m_pBuffer	include/common/Queue.h	/^	char		*m_pBuffer;$/;"	m	class:CQueue
m_pFirstNode	include/common/PrivateProfile.h	/^	PPOBJECT	*m_pFirstNode;$/;"	m	class:CPrivateProfile
m_pLastNode	include/common/PrivateProfile.h	/^	PPOBJECT	*m_pLastNode;$/;"	m	class:CPrivateProfile
m_pList	include/common/Hash.h	/^	HASHENTRY	*m_pList;$/;"	m	class:CHash
m_pOndemander	samples/ge/Ondemander.cpp	/^COndemander	*m_pOndemander = NULL;$/;"	v
m_pOperation	samples/ge/Operation.cpp	/^COperation	*m_pOperation = NULL;$/;"	v
m_pSaveSession	include/common/_UnixSerialServer.h	/^	WORKSESSION						*m_pSaveSession;$/;"	m	class:CSerialServer
m_pSaveSession	include/common/_WinSerialServer.h	/^	WORKSESSION	*m_pSaveSession;$/;"	m	class:CSerialServer
m_pWriterHead	include/common/_WinSerialServer.h	/^	WRITEREQUEST	*m_pWriterHead;$/;"	m	class:CSerialServer
m_pWriterHead	include/common/_WinSerialWriter.h	/^	WRITEREQUEST	*m_pWriterHead;$/;"	m	class:CSerialWriter
m_pWriterTail	include/common/_WinSerialServer.h	/^	WRITEREQUEST	*m_pWriterTail;$/;"	m	class:CSerialServer
m_pWriterTail	include/common/_WinSerialWriter.h	/^	WRITEREQUEST	*m_pWriterTail;$/;"	m	class:CSerialWriter
m_ptheCoordinator	src/Coordinator.cpp	/^CCoordinator	*m_ptheCoordinator = NULL;$/;"	v
m_replyList	src/CoordinatorWaitReply.h	/^	CLinkedList<CODIWAITREPLY *>	m_replyList;$/;"	m	class:CCoordinatorWaitReply
m_replyLocker	src/CoordinatorWaitReply.h	/^	CLocker		m_replyLocker;$/;"	m	class:CCoordinatorWaitReply
m_roundSequence	src/CoordinatorFrame.h	/^	BYTE		m_roundSequence;$/;"	m	class:CCoordinatorFrame
m_sSocket	include/common/IcmpPing.h	/^	int		m_sSocket;$/;"	m	class:CIcmpPing
m_sSocket	include/common/TCPSocket.h	/^	SOCKET	m_sSocket;$/;"	m	class:CTCPSocket
m_saveDCB	include/common/_WinSerialServer.h	/^	DCB			m_saveDCB;$/;"	m	class:CSerialServer
m_selfCoordinator	src/DeviceClass.h	/^	COORDINATOR	*m_selfCoordinator;$/;"	m	class:CDeviceClass
m_sendSem	include/common/TCPClient.h	/^	sem_t							m_sendSem;$/;"	m	class:CTCPClient
m_sendSem	include/common/TCPMultiplexServer.h	/^	sem_t							m_sendSem;$/;"	m	class:CTCPMultiplexServer
m_sendSem	include/common/_UnixSerialServer.h	/^	sem_t							m_sendSem;$/;"	m	class:CSerialServer
m_sendThreadID	include/common/TCPClient.h	/^	pthread_t						m_sendThreadID;$/;"	m	class:CTCPClient
m_sendThreadID	include/common/TCPMultiplexServer.h	/^	pthread_t						m_sendThreadID;$/;"	m	class:CTCPMultiplexServer
m_sendThreadID	include/common/_UnixSerialServer.h	/^	pthread_t						m_sendThreadID;$/;"	m	class:CSerialServer
m_seqLocker	src/CoordinatorFrame.h	/^	CLocker		m_seqLocker;$/;"	m	class:CCoordinatorFrame
m_ssl	include/common/TCPClient.h	/^	SSL*     m_ssl;$/;"	m	class:CTCPClient
m_streamList	src/CoordinatorServer.h	/^	CLinkedList<CODIWORKSTREAM *> m_streamList;$/;"	m	class:CCoordinatorServer
m_streamLocker	src/CoordinatorServer.h	/^	CLocker		m_streamLocker;$/;"	m	class:CCoordinatorServer
m_szAddress	include/common/TCPSocket.h	/^	char	m_szAddress[64];$/;"	m	class:CTCPSocket
m_szBuffer	include/common/Options.h	/^	char	m_szBuffer[MAX_OPTION_BUFFER+1];$/;"	m	class:COptions
m_szBuffer	include/common/TCPClient.h	/^	char	m_szBuffer[DEFAULT_SESSION_BUFFER];$/;"	m	class:CTCPClient
m_szBuffer	include/common/_WinSerialServer.h	/^	unsigned char	m_szBuffer[DEFAULT_SIO_BUFFER+1];$/;"	m	class:CSerialServer
m_szDevice	include/common/_UnixSerialServer.h	/^	char							m_szDevice[64];$/;"	m	class:CSerialServer
m_szDevice	include/common/_WinSerialServer.h	/^    char		m_szDevice[65];$/;"	m	class:CSerialServer
m_szFileName	include/common/Options.h	/^	char	m_szFileName[_MAX_PATH+1];$/;"	m	class:COptions
m_szFileName	include/common/PrivateProfile.h	/^	char		m_szFileName[64];$/;"	m	class:CPrivateProfile
m_szFileName	include/common/Profile.h	/^	char	m_szFileName[128];$/;"	m	class:CProfile
m_szModel	samples/ge/i210.cpp	/^char	m_szModel[64] = "";$/;"	v
m_szParserDescr	samples/ge/MeterParser.h	/^	char	m_szParserDescr[64];$/;"	m	class:CMeterParser
m_szParserName	samples/ge/MeterParser.h	/^	char	m_szParserName[32];$/;"	m	class:CMeterParser
m_szSerial	samples/ge/i210.cpp	/^char	m_szSerial[64] = "";$/;"	v
m_theCoordinator	src/Coordinator.cpp	/^CCoordinator	m_theCoordinator;$/;"	v
m_threadCond	include/common/_UnixTimeoutThread.h	/^    pthread_cond_t  m_threadCond;$/;"	m	class:CTimeoutThread
m_threadMutex	include/common/_UnixTimeoutThread.h	/^    pthread_mutex_t m_threadMutex;$/;"	m	class:CTimeoutThread
m_timeoutNew	include/common/_WinSerialServer.h	/^    COMMTIMEOUTS	m_timeoutNew;$/;"	m	class:CSerialServer
m_timeoutOld	include/common/_WinSerialServer.h	/^    COMMTIMEOUTS	m_timeoutOld;$/;"	m	class:CSerialServer
m_tmLastStateCheck	src/CoordinatorServer.h	/^	cetime_t	m_tmLastStateCheck;$/;"	m	class:CCoordinatorServer
m_wXOFFLimit	include/common/_WinSerialServer.h	/^	WORD		m_wXOFFLimit;$/;"	m	class:CSerialServer
m_wXONLimit	include/common/_WinSerialServer.h	/^    WORD		m_wXONLimit;$/;"	m	class:CSerialServer
m_watchThreadID	include/common/TCPClient.h	/^	pthread_t						m_watchThreadID;$/;"	m	class:CTCPClient
m_watchThreadID	include/common/TCPMultiplexServer.h	/^	pthread_t						m_watchThreadID;$/;"	m	class:CTCPMultiplexServer
m_watchThreadID	include/common/_UnixSerialServer.h	/^	pthread_t						m_watchThreadID;$/;"	m	class:CSerialServer
m_watchThreadID	include/common/_UnixTimeoutThread.h	/^    pthread_t       m_watchThreadID;$/;"	m	class:CTimeoutThread
main	samples/aidon/aidon.cpp	/^int main(int argc, char **argv)$/;"	f
main	samples/bypass/bypass.cpp	/^int main(int argc, char **argv)$/;"	f
main	samples/dump/dump.cpp	/^int main(int argc, char **argv)$/;"	f
main	samples/enditest/enditest.cpp	/^int main(int argc, char **argv)$/;"	f
main	samples/ge/ge.cpp	/^int main(int argc, char **argv)$/;"	f
main	samples/init/init.cpp	/^int main(int argc, char **argv)$/;"	f
main	samples/rfmonitor/rfmonitor.cpp	/^int main(int argc, char **argv)$/;"	f
main	samples/update/update.cpp	/^int main(int argc, char **argv)$/;"	f
mask	include/endiFrame.h	/^		WORD					mask;							\/\/ AMR mask$/;"	m	struct:_tagENDI_AMR_PAYLOAD
mask	include/endiFrame.h	/^        BYTE        mask;                                   \/\/ Port Mask    (7~4 input mask, 3~0 output mask)$/;"	m	struct:_tagENDI_DIO_PAYLOAD
max_child_cnt	include/endiFrame.h	/^        BYTE                    max_child_cnt;                  \/\/ Max Child Node Count$/;"	m	struct:_tagENDI_STATE_PAYLOAD
max_children	include/codiTypedef.h	/^        BYTE        max_children;                           \/\/$/;"	m	struct:_tagCOORDINATOR
max_hops	include/codiTypedef.h	/^        BYTE        max_hops;								\/\/$/;"	m	struct:_tagCOORDINATOR
mbEncoded	include/common/CppSQLite3.h	/^    bool mbEncoded;$/;"	m	class:CppSQLite3Binary
mbEof	include/common/CppSQLite3.h	/^    bool mbEof;$/;"	m	class:CppSQLite3Query
mbOwnVM	include/common/CppSQLite3.h	/^    bool mbOwnVM;$/;"	m	class:CppSQLite3Query
mbusSeq	include/endiFrame.h	/^        BYTE    mbusSeq;$/;"	m	struct:_tagMBUS_DATA_FRAME
member	samples/ge/GeMeter.h	/^		BYTE		member;$/;"	m	struct:_tagPACKET_HEADER
meterStatus	include/endiFrame.h	/^        BYTE                    meterStatus;                    \/\/ Meter Status (bit 7:MeterType, 6: RelayStatus)$/;"	m	struct:_tagENDI_PUSH_HEADER
meterType	include/endiFrame.h	/^        BYTE        meterType;$/;"	m	struct:_tagMBUS_METERING_PAYLOAD
meter_event_length	samples/ge/GeMeter.h	/^	WORD		meter_event_length;$/;"	m	struct:_meterconfig
meter_id	samples/ge/GeMeter.h	/^		char		meter_id[18];$/;"	m	struct:_tagPACKET_HEADER
meter_id	samples/ge/GeMeter.h	/^	char		meter_id[21];$/;"	m	struct:_meterconfig
meter_kind	samples/ge/GeMeter.h	/^	BYTE		meter_kind;$/;"	m	struct:_meterconfig
meter_lp_len	samples/ge/GeMeter.h	/^    WORD      	meter_lp_len;$/;"	m	struct:_meterconfig
meter_lp_valid_blocks	samples/ge/GeMeter.h	/^	WORD		meter_lp_valid_blocks;$/;"	m	struct:_meterconfig
meter_lp_valid_int	samples/ge/GeMeter.h	/^    WORD      	meter_lp_valid_int;$/;"	m	struct:_meterconfig
meter_lp_valid_num	samples/ge/GeMeter.h	/^    WORD      	meter_lp_valid_num;$/;"	m	struct:_meterconfig
meter_password	samples/ge/GeMeter.h	/^    BYTE        meter_password[10];$/;"	m	struct:_meterconfig
meter_read_inst_class	samples/ge/GeMeter.h	/^    BYTE        meter_read_inst_class;$/;"	m	struct:_meterconfig
meter_read_inst_class_phase	samples/ge/GeMeter.h	/^    BYTE        meter_read_inst_class_phase;$/;"	m	struct:_meterconfig
meter_relay_activation	samples/ge/GeMeter.h	/^	BYTE		meter_relay_activation;$/;"	m	struct:_meterconfig
meter_relay_result	samples/ge/GeMeter.h	/^	BYTE		meter_relay_result;$/;"	m	struct:_meterconfig
meter_relay_switch	samples/ge/GeMeter.h	/^	BYTE		meter_relay_switch;$/;"	m	struct:_meterconfig
meter_rr_control	samples/ge/GeMeter.h	/^    BYTE        meter_rr_control;$/;"	m	struct:_meterconfig
meter_rr_count	samples/ge/GeMeter.h	/^    BYTE        meter_rr_count;$/;"	m	struct:_meterconfig
meter_rr_max	samples/ge/GeMeter.h	/^    BYTE        meter_rr_max;$/;"	m	struct:_meterconfig
meter_rxd_control	samples/ge/GeMeter.h	/^    BYTE        meter_rxd_control;$/;"	m	struct:_meterconfig
meter_serial_num	samples/ge/GeMeter.h	/^	char		meter_serial_num[17];$/;"	m	struct:_meterconfig
meter_wait_count	samples/ge/GeMeter.h	/^    BYTE        meter_wait_count;$/;"	m	struct:_meterconfig
meterread	include/endiFrame.h	/^		BYTE					meterread;						\/\/ Meter read second$/;"	m	struct:_tagENDI_AMR_DATA
mhops	include/codiTypedef.h	/^        BYTE        mhops;                                  \/\/ Current Multicast Hops$/;"	m	struct:_tagCOORDINATOR
min	include/typedef.h	/^		BYTE			min;						\/\/ Min$/;"	m	struct:_tagGMTTIMESTAMP
min	include/typedef.h	/^		BYTE			min;						\/\/ Min$/;"	m	struct:_tagTIMESTAMP
min	include/typedef.h	/^		BYTE			min;						\/\/ Min$/;"	m	struct:_tagTIMESTAMP5
min	include/typedef.h	/^		BYTE			min;						\/\/ Min$/;"	m	struct:_tagTIMESTAMP6
mnBinaryLen	include/common/CppSQLite3.h	/^    int mnBinaryLen;$/;"	m	class:CppSQLite3Binary
mnBufferLen	include/common/CppSQLite3.h	/^    int mnBufferLen;$/;"	m	class:CppSQLite3Binary
mnBusyTimeoutMs	include/common/CppSQLite3.h	/^    int mnBusyTimeoutMs;$/;"	m	class:CppSQLite3DB
mnCols	include/common/CppSQLite3.h	/^    int mnCols;$/;"	m	class:CppSQLite3Query
mnCols	include/common/CppSQLite3.h	/^    int mnCols;$/;"	m	class:CppSQLite3Table
mnCurrentRow	include/common/CppSQLite3.h	/^    int mnCurrentRow;$/;"	m	class:CppSQLite3Table
mnEncodedLen	include/common/CppSQLite3.h	/^    int mnEncodedLen;$/;"	m	class:CppSQLite3Binary
mnErrCode	include/common/CppSQLite3.h	/^    int mnErrCode;$/;"	m	class:CppSQLite3Exception
mnRows	include/common/CppSQLite3.h	/^    int mnRows;$/;"	m	class:CppSQLite3Table
model	include/endiFrame.h	/^        BYTE        model;                                  \/\/ Command$/;"	m	struct:_tagAPP_3PARTY_HEADER
mon	include/typedef.h	/^		BYTE			mon;						\/\/ Month$/;"	m	struct:_tagGMTTIMESTAMP
mon	include/typedef.h	/^		BYTE			mon;						\/\/ Month$/;"	m	struct:_tagTIMESTAMP
mon	include/typedef.h	/^		BYTE			mon;						\/\/ Month$/;"	m	struct:_tagTIMESTAMP5
mon	include/typedef.h	/^		BYTE			mon;						\/\/ Month$/;"	m	struct:_tagTIMESTAMP6
mon	include/typedef.h	/^		BYTE			mon;						\/\/ month$/;"	m	struct:_tagTIMEDATE
mpBuf	include/common/CppSQLite3.h	/^    char* mpBuf;$/;"	m	class:CppSQLite3Buffer
mpBuf	include/common/CppSQLite3.h	/^    unsigned char* mpBuf;$/;"	m	class:CppSQLite3Binary
mpDB	include/common/CppSQLite3.h	/^	sqlite3* mpDB;$/;"	m	class:CppSQLite3Query
mpDB	include/common/CppSQLite3.h	/^    sqlite3* mpDB;$/;"	m	class:CppSQLite3DB
mpDB	include/common/CppSQLite3.h	/^    sqlite3* mpDB;$/;"	m	class:CppSQLite3Statement
mpVM	include/common/CppSQLite3.h	/^    sqlite3_stmt* mpVM;$/;"	m	class:CppSQLite3Query
mpVM	include/common/CppSQLite3.h	/^    sqlite3_stmt* mpVM;$/;"	m	class:CppSQLite3Statement
mpaszResults	include/common/CppSQLite3.h	/^    char** mpaszResults;$/;"	m	class:CppSQLite3Table
mpszErrMess	include/common/CppSQLite3.h	/^    char* mpszErrMess;$/;"	m	class:CppSQLite3Exception
multicastBypass	src/codiapi.cpp	/^int multicastBypass(HANDLE codi, BYTE *payload, int nLength)$/;"	f
multicastWriteLongRom	src/codiapi.cpp	/^int multicastWriteLongRom(HANDLE codi, UINT addr, BYTE *data, int nLength)$/;"	f
multicastWriteRom	src/codiapi.cpp	/^int multicastWriteRom(HANDLE codi, WORD addr, BYTE *data, int nLength)$/;"	f
nAllocation	include/common/Chunk.h	/^		int		nAllocation;				\/\/ 할당된 버퍼의 길이$/;"	m	struct:_tagCHUNK
nAllocation	include/typedef.h	/^        int     		nAllocation;				\/\/ Buffer Allocation Size$/;"	m	struct:_tagDATASTREAM
nBuildVersion	include/typedef.h	/^		WORD	nBuildVersion;			\/\/ Build version$/;"	m	struct:_tagPACKAGEINFO
nCommand	include/typedef.h	/^        int     		nCommand;					\/\/ Command$/;"	m	struct:_tagDATASTREAM
nCommandKey	include/typedef.h	/^	int		nCommandKey;$/;"	m	struct:_tagGROUPCOMMANDINFO
nCommandState	include/typedef.h	/^	int		nCommandState;$/;"	m	struct:_tagGROUPCOMMANDINFO
nCommitLength	include/common/Chunk.h	/^		int		nCommitLength;				\/\/ 마지막 Commit 위치 (Rollback 위치)$/;"	m	struct:_tagCHUNK
nConnectTime	include/typedef.h	/^		int				nConnectTime;$/;"	m	struct:_tagMETER_STAT
nCount	include/typedef.h	/^		int				nCount;$/;"	m	struct:_tagMETER_STAT
nCount	include/typedef.h	/^		int		nCount;								\/\/ Total node count$/;"	m	struct:_tagNODE
nCount	include/typedef.h	/^        int     		nCount;						\/\/ Count$/;"	m	struct:_tagDATASTREAM
nDataBit	include/codiTypedef.h	/^		int			nDataBit;								\/\/ Data bit$/;"	m	struct:_tagCODIDEVICE
nDebugPoint	include/typedef.h	/^        unsigned int    nDebugPoint;                \/\/ Debug Ponint$/;"	m	struct:_tagWORKSESSION
nDownloadSeq	include/typedef.h	/^		int				nDownloadSeq;				\/\/ Download sequence number$/;"	m	struct:_tagWORKSESSION
nError	include/typedef.h	/^		int				nError;$/;"	m	struct:_tagMETER_STAT
nEvents	include/common/_WinMultiThread.h	/^		int		nEvents;$/;"	m	struct:_THREADEVENTLIST
nFlags	include/typedef.h	/^		BYTE			nFlags;						\/\/ Event Flag$/;"	m	struct:_tagEVENTWRITEITEM
nFrameLength	samples/ge/Operation.h	/^		WORD			nFrameLength;$/;"	m	struct:_tagONDEMANDPARAM
nFrameState	samples/ge/Operation.h	/^		BYTE			nFrameState;$/;"	m	struct:_tagONDEMANDPARAM
nGroup	include/typedef.h	/^		int				nGroup;						\/\/ Group$/;"	m	struct:_tagUSERINFO
nGroup	samples/ge/Operation.h	/^		BYTE			nGroup;$/;"	m	struct:_tagONDEMANDPARAM
nGroupKey	include/typedef.h	/^	int		*nGroupKey;$/;"	m	struct:_tagGROUPINFO
nGroupKey	include/typedef.h	/^	int		nGroupKey;$/;"	m	struct:_tagGROUPCOMMANDINFO
nGrow	include/common/Chunk.h	/^		int		nGrow;						\/\/ 증가 값$/;"	m	struct:_tagCHUNK
nGrow	include/typedef.h	/^        int     		nGrow;						\/\/ Grow Size$/;"	m	struct:_tagDATASTREAM
nHwVersion	include/typedef.h	/^		WORD	nHwVersion;				\/\/ HW version$/;"	m	struct:_tagPACKAGEINFO
nIdentifier	include/codiTypedef.h	/^		UINT			nIdentifier;						\/\/ Handle identifier 0x1234$/;"	m	struct:_tagENDDEVICE
nIdentifier	include/codiTypedef.h	/^		UINT		nIdentifier;							\/\/ Handle identifier 0x1234$/;"	m	struct:_tagCOORDINATOR
nInterval	samples/ge/MeterParser.h	/^		int			nInterval;					\/\/ Read intervals (0이면 48)$/;"	m	struct:_tagCMDPARAM
nInterval	samples/ge/Operation.h	/^		int				nInterval;$/;"	m	struct:_tagONDEMANDPARAM
nInvalidStateCount	include/codiTypedef.h	/^		int			nInvalidStateCount;						\/\/ 오류 상태 지속 횟수$/;"	m	struct:_tagCOORDINATOR
nLastError	include/codiTypedef.h	/^		BYTE		nLastError;								\/\/ Last error code$/;"	m	struct:_tagCOORDINATOR
nLastError	include/codiTypedef.h	/^        int             nLastError;                         \/\/ Last Error Code$/;"	m	struct:_tagENDDEVICE
nLastError	samples/ge/Operation.h	/^		int				nLastError;$/;"	m	struct:_tagONDEMANDPARAM
nLastRecvSeq	include/codiTypedef.h	/^		int				nLastRecvSeq;						\/\/ Last recv sequence$/;"	m	struct:_tagENDDEVICE
nLastSeq	include/typedef.h	/^		int				nLastSeq;					\/\/ Recv Last Sequence$/;"	m	struct:_tagDATASTREAM
nLength	include/codiTypedef.h	/^		int				nLength;							\/\/ Reply length$/;"	m	struct:_tagCODIWAITREPLY
nLength	include/codiTypedef.h	/^    int                     nLength;$/;"	m	struct:_tagFRAMEDATA
nLength	include/common/Chunk.h	/^		int		nLength;					\/\/ 현재 길이$/;"	m	struct:_tagCHUNK
nLength	include/typedef.h	/^		WORD			nLength;					\/\/ Record Length$/;"	m	struct:_tagEVENTWRITEITEM
nLength	include/typedef.h	/^        int     		nLength;					\/\/ Length$/;"	m	struct:_tagTCPDATASTREAM
nLength	include/typedef.h	/^        int     		nLength;					\/\/ Real Length$/;"	m	struct:_tagDATASTREAM
nLength	samples/ge/MeterParser.h	/^		int			nLength;					\/\/ Parameter length$/;"	m	struct:_tagCMDPARAM
nLength	samples/ge/Operation.h	/^		int				nLength;$/;"	m	struct:_tagONDEMANDPARAM
nLength	src/CoordinatorServer.h	/^		int				nLength;$/;"	m	struct:_tagCODIWORKSTREAM
nMaxTime	include/typedef.h	/^		int				nMaxTime;$/;"	m	struct:_tagMETER_STAT
nMember	samples/ge/Operation.h	/^		BYTE			nMember;$/;"	m	struct:_tagONDEMANDPARAM
nMemberCnt	include/typedef.h	/^	int		*nMemberCnt;$/;"	m	struct:_tagGROUPINFO
nMeteringType	samples/ge/MeterParser.h	/^		int			nMeteringType;				\/\/ Metering type$/;"	m	struct:_tagCMDPARAM
nMeteringType	samples/ge/Operation.h	/^		int				nMeteringType;$/;"	m	struct:_tagONDEMANDPARAM
nMinTime	include/typedef.h	/^		int				nMinTime;$/;"	m	struct:_tagMETER_STAT
nMode	include/typedef.h	/^        int     		nMode;						\/\/ Active Mode$/;"	m	struct:_tagDATASTREAM
nMultiSeek	include/typedef.h	/^		int				nMultiSeek;					\/\/ Multi Frame Seek$/;"	m	struct:_tagDATASTREAM
nNext	include/common/LinkedList.h	/^		int		nNext;$/;"	m	struct:CLinkedList::_tagLINKNODE
nNoResCount	include/codiTypedef.h	/^		int			nNoResCount;							\/\/ 무응답 횟수$/;"	m	struct:_tagCOORDINATOR
nOperation	samples/ge/Operation.h	/^		BYTE			nOperation;$/;"	m	struct:_tagONDEMANDPARAM
nOptions	include/codiTypedef.h	/^		int				nOptions;							\/\/ End Device Options$/;"	m	struct:_tagENDDEVICE
nOptions	include/codiTypedef.h	/^		int			nOptions;								\/\/ Option	$/;"	m	struct:_tagCODIDEVICE
nPage	samples/ge/Operation.h	/^		BYTE			nPage;$/;"	m	struct:_tagONDEMANDPARAM
nParity	include/codiTypedef.h	/^		int			nParity;								\/\/ Parity bit$/;"	m	struct:_tagCODIDEVICE
nPosition	include/typedef.h	/^		int				nPosition;					\/\/ List Position$/;"	m	struct:_tagUSERINFO
nPosition	include/typedef.h	/^		int				nPosition;					\/\/ List Position$/;"	m	struct:_tagWORKSESSION
nPosition	include/typedef.h	/^        int     		nPosition;					\/\/ List Position$/;"	m	struct:_tagTCPDATASTREAM
nPosition	src/CoordinatorServer.h	/^		int				nPosition;$/;"	m	struct:_tagCODIWORKSTREAM
nPrev	include/common/LinkedList.h	/^		int		nPrev;$/;"	m	struct:CLinkedList::_tagLINKNODE
nRecv	include/typedef.h	/^		int				nRecv;$/;"	m	struct:_tagMETER_STAT
nRecvCount	include/typedef.h	/^		int				nRecvCount;$/;"	m	struct:_tagMETER_STAT
nResponseTime	include/typedef.h	/^		int				nResponseTime;$/;"	m	struct:_tagMETER_STAT
nResult	include/typedef.h	/^	int		nResult;$/;"	m	struct:_tagGROUPCOMMANDINFO
nSend	include/typedef.h	/^		int				nSend;$/;"	m	struct:_tagMETER_STAT
nSendCount	include/typedef.h	/^		int				nSendCount;$/;"	m	struct:_tagMETER_STAT
nSeqError	include/codiTypedef.h	/^		UINT			nSeqError;							\/\/ 연속 시퀀스 에러 카운트$/;"	m	struct:_tagENDDEVICE
nSequence	include/typedef.h	/^		BYTE			nSequence;					\/\/ Sequence$/;"	m	struct:_tagDATASTREAM
nService	include/typedef.h	/^        BYTE            nService;                   \/\/ Datastream Service Type$/;"	m	struct:_tagDATASTREAM
nShortId	include/codiTypedef.h	/^        WORD            nShortId;                           \/\/ End Device Short ID$/;"	m	struct:_tagENDDEVICE
nSize	include/typedef.h	/^        int     		nSize;						\/\/ Need Size$/;"	m	struct:_tagDATASTREAM
nSpeed	include/codiTypedef.h	/^		int			nSpeed;									\/\/ Baudrate$/;"	m	struct:_tagCODIDEVICE
nStackStatus	include/codiTypedef.h	/^		BYTE		nStackStatus;							\/\/ Last stack status$/;"	m	struct:_tagCOORDINATOR
nState	include/codiTypedef.h	/^		BYTE			nState;								\/\/ End Device state$/;"	m	struct:_tagENDDEVICE
nState	include/typedef.h	/^        int     		nState;						\/\/ Job State$/;"	m	struct:_tagDATASTREAM
nStopBit	include/codiTypedef.h	/^		int			nStopBit;								\/\/ Stop bit$/;"	m	struct:_tagCODIDEVICE
nSwVersion	include/typedef.h	/^		WORD	nSwVersion;				\/\/ SW version$/;"	m	struct:_tagPACKAGEINFO
nTID	include/typedef.h	/^        int     		nTID;						\/\/ I\/O ID$/;"	m	struct:_tagTCPDATASTREAM
nTLength	include/codiTypedef.h	/^    int                     nTLength;$/;"	m	struct:_tagFRAMEDATA
nTable	samples/ge/MeterParser.h	/^		int			nTable;						\/\/ Table$/;"	m	struct:_tagCMDPARAM
nTimeout	include/codiTypedef.h	/^		int				nTimeout;							\/\/ End Device Connection Timeout (0=disable)$/;"	m	struct:_tagENDDEVICE
nTotalCnt	include/typedef.h	/^	int		nTotalCnt;$/;"	m	struct:_tagGROUPINFO
nTotalDataRecv	include/codiTypedef.h	/^		UINT			nTotalDataRecv;						\/\/ Total receive data bytes$/;"	m	struct:_tagENDDEVICE
nTotalDataSend	include/codiTypedef.h	/^		UINT			nTotalDataSend;						\/\/ Total send data bytes$/;"	m	struct:_tagENDDEVICE
nTotalGroupCnt	include/typedef.h	/^	int		nTotalGroupCnt;$/;"	m	struct:_tagGROUPINFO
nTotalNanRecv	include/codiTypedef.h	/^		UINT			nTotalNanRecv;						\/\/ Total receive nan data bytes$/;"	m	struct:_tagENDDEVICE
nTotalNanSend	include/codiTypedef.h	/^		UINT			nTotalNanSend;						\/\/ Total send nan data bytes$/;"	m	struct:_tagENDDEVICE
nTotalRecv	include/codiTypedef.h	/^		UINT			nTotalRecv;							\/\/ Total receive bytes$/;"	m	struct:_tagENDDEVICE
nTotalRecv	include/codiTypedef.h	/^		UINT		nTotalRecv;								\/\/ Total receive bytes$/;"	m	struct:_tagCOORDINATOR
nTotalSend	include/codiTypedef.h	/^		UINT			nTotalSend;							\/\/ Total send bytes$/;"	m	struct:_tagENDDEVICE
nTotalSend	include/codiTypedef.h	/^		UINT		nTotalSend;								\/\/ Total send bytes$/;"	m	struct:_tagCOORDINATOR
nTotalSize	include/typedef.h	/^		int				nTotalSize;					\/\/ Multi-Part Total Size$/;"	m	struct:_tagDATASTREAM
nType	include/codiTypedef.h	/^		int			nType;									\/\/ Device Type (1=RS232, 2=SPI, 100=Virtual)$/;"	m	struct:_tagCODIDEVICE
nType	include/typedef.h	/^		BYTE	nType;					\/\/ Package type$/;"	m	struct:_tagPACKAGEINFO
nType	samples/ge/MeterParser.h	/^		int			nType;						\/\/ Command Type$/;"	m	struct:_tagCMDPARAM
nType	samples/ge/Operation.h	/^		int				nType;$/;"	m	struct:_tagONDEMANDPARAM
nUseTime	include/typedef.h	/^		int				nUseTime;$/;"	m	struct:_tagMETER_STAT
nWindow	include/typedef.h	/^		int				nWindow;					\/\/ Window Index$/;"	m	struct:_tagDATASTREAM
nWindowAlloc	include/typedef.h	/^		int				nWindowAlloc;$/;"	m	struct:_tagDATASTREAM
nWindowCount	include/typedef.h	/^		int				nWindowCount;				\/\/ Window Count (Issue #2049)$/;"	m	struct:_tagDATASTREAM
nWindowSize	include/typedef.h	/^		int				nWindowSize;				\/\/ Window Packet Size$/;"	m	struct:_tagDATASTREAM
nazc	include/endiFrame.h	/^		UINT					nazc;							\/\/ NAZC ID$/;"	m	struct:_tagENDI_TIMESYNC_PAYLOAD
neighbor_table_size	include/codiTypedef.h	/^        BYTE        neighbor_table_size;					\/\/$/;"	m	struct:_tagCOORDINATOR
network	include/codiTypedef.h	/^		ENDI_NETWORK_INFO	network;						\/\/ Network information$/;"	m	struct:_tagENDDEVICEINFO
networkType	include/endiFrame.h	/^        BYTE                    networkType;                    \/\/ Network Type (0:Start, 1: Mesh, 2~255: Reserved)$/;"	m	struct:_tagENDI_METERING_INFO
network_key	include/codiFrame.h	/^		BYTE				network_key[16];				\/\/ Network key$/;"	m	struct:_tagCODI_SECURITY_PAYLOAD
network_key	include/codiTypedef.h	/^        BYTE        network_key[16];                		\/\/ Network key$/;"	m	struct:_tagCOORDINATOR
networkid	include/codiFrame.h	/^		WORD				networkid;						\/\/ short id$/;"	m	struct:_tagCODI_NEIGHBOR_ENTRY
newOperation	samples/ge/Operation.cpp	/^ONDEMANDPARAM *COperation::newOperation(BYTE nOperation, EUI64 *id, BYTE nPage, char *pszBuffer, BYTE nLength)$/;"	f	class:COperation
next	include/codiTypedef.h	/^    struct _tagFRAMEDATA *  next;$/;"	m	struct:_tagFRAMEDATA	typeref:struct:_tagFRAMEDATA::_tagFRAMEDATA
next	include/common/PrivateProfile.h	/^	struct	_tagPPOBJECT	*next;$/;"	m	struct:_tagPPOBJECT	typeref:struct:_tagPPOBJECT::_tagPPOBJECT
node	include/codiTypedef.h	/^		ENDI_NODE_INFO		node;							\/\/ Node information$/;"	m	struct:_tagENDDEVICEINFO
ntoint	src/codiapi.cpp	/^UINT ntoint(UINT val)$/;"	f
ntoshort	src/codiapi.cpp	/^WORD ntoshort(WORD val)$/;"	f
offset	include/endiFrame.h	/^        BYTE                    offset;                         \/\/ Vattery Offset$/;"	m	struct:_tagENDI_METERING_INFO
operator const char*	include/common/CppSQLite3.h	/^    operator const char*() { return mpBuf; }$/;"	f	class:CppSQLite3Buffer
oprDay	include/endiFrame.h	/^		WORD					oprDay;							\/\/ Operating day$/;"	m	struct:_tagENDI_METERING_INFO
oprday	include/endiFrame.h	/^		WORD					oprday;							\/\/ Operating day$/;"	m	struct:_tagENDI_AMR_DATA
out_cost	include/codiFrame.h	/^		BYTE				out_cost;						\/\/ Out Cost$/;"	m	struct:_tagCODI_NEIGHBOR_ENTRY
pBuffer	include/common/_WinSerialWriter.h	/^		char		*pBuffer;						\/\/ Address of buffer to send$/;"	m	struct:_tagWRITEREQUEST
pBuffer	src/CoordinatorServer.h	/^		char			*pBuffer;$/;"	m	struct:_tagCODIWORKSTREAM
pChunk	include/typedef.h	/^		void			*pChunk;$/;"	m	struct:_tagWORKSESSION
pCommand	include/typedef.h	/^	OID3	pCommand;$/;"	m	struct:_tagMEMBERINFO
pData	include/typedef.h	/^		void			*pData;						\/\/ Data entry	$/;"	m	struct:_tagNODEITEM
pData	include/typedef.h	/^		void	*pData;$/;"	m	struct:_tagLINKNODE
pDownload	include/typedef.h	/^		void			*pDownload;$/;"	m	struct:_tagWORKSESSION
pGroupName	include/typedef.h	/^	char	*pGroupName;$/;"	m	struct:_tagGROUPINFO
pGroupName	include/typedef.h	/^	char	pGroupName[GROUP_MEMBER_SIZE];$/;"	m	struct:_tagGROUPCOMMANDINFO
pHead	include/typedef.h	/^		struct	_tagNODEITEM	*pHead;				\/\/ First node pointer$/;"	m	struct:_tagNODE	typeref:struct:_tagNODE::_tagNODEITEM
pID	include/typedef.h	/^	EUI64	pID;$/;"	m	struct:_tagMEMBERINFO
pInterface	include/codiTypedef.h	/^		void		*pInterface;							\/\/ Interface class pointer$/;"	m	struct:_tagCOORDINATOR
pLocker	include/typedef.h	/^		void	*pLocker;							\/\/ Node locker$/;"	m	struct:_tagNODE
pMemberID	include/typedef.h	/^	EUI64	*pMemberID;$/;"	m	struct:_tagGROUPINFO
pNext	include/common/_WinSerialWriter.h	/^		struct		_tagWRITEREQUEST	*pNext;		\/\/ Next node in the list$/;"	m	struct:_tagWRITEREQUEST	typeref:struct:_tagWRITEREQUEST::_tagWRITEREQUEST
pNext	include/typedef.h	/^		struct	_tagLINKNODE	*pNext;$/;"	m	struct:_tagLINKNODE	typeref:struct:_tagLINKNODE::_tagLINKNODE
pNext	include/typedef.h	/^		struct	_tagNODEITEM	*pNext;				\/\/ Next node$/;"	m	struct:_tagNODEITEM	typeref:struct:_tagNODEITEM::_tagNODEITEM
pParser	samples/ge/Operation.h	/^		void			*pParser;$/;"	m	struct:_tagONDEMANDPARAM
pPrev	include/common/_WinSerialWriter.h	/^		struct		_tagWRITEREQUEST	*pPrev;		\/\/ Prev node in the list$/;"	m	struct:_tagWRITEREQUEST	typeref:struct:_tagWRITEREQUEST::_tagWRITEREQUEST
pPrev	include/typedef.h	/^		struct	_tagNODEITEM	*pPrev;				\/\/ Previous node$/;"	m	struct:_tagNODEITEM	typeref:struct:_tagNODEITEM::_tagNODEITEM
pService	include/codiTypedef.h	/^		void			*pService;							\/\/ Service class pointer	$/;"	m	struct:_tagENDDEVICE
pService	include/codiTypedef.h	/^		void		*pService;								\/\/ Service class pointer	$/;"	m	struct:_tagCOORDINATOR
pSession	include/typedef.h	/^        void    		*pSession;					\/\/ Self Session$/;"	m	struct:_tagTCPDATASTREAM
pStream	include/codiTypedef.h	/^		DATASTREAM	*pStream;								\/\/ Data stream$/;"	m	struct:_tagCOORDINATOR
pTail	include/typedef.h	/^		struct	_tagNODEITEM	*pTail;				\/\/ Last node pointer$/;"	m	struct:_tagNODE	typeref:struct:_tagNODE::_tagNODEITEM
pThis	include/typedef.h	/^		void			*pThis;						\/\/ Handle$/;"	m	struct:_tagWORKSESSION
packet_buffer_count	include/codiTypedef.h	/^        BYTE        packet_buffer_count;					\/\/$/;"	m	struct:_tagCOORDINATOR
packet_cmd	samples/ge/GeMeter.h	/^    BYTE       	packet_cmd;$/;"	m	struct:_ansiprotocol
packet_ctrl	samples/ge/GeMeter.h	/^    BYTE       	packet_ctrl;$/;"	m	struct:_ansiprotocol
packet_length	samples/ge/GeMeter.h	/^    WORD      	packet_length;$/;"	m	struct:_ansiprotocol
packet_pread_count	samples/ge/GeMeter.h	/^    WORD      	packet_pread_count;$/;"	m	struct:_ansiprotocol
packet_pread_offset	samples/ge/GeMeter.h	/^    UINT      	packet_pread_offset;$/;"	m	struct:_ansiprotocol
packet_retry	samples/ge/GeMeter.h	/^	BYTE		packet_retry;$/;"	m	struct:_ansiprotocol
packet_table_id	samples/ge/GeMeter.h	/^    WORD      	packet_table_id;$/;"	m	struct:_ansiprotocol
packet_write_ok	samples/ge/GeMeter.h	/^	BYTE		packet_write_ok;$/;"	m	struct:_ansiprotocol
packet_write_table_buf	samples/ge/GeMeter.h	/^    char       	packet_write_table_buf[256];$/;"	m	struct:_ansiprotocol
packet_write_table_count	samples/ge/GeMeter.h	/^    WORD      	packet_write_table_count;$/;"	m	struct:_ansiprotocol
panid	include/codiFrame.h	/^		WORD				panid;							\/\/ PAN ID$/;"	m	struct:_tagCODI_ACTIVESCAN_PAYLOAD
panid	include/codiFrame.h	/^		WORD				panid;							\/\/ PANID$/;"	m	struct:_tagCODI_NETWORK_PAYLOAD
panid	include/codiTypedef.h	/^        WORD        panid;                          		\/\/ PANID$/;"	m	struct:_tagCOORDINATOR
panid	include/endiFrame.h	/^		WORD					panid;						    \/\/ Primary Panid$/;"	m	struct:_tagENDI_LEAVE_PAYLOAD
param	include/endiFrame.h	/^        BYTE        param;                                  \/\/ Command Parameter$/;"	m	struct:_tagENDI_3PARTY_HEADER
parent_short_id	include/codiFrame.h	/^		WORD				parent_short_id;				\/\/ Parent short ID$/;"	m	struct:_tagCODI_JOIN_PAYLOAD
parity	include/codiFrame.h	/^		BYTE				parity;							\/\/ UART 패리트 비트 설정$/;"	m	struct:_tagCODI_SERIAL_PAYLOAD
parity	include/codiTypedef.h	/^        BYTE        parity;                         		\/\/ UART$/;"	m	struct:_tagCOORDINATOR
payload	include/codiFrame.h	/^		BYTE				payload[CODI_MAX_PAYLOAD_SIZE];	\/\/ Frame payload$/;"	m	struct:_tagCODI_COMMAND_FRAME
payload	include/codiFrame.h	/^		BYTE				payload[CODI_MAX_PAYLOAD_SIZE];	\/\/ Frame payload$/;"	m	struct:_tagCODI_GENERAL_FRAME
payload	include/codiFrame.h	/^		BYTE				payload[CODI_MAX_PAYLOAD_SIZE];	\/\/ Frame payload$/;"	m	struct:_tagCODI_INFO_FRAME
payload	include/codiFrame.h	/^		CODI_ACTIVESCAN_PAYLOAD	payload;					\/\/ Payload$/;"	m	struct:_tagCODI_INFO_ACTIVESCAN_FRAME
payload	include/codiFrame.h	/^		CODI_BINDING_PAYLOAD	payload;					\/\/ Payload$/;"	m	struct:_tagCODI_BINDINGTABLE_FRAME
payload	include/codiFrame.h	/^		CODI_BIND_PAYLOAD 	payload;						\/\/ Payload$/;"	m	struct:_tagCODI_BIND_FRAME
payload	include/codiFrame.h	/^		CODI_BOOTLOAD_PAYLOAD 	payload;					\/\/ Payload$/;"	m	struct:_tagCODI_BOOTLOAD_FRAME
payload	include/codiFrame.h	/^		CODI_BOOT_PAYLOAD	payload;						\/\/ Payload$/;"	m	struct:_tagCODI_INFO_BOOT_FRAME
payload	include/codiFrame.h	/^		CODI_DIRECTCOMM_PAYLOAD     payload;                \/\/ Payload$/;"	m	struct:_tagCODI_DIRECTCOMM_FRAME
payload	include/codiFrame.h	/^		CODI_ENERGYSCAN_PAYLOAD	payload;					\/\/ Payload$/;"	m	struct:_tagCODI_INFO_ENERGYSCAN_FRAME
payload	include/codiFrame.h	/^		CODI_ERROR_PAYLOAD	payload;						\/\/ Payload$/;"	m	struct:_tagCODI_INFO_ERROR_FRAME
payload	include/codiFrame.h	/^		CODI_EXTENDEDTIMEOUT_PAYLOAD 	payload;			\/\/ Payload$/;"	m	struct:_tagCODI_EXTENDEDTIMEOUT_FRAME
payload	include/codiFrame.h	/^		CODI_FORMNETWORK_PAYLOAD payload;					\/\/ Payload$/;"	m	struct:_tagCODI_FORMNETWORK_FRAME
payload	include/codiFrame.h	/^		CODI_JOIN_PAYLOAD	payload;						\/\/ Payload$/;"	m	struct:_tagCODI_INFO_JOIN_FRAME
payload	include/codiFrame.h	/^		CODI_KEY_PAYLOAD 	payload;						\/\/ Payload$/;"	m	struct:_tagCODI_KEY_FRAME
payload	include/codiFrame.h	/^		CODI_MANYTOONE_PAYLOAD 	payload;					\/\/ Payload$/;"	m	struct:_tagCODI_MANYTOONE_FRAME
payload	include/codiFrame.h	/^		CODI_MODULE_PAYLOAD	payload;						\/\/ Payload$/;"	m	struct:_tagCODI_MODULE_FRAME
payload	include/codiFrame.h	/^		CODI_MULTICASTHOP_PAYLOAD 	payload;                \/\/ Payload$/;"	m	struct:_tagCODI_MULTICASTHOP_FRAME
payload	include/codiFrame.h	/^		CODI_NEIGHBOR_PAYLOAD payload;						\/\/ Payload$/;"	m	struct:_tagCODI_NEIGHBORTABLE_FRAME
payload	include/codiFrame.h	/^		CODI_NETWORK_PAYLOAD payload;						\/\/ Payload$/;"	m	struct:_tagCODI_NETWORK_FRAME
payload	include/codiFrame.h	/^		CODI_PERMIT_PAYLOAD	payload;						\/\/ Payload$/;"	m	struct:_tagCODI_PERMIT_FRAME
payload	include/codiFrame.h	/^		CODI_RESET_PAYLOAD	payload;						\/\/ Payload$/;"	m	struct:_tagCODI_RESET_FRAME
payload	include/codiFrame.h	/^		CODI_ROUTEDISCOVERY_PAYLOAD 	payload;            \/\/ Payload$/;"	m	struct:_tagCODI_ROUTEDISCOVERY_FRAME
payload	include/codiFrame.h	/^		CODI_ROUTERECORD_PAYLOAD	payload;				\/\/ Payload$/;"	m	struct:_tagCODI_INFO_ROUTERECORD_FRAME
payload	include/codiFrame.h	/^		CODI_ROUTERECORD_PAYLOAD 	payload;				\/\/ Payload$/;"	m	struct:_tagCODI_ROUTE_FRAME
payload	include/codiFrame.h	/^		CODI_SCANCOMPLETE_PAYLOAD	payload;				\/\/ Payload$/;"	m	struct:_tagCODI_INFO_SCANCOMPLETE_FRAME
payload	include/codiFrame.h	/^		CODI_SCANNETWORK_PAYLOAD 	payload;				\/\/ Payload$/;"	m	struct:_tagCODI_SCANNETWORK_FRAME
payload	include/codiFrame.h	/^		CODI_SCAN_PAYLOAD 	payload;						\/\/ Payload$/;"	m	struct:_tagCODI_SCAN_FRAME
payload	include/codiFrame.h	/^		CODI_SECURITY_PAYLOAD payload;						\/\/ Payload$/;"	m	struct:_tagCODI_SECURITY_FRAME
payload	include/codiFrame.h	/^		CODI_SERIAL_PAYLOAD	payload;						\/\/ Payload$/;"	m	struct:_tagCODI_SERIAL_FRAME
payload	include/codiFrame.h	/^		CODI_STACKMEMORY_PAYLOAD payload;					\/\/ Payload$/;"	m	struct:_tagCODI_STACKMEMORY_FRAME
payload	include/codiFrame.h	/^		CODI_STACK_PAYLOAD	payload;						\/\/ Payload$/;"	m	struct:_tagCODI_INFO_STACK_FRAME
payload	include/codiFrame.h	/^		CODI_WRITE_PAYLOAD	payload;						\/\/ Payload$/;"	m	struct:_tagCODI_WRITE_FRAME
payload	include/endiFrame.h	/^		BYTE					payload[CODI_MAX_PAYLOAD_SIZE];	\/\/ Payload$/;"	m	struct:_tagENDI_DATA_FRAME
payload	include/endiFrame.h	/^		ENDI_AMR_PAYLOAD		payload;						\/\/ Payload$/;"	m	struct:_tagENDI_AMR_FRAME
payload	include/endiFrame.h	/^		ENDI_BYPASS_PAYLOAD		payload;						\/\/ Payload$/;"	m	struct:_tagENDI_BYPASS_FRAME
payload	include/endiFrame.h	/^		ENDI_COMMAND_PAYLOAD	payload;						\/\/ Payload$/;"	m	struct:_tagENDI_COMMAND_FRAME
payload	include/endiFrame.h	/^		ENDI_DIO_PAYLOAD		payload;						\/\/ Payload$/;"	m	struct:_tagENDI_DIO_FRAME
payload	include/endiFrame.h	/^		ENDI_DISCOVERY_PAYLOAD	payload;						\/\/ Payload$/;"	m	struct:_tagENDI_DISCOVERY_FRAME
payload	include/endiFrame.h	/^		ENDI_ERROR_PAYLOAD		payload;						\/\/ Payload$/;"	m	struct:_tagENDI_ERROR_FRAME
payload	include/endiFrame.h	/^		ENDI_EVENT_PAYLOAD 		payload;						\/\/ Payload$/;"	m	struct:_tagENDI_EVENT_FRAME
payload	include/endiFrame.h	/^		ENDI_LEAVE_PAYLOAD		payload;						\/\/ Payload$/;"	m	struct:_tagENDI_LEAVE_FRAME
payload	include/endiFrame.h	/^		ENDI_LINK_PAYLOAD		payload;						\/\/ Payload$/;"	m	struct:_tagENDI_LINK_FRAME
payload	include/endiFrame.h	/^		ENDI_LONG_ROM_PAYLOAD	payload;						\/\/ Payload$/;"	m	struct:_tagENDI_LONG_ROM_FRAME
payload	include/endiFrame.h	/^		ENDI_MCCB_PAYLOAD		payload;						\/\/ Payload$/;"	m	struct:_tagENDI_MCCB_FRAME
payload	include/endiFrame.h	/^		ENDI_NAN_PAYLOAD        payload;                        \/\/ Payload$/;"	m	struct:_tagENDI_NAN_FRAME
payload	include/endiFrame.h	/^		ENDI_ROM_PAYLOAD		payload;						\/\/ Payload$/;"	m	struct:_tagENDI_ROM_FRAME
payload	include/endiFrame.h	/^		ENDI_STATE_PAYLOAD		payload;						\/\/ Payload$/;"	m	struct:_tagENDI_STATE_FRAME
payload	include/endiFrame.h	/^		ENDI_SUPER_PARENT_PAYLOAD payload;						\/\/ Payload$/;"	m	struct:_tagENDI_SUPER_PARENT_FRAME
payload	include/endiFrame.h	/^		ENDI_TIMESYNC_PAYLOAD	payload;						\/\/ Payload$/;"	m	struct:_tagENDI_TIMESYNC_FRAME
payload	include/endiFrame.h	/^        BYTE                payload[0];$/;"	m	struct:_tagAPP_3PARTY_PAYLOAD
payload	include/endiFrame.h	/^        BYTE                payload[ZIGBEE_MAX_PAYLOAD_SIZE];$/;"	m	struct:_tagENDI_3PARTY_FRAME
payload	include/endiFrame.h	/^        BYTE    payload[ZIGBEE_MAX_PAYLOAD_SIZE];     \/\/LEN$/;"	m	struct:_tagMBUS_DATA_FRAME
payload	include/endiFrame.h	/^        ENDI_METERING_PAYLOAD   payload;                        \/\/ Metering Payload$/;"	m	struct:_tagENDI_METERING_FRAME
period	include/endiFrame.h	/^		BYTE					period;							\/\/ Meter period$/;"	m	struct:_tagENDI_AMR_DATA
permit_mode	include/endiFrame.h	/^        BYTE                    permit_mode;                    \/\/ 0 : Disable AutoPermitControl, !0 : Enable AutoPermitControl$/;"	m	struct:_tagENDI_STATE_PAYLOAD
permit_state	include/endiFrame.h	/^        BYTE                    permit_state;                   \/\/ Permit Time (0 \/ 255)$/;"	m	struct:_tagENDI_STATE_PAYLOAD
permit_time	include/codiFrame.h	/^		BYTE				permit_time;					\/\/ Permit 시간$/;"	m	struct:_tagCODI_PERMIT_PAYLOAD
permit_time	include/codiTypedef.h	/^		BYTE		permit_time;							\/\/ Permit$/;"	m	struct:_tagCOORDINATOR
pnReply	samples/ge/MeterParser.h	/^		int			*pnReply;					\/\/ Response size pointer$/;"	m	struct:_tagCMDPARAM
portNum	include/endiFrame.h	/^        BYTE                    portNum;                        \/\/ Device Port Number$/;"	m	struct:_tagENDI_PUSH_EVT_HEADER
portNum	include/endiFrame.h	/^        BYTE                    portNum;                        \/\/ Device Port Number$/;"	m	struct:_tagENDI_PUSH_HEADER
pos	include/codiTypedef.h	/^		int				pos;								\/\/ List position$/;"	m	struct:_tagCODIWAITREPLY
pos	include/codiTypedef.h	/^		int			pos;									\/\/ List position$/;"	m	struct:_tagCOORDINATOR
pos	samples/ge/Operation.h	/^		POSITION		pos;$/;"	m	struct:_tagONDEMANDPARAM
position	samples/bypass/bypass.cpp	/^    int         position;$/;"	m	struct:__anon7	file:
position	samples/dump/dump.cpp	/^    int         position;$/;"	m	struct:__anon6	file:
position	samples/rfmonitor/rfmonitor.cpp	/^    int         position;$/;"	m	struct:__anon5	file:
power	include/codiFrame.h	/^		signed char			power;							\/\/ RF Power$/;"	m	struct:_tagCODI_NETWORK_PAYLOAD
power	include/codiTypedef.h	/^        signed char power;                          		\/\/ RF Power$/;"	m	struct:_tagCOORDINATOR
pszBinFilePat	include/typedef.h	/^        BYTE        pszBinFilePat[128];$/;"	m	struct:_tagDISTRIBUTEITEM
pszBinMD5	include/typedef.h	/^        char        pszBinMD5[33];$/;"	m	struct:_tagDISTRIBUTEITEM
pszBuffer	include/codiTypedef.h	/^		BYTE			*pszBuffer;							\/\/ Reply buffer$/;"	m	struct:_tagCODIWAITREPLY
pszBuffer	include/common/Chunk.h	/^		char	*pszBuffer;					\/\/ 버퍼$/;"	m	struct:_tagCHUNK
pszBuffer	include/typedef.h	/^        char    		*pszBuffer;					\/\/ Buffer$/;"	m	struct:_tagDATASTREAM
pszBuffer	include/typedef.h	/^        char    		*pszBuffer;					\/\/ Data Buffer$/;"	m	struct:_tagTCPDATASTREAM
pszBuffer	samples/ge/Operation.h	/^		char			*pszBuffer;$/;"	m	struct:_tagONDEMANDPARAM
pszBuildVer	include/typedef.h	/^        char        pszBuildVer[10];$/;"	m	struct:_tagDISTRIBUTECLI
pszDiffFilePat	include/typedef.h	/^        BYTE        pszDiffFilePat[128];$/;"	m	struct:_tagDISTRIBUTEITEM
pszDiffMD5	include/typedef.h	/^        char        pszDiffMD5[33];$/;"	m	struct:_tagDISTRIBUTEITEM
pszFilePat	include/typedef.h	/^        BYTE        pszFilePat[128];$/;"	m	struct:_tagDISTRIBUTECLI
pszIdList	include/typedef.h	/^        BYTE        pszIdList[20];$/;"	m	struct:_tagDISTRIBUTEITEM
pszName	include/typedef.h	/^		char	*pszName;							\/\/ Node name$/;"	m	struct:_tagNODE
pszNewBuildVer	include/typedef.h	/^        char        pszNewBuildVer[50];$/;"	m	struct:_tagDISTRIBUTEITEM
pszNewHwVer	include/typedef.h	/^        char        pszNewHwVer[50];$/;"	m	struct:_tagDISTRIBUTEITEM
pszNewSwVer	include/typedef.h	/^        char        pszNewSwVer[50];$/;"	m	struct:_tagDISTRIBUTEITEM
pszOldBuildVer	include/typedef.h	/^        char        pszOldBuildVer[50];$/;"	m	struct:_tagDISTRIBUTEITEM
pszOldHwVer	include/typedef.h	/^        char        pszOldHwVer[50];$/;"	m	struct:_tagDISTRIBUTEITEM
pszOldSwVer	include/typedef.h	/^        char        pszOldSwVer[50];$/;"	m	struct:_tagDISTRIBUTEITEM
pszParam	samples/ge/MeterParser.h	/^		char		*pszParam;					\/\/ Parameter buffer$/;"	m	struct:_tagCMDPARAM
pszReply	samples/ge/MeterParser.h	/^		char		*pszReply;					\/\/ Response data buffer$/;"	m	struct:_tagCMDPARAM
pszSwVer	include/typedef.h	/^        char        pszSwVer[10];$/;"	m	struct:_tagDISTRIBUTECLI
pszTriggered	include/typedef.h	/^        BYTE        pszTriggered[128];$/;"	m	struct:_tagDISTRIBUTEITEM
pszWindow	include/typedef.h	/^		char			*pszWindow;$/;"	m	struct:_tagDATASTREAM
pulse	include/endiFrame.h	/^		UINT					pulse;							\/\/ Current pulse$/;"	m	struct:_tagENDI_AMR_DATA
radius	include/codiFrame.h	/^		BYTE				radius;							\/\/ Request Radius$/;"	m	struct:_tagCODI_MANYTOONE_PAYLOAD
remark	include/common/PrivateProfile.h	/^	char	*remark;$/;"	m	struct:_tagPPOBJECT
remote	include/codiFrame.h	/^		BYTE				remote;							\/\/ The endpoint on the remote node$/;"	m	struct:_tagCODI_BINDING_ENTRY
rep_daymask	include/endiFrame.h	/^		BYTE					rep_daymask[4];					\/\/ Repeating hour mask$/;"	m	struct:_tagENDI_AMR_DATA
rep_hourmask	include/endiFrame.h	/^		BYTE					rep_hourmask[12];				\/\/$/;"	m	struct:_tagENDI_AMR_DATA
rep_setuptime	include/endiFrame.h	/^		WORD					rep_setuptime;					\/\/ Repeater setup time$/;"	m	struct:_tagENDI_AMR_DATA
replied	include/codiTypedef.h	/^		BOOL			replied;							\/\/ Reply flag$/;"	m	struct:_tagCODIWAITREPLY
reserved	include/endiFrame.h	/^        BYTE        reserved;                               \/\/ reserved field$/;"	m	struct:_tagENDI_DIO_PAYLOAD
reserved	samples/ge/GeMeter.h	/^		BYTE		reserved;$/;"	m	struct:_tagANSI_HEADER
reset	include/codiFrame.h	/^		BYTE				reset;							\/\/ Reset flag(1=Reset system)$/;"	m	struct:_tagCODI_RESET_PAYLOAD
reset	include/endiFrame.h	/^		BYTE					reset;							\/\/ Reset$/;"	m	struct:_tagENDI_AMR_DATA
result	include/codiTypedef.h	/^		BYTE			result;								\/\/ Reply result$/;"	m	struct:_tagCODIWAITREPLY
rk	include/codiFrame.h	/^		BYTE				rk;								\/\/ Reset kind$/;"	m	struct:_tagCODI_BOOT_PAYLOAD
rk	include/codiFrame.h	/^		BYTE				rk;								\/\/ Reset kind$/;"	m	struct:_tagCODI_MODULE_PAYLOAD
rk	include/codiTypedef.h	/^		BYTE		rk;										\/\/ Reset kind$/;"	m	struct:_tagCOORDINATOR
routePath	include/codiFrame.h	/^		WORD				routePath[CODI_MAX_ROUTING_PATH];	\/\/ Routing path$/;"	m	struct:_tagCODI_ROUTERECORD_PAYLOAD
route_table_size	include/codiTypedef.h	/^        BYTE        route_table_size;						\/\/$/;"	m	struct:_tagCOORDINATOR
routingPath	include/codiFrame.h	/^		WORD				routingPath[CODI_MAX_ROUTING_PATH];	\/\/ Routing path$/;"	m	struct:_tagCODI_BIND_PAYLOAD
rssi	include/codiFrame.h	/^		BYTE				rssi;							\/\/ Max RSSI$/;"	m	struct:_tagCODI_ENERGYSCAN_PAYLOAD
rtscts	include/codiFrame.h	/^		BYTE				rtscts;							\/\/ RTS\/CTS Enable \/ Disable$/;"	m	struct:_tagCODI_SERIAL_PAYLOAD
rtscts	include/codiTypedef.h	/^        BYTE        rtscts;                         		\/\/ RTS\/CTS Enable \/ Disable$/;"	m	struct:_tagCOORDINATOR
sSocket	include/typedef.h	/^        SOCKET          sSocket;$/;"	m	struct:_tagWORKSESSION
s_ctx	include/common/TCPMultiplexServer.h	/^	SSL_CTX *                       s_ctx;$/;"	m	class:CTCPMultiplexServer
s_ssl	include/common/TCPMultiplexServer.h	/^    SSL *                           s_ssl;$/;"	m	class:CTCPMultiplexServer
scan_mask	include/codiFrame.h	/^		UINT				scan_mask;						\/\/ Channel scan mask$/;"	m	struct:_tagCODI_SCANNETWORK_PAYLOAD
scan_mask	include/codiFrame.h	/^		UINT				scan_mask;						\/\/ Channel scan mask$/;"	m	struct:_tagCODI_SCAN_PAYLOAD
scan_mask	include/codiTypedef.h	/^		UINT		scan_mask;								\/\/ Channel scan mask$/;"	m	struct:_tagCOORDINATOR
sec	include/typedef.h	/^		BYTE			sec;						\/\/ Sec$/;"	m	struct:_tagGMTTIMESTAMP
sec	include/typedef.h	/^		BYTE			sec;						\/\/ Sec$/;"	m	struct:_tagTIMESTAMP
sec	include/typedef.h	/^		BYTE			sec;						\/\/ Sec$/;"	m	struct:_tagTIMESTAMP6
second	include/codiFrame.h	/^		BYTE				second;							\/\/ Always 0x98$/;"	m	struct:_tagCODI_IDENT
section	include/common/PrivateProfile.h	/^	char 	*section;$/;"	m	struct:_tagPPOBJECT
security	include/codiFrame.h	/^		BYTE				security;						\/\/ Security key enable$/;"	m	struct:_tagCODI_SECURITY_PAYLOAD
security	include/codiTypedef.h	/^        BYTE        security;                       		\/\/ Security key enable$/;"	m	struct:_tagCOORDINATOR
sendCommand	samples/ge/Operation.cpp	/^BOOL COperation::sendCommand(ONDEMANDPARAM *pOndemand, EUI64 *id, const char *pszCommand, int nLength)$/;"	f	class:COperation
sensorType	include/endiFrame.h	/^        BYTE                    sensorType;                     \/\/ Sensor type$/;"	m	struct:_tagENDI_METERING_INFO
sensor_id	samples/ge/GeMeter.h	/^		EUI64		sensor_id;$/;"	m	struct:_tagPACKET_HEADER
seq	include/codiFrame.h	/^		BYTE				seq;							\/\/ Sequence$/;"	m	struct:_tagCODI_HEADER
seq	include/codiTypedef.h	/^		BYTE			seq;								\/\/ Command sequence$/;"	m	struct:_tagCODIWAITREPLY
seq	include/codiTypedef.h	/^		BYTE			seq;								\/\/ Last sequence$/;"	m	struct:_tagENDDEVICE
seq	include/codiTypedef.h	/^    BYTE                    seq;$/;"	m	struct:_tagFRAMEDATA
seq	include/endiFrame.h	/^        BYTE        seq;                                    \/\/ Sequence$/;"	m	struct:_tagENDI_3PARTY_HEADER
seq	samples/ge/GeMeter.h	/^		BYTE		seq;$/;"	m	struct:_tagANSI_HEADER
short_id	include/codiFrame.h	/^		WORD				short_id;						\/\/ Short ID$/;"	m	struct:_tagCODI_JOIN_PAYLOAD
shortid	include/codiFrame.h	/^		WORD				shortid;						\/\/ Short ID$/;"	m	struct:_tagCODI_BIND_PAYLOAD
shortid	include/codiFrame.h	/^		WORD				shortid;						\/\/ Short ID$/;"	m	struct:_tagCODI_BOOT_PAYLOAD
shortid	include/codiFrame.h	/^		WORD				shortid;						\/\/ Short ID$/;"	m	struct:_tagCODI_MODULE_PAYLOAD
shortid	include/codiFrame.h	/^		WORD				shortid;						\/\/ Source short id$/;"	m	struct:_tagCODI_DIRECTCOMM_PAYLOAD
shortid	include/codiFrame.h	/^		WORD				shortid;						\/\/ Source short id$/;"	m	struct:_tagCODI_ROUTERECORD_PAYLOAD
shortid	include/codiTypedef.h	/^		WORD		shortid;								\/\/ Coordinator short id$/;"	m	struct:_tagCOORDINATOR
sig_cond	include/common/Event.h	/^    	pthread_cond_t  sig_cond;$/;"	m	struct:_tagEVENTHANDLE
sig_mutex	include/common/Event.h	/^    	pthread_mutex_t sig_mutex;$/;"	m	struct:_tagEVENTHANDLE
signal_handler	samples/aidon/aidon.cpp	/^void signal_handler(int nSignal)$/;"	f
signal_handler	samples/bypass/bypass.cpp	/^void signal_handler(int nSignal)$/;"	f
signal_handler	samples/dump/dump.cpp	/^void signal_handler(int nSignal)$/;"	f
signal_handler	samples/enditest/enditest.cpp	/^void signal_handler(int nSignal)$/;"	f
signal_handler	samples/ge/ge.cpp	/^void signal_handler(int nSignal)$/;"	f
signal_handler	samples/init/init.cpp	/^void signal_handler(int nSignal)$/;"	f
signal_handler	samples/rfmonitor/rfmonitor.cpp	/^void signal_handler(int nSignal)$/;"	f
signal_handler	samples/update/update.cpp	/^void signal_handler(int nSignal)$/;"	f
solar_board_volt	include/endiFrame.h	/^        WORD                    solar_board_volt;               \/\/ Board Volt.$/;"	m	struct:_tagENDI_STATE_PAYLOAD
solar_chg_bat_volt	include/endiFrame.h	/^        WORD                    solar_chg_bat_volt;             \/\/ Charge Battery Volt.$/;"	m	struct:_tagENDI_STATE_PAYLOAD
solar_volt	include/endiFrame.h	/^        WORD                    solar_volt;                     \/\/ Main Volt.$/;"	m	struct:_tagENDI_STATE_PAYLOAD
source_route_table_size	include/codiTypedef.h	/^        BYTE        source_route_table_size;			    \/\/$/;"	m	struct:_tagCOORDINATOR
stack_profile	include/codiFrame.h	/^		BYTE				stack_profile;					\/\/ Stack profile$/;"	m	struct:_tagCODI_ACTIVESCAN_PAYLOAD
stat	samples/ge/Operation.h	/^		METER_STAT		stat;$/;"	m	struct:_tagONDEMANDPARAM
state	include/common/MD5.h	/^        UINT state[4];		\/* state (ABCD) *\/$/;"	m	struct:CMD5::__anon2
state	samples/bypass/bypass.cpp	/^    int         state;$/;"	m	struct:__anon7	file:
state	samples/dump/dump.cpp	/^    int         state;$/;"	m	struct:__anon6	file:
state	samples/rfmonitor/rfmonitor.cpp	/^    int         state;$/;"	m	struct:__anon5	file:
status	include/codiFrame.h	/^		BYTE				status;							\/\/ Stack status$/;"	m	struct:_tagCODI_STACK_PAYLOAD
status	include/codiFrame.h	/^		BYTE				status;							\/\/ Status$/;"	m	struct:_tagCODI_JOIN_PAYLOAD
status	include/codiFrame.h	/^		BYTE				status;							\/\/ error condition on the current channel$/;"	m	struct:_tagCODI_SCANCOMPLETE_PAYLOAD
status	include/codiFrame.h	/^		BYTE				status;							\/\/ status$/;"	m	struct:_tagCODI_KEY_TABLE_ENTRY
status	include/endiFrame.h	/^		ENDI_EVENT_STATUS		status;							\/\/ Event status$/;"	m	struct:_tagENDI_EVENT_PAYLOAD
stopbit	include/codiFrame.h	/^		BYTE				stopbit;						\/\/ UART 스톱 비트 설정$/;"	m	struct:_tagCODI_SERIAL_PAYLOAD
stopbit	include/codiTypedef.h	/^        BYTE        stopbit;                        		\/\/ UART$/;"	m	struct:_tagCOORDINATOR
stp	samples/ge/GeMeter.h	/^		BYTE		stp;$/;"	m	struct:_tagANSI_HEADER
str	include/endiFrame.h	/^			BYTE				str[4];$/;"	m	union:_tagENDI_EVENT_STATUS::__anon4
stream	samples/bypass/bypass.cpp	/^    DATASTREAM  stream;$/;"	m	struct:__anon7	file:
stream	samples/dump/dump.cpp	/^    DATASTREAM  stream;$/;"	m	struct:__anon6	file:
stx	include/endiFrame.h	/^        BYTE        stx;                                    \/\/ 0x02$/;"	m	struct:_tagAPP_3PARTY_HEADER
stx	include/endiFrame.h	/^        BYTE        stx;                                    \/\/ 0x02$/;"	m	struct:_tagENDI_3PARTY_HEADER
swVersion	include/codiTypedef.h	/^        WORD        swVersion;                              \/\/ Ember Software Version$/;"	m	struct:_tagCOORDINATOR
swVersion	include/endiFrame.h	/^        BYTE                    swVersion;                      \/\/$/;"	m	struct:_tagENDI_METERING_INFO
szAddress	include/typedef.h	/^		char			szAddress[32];				\/\/ Address$/;"	m	struct:_tagWORKSESSION
szChecksum	include/typedef.h	/^		char	szChecksum[33];			\/\/ MD5 Checksum$/;"	m	struct:_tagPACKAGEINFO
szData	include/typedef.h	/^		char			szData[255];				\/\/ Event Data$/;"	m	struct:_tagEVENTWRITEITEM
szDevice	include/codiTypedef.h	/^		char		szDevice[65];							\/\/ Device name$/;"	m	struct:_tagCODIDEVICE
szDistribut	include/typedef.h	/^        BYTE        szDistribut;            \/\/장비 타입(0:mcu, 1:sensor, 2:codi)$/;"	m	struct:_tagDISTRIBUTEITEM
szDistribut	include/typedef.h	/^        BYTE        szDistribut;$/;"	m	struct:_tagDISTRIBUTECLI
szGUID	include/codiTypedef.h	/^		char			szGUID[17];							\/\/ String EUI64$/;"	m	struct:_tagENDDEVICE
szGUID	include/codiTypedef.h	/^		char		szGUID[17];								\/\/ String EUI64$/;"	m	struct:_tagCOORDINATOR
szMETERtype	include/typedef.h	/^        BYTE        szMETERtype;$/;"	m	struct:_tagDISTRIBUTECLI
szModel	include/typedef.h	/^		char	szModel[21];			\/\/ Model name$/;"	m	struct:_tagPACKAGEINFO
szModemType	include/typedef.h	/^        BYTE        szModemType;\/\/  Modem type(1.4.0): Modem type (0:ge, 1:aidon, 2:kamstrup)$/;"	m	struct:_tagDISTRIBUTEITEM
szOTALevel	include/typedef.h	/^        BYTE        szOTALevel; \/\/(1.4.0) : OTA 단계 조절(0 : ALL, 1 : Data send, 2 : Verify, 3: Install)$/;"	m	struct:_tagDISTRIBUTEITEM
szOTARetryCnt	include/typedef.h	/^        BYTE        szOTARetryCnt;\/\/ Count(1.4.0) : OTA 실패한 Sensor에 대한 Retry 횟수$/;"	m	struct:_tagDISTRIBUTEITEM
szOTAtype	include/typedef.h	/^        BYTE        szOTAtype; \/\/OTA run type(1.4.0) : Run type(0: schedule, 0: run, 1: State, 2: cancel)$/;"	m	struct:_tagDISTRIBUTEITEM
szPassword	include/typedef.h	/^		char			szPassword[17];				\/\/ Password$/;"	m	struct:_tagUSERINFO
szSensorID	samples/aidon/aidon.cpp	/^static char szSensorID[17] = "000B12000000273B";$/;"	v	file:
szSensorID	samples/ge/ge.cpp	/^static char szSensorID[17] = "000B1200750C5FE6";$/;"	v	file:
szTransferType	include/typedef.h	/^        BYTE        szTransferType; \/\/Data transfer type(0:auto, 1: Multicast, 2: Unicast) auto일 때 50대 기준으로 판단이 된다. $/;"	m	struct:_tagDISTRIBUTEITEM
szUser	include/typedef.h	/^		char			szUser[17];					\/\/ User ID$/;"	m	struct:_tagUSERINFO
szmethod	include/typedef.h	/^        BYTE        szmethod;  $/;"	m	struct:_tagDISTRIBUTECLI
t	include/typedef.h	/^        DWORD           t;                          \/\/ Tick count (DWORD)$/;"	m	struct:_tagTIMETICK
table	samples/ge/GeMeter.h	/^		char		table[3];$/;"	m	struct:_tagPACKET_TABLE_HEADER
table	samples/ge/i210.cpp	/^        char    table[4];$/;"	m	struct:_tagGETABLE	file:
table_data	samples/ge/GeMeter.h	/^	char		table_data[8092];$/;"	m	struct:_meterconfig
table_length	samples/ge/GeMeter.h	/^	WORD		table_length;$/;"	m	struct:_meterconfig
tail	include/codiFrame.h	/^		CODI_TAIL			tail;							\/\/ Tail$/;"	m	struct:_tagCODI_BINDINGTABLE_FRAME
tail	include/codiFrame.h	/^		CODI_TAIL			tail;							\/\/ Tail$/;"	m	struct:_tagCODI_BIND_FRAME
tail	include/codiFrame.h	/^		CODI_TAIL			tail;							\/\/ Tail$/;"	m	struct:_tagCODI_BOOTLOAD_FRAME
tail	include/codiFrame.h	/^		CODI_TAIL			tail;							\/\/ Tail$/;"	m	struct:_tagCODI_COMMAND_FRAME
tail	include/codiFrame.h	/^		CODI_TAIL			tail;							\/\/ Tail$/;"	m	struct:_tagCODI_DIRECTCOMM_FRAME
tail	include/codiFrame.h	/^		CODI_TAIL			tail;							\/\/ Tail$/;"	m	struct:_tagCODI_EXTENDEDTIMEOUT_FRAME
tail	include/codiFrame.h	/^		CODI_TAIL			tail;							\/\/ Tail$/;"	m	struct:_tagCODI_FORMNETWORK_FRAME
tail	include/codiFrame.h	/^		CODI_TAIL			tail;							\/\/ Tail$/;"	m	struct:_tagCODI_GENERAL_FRAME
tail	include/codiFrame.h	/^		CODI_TAIL			tail;							\/\/ Tail$/;"	m	struct:_tagCODI_INFO_ACTIVESCAN_FRAME
tail	include/codiFrame.h	/^		CODI_TAIL			tail;							\/\/ Tail$/;"	m	struct:_tagCODI_INFO_BOOT_FRAME
tail	include/codiFrame.h	/^		CODI_TAIL			tail;							\/\/ Tail$/;"	m	struct:_tagCODI_INFO_ENERGYSCAN_FRAME
tail	include/codiFrame.h	/^		CODI_TAIL			tail;							\/\/ Tail$/;"	m	struct:_tagCODI_INFO_ERROR_FRAME
tail	include/codiFrame.h	/^		CODI_TAIL			tail;							\/\/ Tail$/;"	m	struct:_tagCODI_INFO_FRAME
tail	include/codiFrame.h	/^		CODI_TAIL			tail;							\/\/ Tail$/;"	m	struct:_tagCODI_INFO_JOIN_FRAME
tail	include/codiFrame.h	/^		CODI_TAIL			tail;							\/\/ Tail$/;"	m	struct:_tagCODI_INFO_ROUTERECORD_FRAME
tail	include/codiFrame.h	/^		CODI_TAIL			tail;							\/\/ Tail$/;"	m	struct:_tagCODI_INFO_SCANCOMPLETE_FRAME
tail	include/codiFrame.h	/^		CODI_TAIL			tail;							\/\/ Tail$/;"	m	struct:_tagCODI_INFO_STACK_FRAME
tail	include/codiFrame.h	/^		CODI_TAIL			tail;							\/\/ Tail$/;"	m	struct:_tagCODI_KEY_FRAME
tail	include/codiFrame.h	/^		CODI_TAIL			tail;							\/\/ Tail$/;"	m	struct:_tagCODI_MANYTOONE_FRAME
tail	include/codiFrame.h	/^		CODI_TAIL			tail;							\/\/ Tail$/;"	m	struct:_tagCODI_MODULE_FRAME
tail	include/codiFrame.h	/^		CODI_TAIL			tail;							\/\/ Tail$/;"	m	struct:_tagCODI_MULTICASTHOP_FRAME
tail	include/codiFrame.h	/^		CODI_TAIL			tail;							\/\/ Tail$/;"	m	struct:_tagCODI_NEIGHBORTABLE_FRAME
tail	include/codiFrame.h	/^		CODI_TAIL			tail;							\/\/ Tail$/;"	m	struct:_tagCODI_NETWORK_FRAME
tail	include/codiFrame.h	/^		CODI_TAIL			tail;							\/\/ Tail$/;"	m	struct:_tagCODI_PERMIT_FRAME
tail	include/codiFrame.h	/^		CODI_TAIL			tail;							\/\/ Tail$/;"	m	struct:_tagCODI_RESET_FRAME
tail	include/codiFrame.h	/^		CODI_TAIL			tail;							\/\/ Tail$/;"	m	struct:_tagCODI_ROUTEDISCOVERY_FRAME
tail	include/codiFrame.h	/^		CODI_TAIL			tail;							\/\/ Tail$/;"	m	struct:_tagCODI_ROUTE_FRAME
tail	include/codiFrame.h	/^		CODI_TAIL			tail;							\/\/ Tail$/;"	m	struct:_tagCODI_SCANNETWORK_FRAME
tail	include/codiFrame.h	/^		CODI_TAIL			tail;							\/\/ Tail$/;"	m	struct:_tagCODI_SCAN_FRAME
tail	include/codiFrame.h	/^		CODI_TAIL			tail;							\/\/ Tail$/;"	m	struct:_tagCODI_SECURITY_FRAME
tail	include/codiFrame.h	/^		CODI_TAIL			tail;							\/\/ Tail$/;"	m	struct:_tagCODI_SERIAL_FRAME
tail	include/codiFrame.h	/^		CODI_TAIL			tail;							\/\/ Tail$/;"	m	struct:_tagCODI_STACKMEMORY_FRAME
tail	include/codiFrame.h	/^		CODI_TAIL			tail;							\/\/ Tail$/;"	m	struct:_tagCODI_WRITE_FRAME
tail	include/endiFrame.h	/^		CODI_TAIL				tail;							\/\/ Tail$/;"	m	struct:_tagENDI_AMR_FRAME
tail	include/endiFrame.h	/^		CODI_TAIL				tail;							\/\/ Tail$/;"	m	struct:_tagENDI_BYPASS_FRAME
tail	include/endiFrame.h	/^		CODI_TAIL				tail;							\/\/ Tail$/;"	m	struct:_tagENDI_COMMAND_FRAME
tail	include/endiFrame.h	/^		CODI_TAIL				tail;							\/\/ Tail$/;"	m	struct:_tagENDI_DATA_FRAME
tail	include/endiFrame.h	/^		CODI_TAIL				tail;							\/\/ Tail$/;"	m	struct:_tagENDI_DIO_FRAME
tail	include/endiFrame.h	/^		CODI_TAIL				tail;							\/\/ Tail$/;"	m	struct:_tagENDI_DISCOVERY_FRAME
tail	include/endiFrame.h	/^		CODI_TAIL				tail;							\/\/ Tail$/;"	m	struct:_tagENDI_ERROR_FRAME
tail	include/endiFrame.h	/^		CODI_TAIL				tail;							\/\/ Tail$/;"	m	struct:_tagENDI_EVENT_FRAME
tail	include/endiFrame.h	/^		CODI_TAIL				tail;							\/\/ Tail$/;"	m	struct:_tagENDI_LEAVE_FRAME
tail	include/endiFrame.h	/^		CODI_TAIL				tail;							\/\/ Tail$/;"	m	struct:_tagENDI_LINK_FRAME
tail	include/endiFrame.h	/^		CODI_TAIL				tail;							\/\/ Tail$/;"	m	struct:_tagENDI_LONG_ROM_FRAME
tail	include/endiFrame.h	/^		CODI_TAIL				tail;							\/\/ Tail$/;"	m	struct:_tagENDI_MCCB_FRAME
tail	include/endiFrame.h	/^		CODI_TAIL				tail;							\/\/ Tail$/;"	m	struct:_tagENDI_METERING_FRAME
tail	include/endiFrame.h	/^		CODI_TAIL				tail;							\/\/ Tail$/;"	m	struct:_tagENDI_PUSH_FRAME
tail	include/endiFrame.h	/^		CODI_TAIL				tail;							\/\/ Tail$/;"	m	struct:_tagENDI_ROM_FRAME
tail	include/endiFrame.h	/^		CODI_TAIL				tail;							\/\/ Tail$/;"	m	struct:_tagENDI_STATE_FRAME
tail	include/endiFrame.h	/^		CODI_TAIL				tail;							\/\/ Tail$/;"	m	struct:_tagENDI_SUPER_PARENT_FRAME
tail	include/endiFrame.h	/^		CODI_TAIL				tail;							\/\/ Tail$/;"	m	struct:_tagENDI_TIMESYNC_FRAME
tail	include/endiFrame.h	/^		CODI_TAIL				tail;                           \/\/ Tail$/;"	m	struct:_tagENDI_NAN_FRAME
tail	include/endiFrame.h	/^        ENDI_3PARTY_TAIL    tail;$/;"	m	struct:_tagENDI_3PARTY_FRAME
tail	samples/ge/GeMeter.h	/^		ANSI_TAIL	tail;$/;"	m	struct:_tagANSI_FRAME
tmBoot	include/codiTypedef.h	/^		cetime_t	tmBoot;									\/\/ Boot time$/;"	m	struct:_tagCOORDINATOR
tmConnect	samples/ge/Operation.h	/^		TIMETICK        tmConnect;$/;"	m	struct:_tagONDEMANDPARAM
tmEnd	samples/ge/Operation.h	/^		TIMETICK        tmEnd;$/;"	m	struct:_tagONDEMANDPARAM
tmEvent	include/typedef.h	/^		TIMESTAMP		tmEvent;					\/\/ Event Time$/;"	m	struct:_tagEVENTWRITEITEM
tmLastComm	include/codiTypedef.h	/^        cetime_t    tmLastComm;                             \/\/ Last communication time $/;"	m	struct:_tagCOORDINATOR
tmLastConnect	include/codiTypedef.h	/^		cetime_t		tmLastConnect;						\/\/ Last connect time$/;"	m	struct:_tagENDDEVICE
tmLastMetering	samples/ge/Operation.h	/^		TIMESTAMP		tmLastMetering;$/;"	m	struct:_tagONDEMANDPARAM
tmLastReceive	include/codiTypedef.h	/^		cetime_t		tmLastReceive;						\/\/ Last receive time$/;"	m	struct:_tagENDDEVICE
tmLastRecv	include/codiTypedef.h	/^		cetime_t	tmLastRecv;								\/\/ Last receive time$/;"	m	struct:_tagCOORDINATOR
tmLastSend	include/codiTypedef.h	/^		cetime_t	tmLastSend;								\/\/ Last send time$/;"	m	struct:_tagCOORDINATOR
tmLastSync	include/codiTypedef.h	/^		cetime_t	tmLastSync;								\/\/ Last sync time$/;"	m	struct:_tagCOORDINATOR
tmRecv	samples/ge/Operation.h	/^		TIMETICK        tmRecv;		$/;"	m	struct:_tagONDEMANDPARAM
tmSend	samples/ge/Operation.h	/^		TIMETICK        tmSend;$/;"	m	struct:_tagONDEMANDPARAM
tmStart	samples/ge/Operation.h	/^		TIMETICK        tmStart;$/;"	m	struct:_tagONDEMANDPARAM
trid	include/endiFrame.h	/^        BYTE        trid;                                       \/\/ Transaction ID (0~255)$/;"	m	struct:_tagENDI_NAN_PAYLOAD
txpowermode	include/codiFrame.h	/^		BYTE				txpowermode;					\/\/ TX Power mode$/;"	m	struct:_tagCODI_NETWORK_PAYLOAD
txpowermode	include/codiTypedef.h	/^        BYTE        txpowermode;                    		\/\/ TX Power mode$/;"	m	struct:_tagCOORDINATOR
type	include/codiFrame.h	/^		BYTE				type;							\/\/ Binding type$/;"	m	struct:_tagCODI_BIND_PAYLOAD
type	include/codiFrame.h	/^		BYTE				type;							\/\/ Bootloader type$/;"	m	struct:_tagCODI_BOOTLOAD_PAYLOAD
type	include/codiFrame.h	/^		BYTE				type;							\/\/ Channel scan type$/;"	m	struct:_tagCODI_SCANNETWORK_PAYLOAD
type	include/codiFrame.h	/^		BYTE				type;							\/\/ Frame type$/;"	m	struct:_tagCODI_HEADER
type	include/codiFrame.h	/^		BYTE				type;							\/\/ Join 명령어 타입$/;"	m	struct:_tagCODI_FORMNETWORK_PAYLOAD
type	include/codiFrame.h	/^		BYTE				type;							\/\/ Key assignment type$/;"	m	struct:_tagCODI_KEY_PAYLOAD
type	include/codiFrame.h	/^		BYTE				type;							\/\/ Many to one request type$/;"	m	struct:_tagCODI_MANYTOONE_PAYLOAD
type	include/codiFrame.h	/^		BYTE				type;							\/\/ The type of biding$/;"	m	struct:_tagCODI_BINDING_ENTRY
type	include/codiFrame.h	/^        BYTE                type;                           \/\/ Direct Communication type (0x01:Set, 0x02:Delete)$/;"	m	struct:_tagCODI_DIRECTCOMM_PAYLOAD
type	include/codiFrame.h	/^        BYTE                type;                           \/\/ Extended Timeout type$/;"	m	struct:_tagCODI_EXTENDEDTIMEOUT_PAYLOAD
type	include/codiFrame.h	/^        BYTE                type;                           \/\/ Route Discovery On\/Off$/;"	m	struct:_tagCODI_ROUTEDISCOVERY_PAYLOAD
type	include/codiTypedef.h	/^		BYTE			type;								\/\/ Frame type$/;"	m	struct:_tagCODIWAITREPLY
type	include/endiFrame.h	/^		BYTE					type;							\/\/ AMR type$/;"	m	struct:_tagENDI_AMRREAD_PAYLOAD
type	include/endiFrame.h	/^		BYTE					type;							\/\/ AMR type$/;"	m	struct:_tagENDI_AMR_PAYLOAD
type	include/endiFrame.h	/^		BYTE					type;							\/\/ Event type$/;"	m	struct:_tagENDI_EVENT_PAYLOAD
type	include/endiFrame.h	/^		BYTE					type;							\/\/ Leave type$/;"	m	struct:_tagENDI_LEAVE_PAYLOAD
type	include/endiFrame.h	/^		BYTE					type;							\/\/ Link close type $/;"	m	struct:_tagENDI_LINK_PAYLOAD
type	include/endiFrame.h	/^		BYTE					type;							\/\/ SP Type$/;"	m	struct:_tagENDI_SUPER_PARENT_PAYLOAD
type	include/endiFrame.h	/^		BYTE					type;						    \/\/ type$/;"	m	struct:_tagENDI_LONG_ROMREAD_PAYLOAD
type	include/endiFrame.h	/^		BYTE					type;						    \/\/ type$/;"	m	struct:_tagENDI_LONG_ROM_PAYLOAD
type	include/endiFrame.h	/^		BYTE					type;                           \/\/ Metering Data Type(0:Payload, n:LP Log)$/;"	m	struct:_tagENDI_METERING_PAYLOAD
type	include/endiFrame.h	/^        BYTE                    type;                           \/\/ Issue #2033 : Long(0), Short(1)$/;"	m	struct:_tagENDI_TIMESYNC_PAYLOAD
type	include/endiFrame.h	/^        BYTE        type;                                   \/\/ Type$/;"	m	struct:_tagENDI_DIO_PAYLOAD
typelen	include/endiFrame.h	/^		BYTE					typelen;						\/\/ type & length$/;"	m	struct:_tagENDI_ROM_PAYLOAD
typelen	include/endiFrame.h	/^        BYTE                    typelen;                        \/\/ type & length$/;"	m	struct:_tagENDI_ROMREAD_PAYLOAD
typevalue	include/endiFrame.h	/^		BYTE					typevalue;						\/\/ type & value$/;"	m	struct:_tagENDI_MCCB_PAYLOAD
tz	include/typedef.h	/^		WORD			tz;							\/\/ Time zone$/;"	m	struct:_tagGMTTIMESTAMP
u16	include/endiFrame.h	/^			WORD				u16;$/;"	m	union:_tagENDI_EVENT_STATUS::__anon4
u32	include/endiFrame.h	/^			UINT				u32;$/;"	m	union:_tagENDI_EVENT_STATUS::__anon4
u8	include/endiFrame.h	/^			BYTE				u8;$/;"	m	union:_tagENDI_EVENT_STATUS::__anon4
ulv	include/typedef.h	/^        ULONG ulv;$/;"	m	union:_tagUNIONVALUE
unlockOperation	samples/ge/Operation.cpp	/^void COperation::unlockOperation()$/;"	f	class:COperation
v	include/typedef.h	/^    BYTE    v[3];$/;"	m	struct:_tagWORD24
val	include/endiFrame.h	/^		}	val;$/;"	m	struct:_tagENDI_EVENT_STATUS	typeref:union:_tagENDI_EVENT_STATUS::__anon4
val	include/endiFrame.h	/^        } 	val;$/;"	m	struct:_tagENDI_METERING_PAYLOAD	typeref:union:_tagENDI_METERING_PAYLOAD::__anon3
value	include/common/PrivateProfile.h	/^	char	*value;$/;"	m	struct:_tagPPOBJECT
value	include/endiFrame.h	/^        BYTE        value;                                  \/\/ Value$/;"	m	struct:_tagENDI_DIO_PAYLOAD
vendor	include/endiFrame.h	/^        BYTE        vendor;                                 \/\/ Sequence$/;"	m	struct:_tagAPP_3PARTY_HEADER
waitMask	include/codiTypedef.h	/^        BYTE            waitMask;                           \/\/ Reply Mask (WAIT_WRITE_RESPONSE, WAIT_READ_RESPONSE)$/;"	m	struct:_tagCODIWAITREPLY
whole_address_table_size	include/codiTypedef.h	/^        BYTE        whole_address_table_size;				\/\/$/;"	m	struct:_tagCOORDINATOR
wv	include/typedef.h	/^        WORD wv;$/;"	m	union:_tagUNIONVALUE
year	include/typedef.h	/^		BYTE			year;						\/\/ Year (2000년 이후)$/;"	m	struct:_tagTIMESTAMP5
year	include/typedef.h	/^		BYTE			year;						\/\/ Year (2000년 이후)$/;"	m	struct:_tagTIMESTAMP6
year	include/typedef.h	/^		WORD			year;						\/\/ Year$/;"	m	struct:_tagGMTTIMESTAMP
year	include/typedef.h	/^		WORD			year;						\/\/ Year$/;"	m	struct:_tagTIMESTAMP
year	include/typedef.h	/^		WORD			year;						\/\/ year$/;"	m	struct:_tagTIMEDATE
zaif	include/codiFrame.h	/^		BYTE				zaif;							\/\/ Application Device interface version$/;"	m	struct:_tagCODI_BOOT_PAYLOAD
zaif	include/codiFrame.h	/^		BYTE				zaif;							\/\/ Application Device interface version$/;"	m	struct:_tagCODI_MODULE_PAYLOAD
zaif	include/codiTypedef.h	/^		BYTE		zaif;									\/\/ ZA IF version $/;"	m	struct:_tagCOORDINATOR
zzif	include/codiFrame.h	/^		BYTE				zzif;							\/\/ Zigbee interface version$/;"	m	struct:_tagCODI_BOOT_PAYLOAD
zzif	include/codiFrame.h	/^		BYTE				zzif;							\/\/ Zigbee interface version$/;"	m	struct:_tagCODI_MODULE_PAYLOAD
zzif	include/codiTypedef.h	/^		BYTE		zzif;									\/\/ ZZ IF version$/;"	m	struct:_tagCOORDINATOR
~CCoordinator	src/Coordinator.cpp	/^CCoordinator::~CCoordinator()$/;"	f	class:CCoordinator
~CCoordinatorDataStream	src/CoordinatorDataStream.cpp	/^CCoordinatorDataStream::~CCoordinatorDataStream()$/;"	f	class:CCoordinatorDataStream
~CCoordinatorFrame	src/CoordinatorFrame.cpp	/^CCoordinatorFrame::~CCoordinatorFrame()$/;"	f	class:CCoordinatorFrame
~CCoordinatorServer	src/CoordinatorServer.cpp	/^CCoordinatorServer::~CCoordinatorServer()$/;"	f	class:CCoordinatorServer
~CCoordinatorWaitReply	src/CoordinatorWaitReply.cpp	/^CCoordinatorWaitReply::~CCoordinatorWaitReply()$/;"	f	class:CCoordinatorWaitReply
~CDeviceClass	src/DeviceClass.cpp	/^CDeviceClass::~CDeviceClass()$/;"	f	class:CDeviceClass
~CEndDevicePool	src/EndDevicePool.cpp	/^CEndDevicePool::~CEndDevicePool()$/;"	f	class:CEndDevicePool
~CI210Parser	samples/ge/i210.cpp	/^CI210Parser::~CI210Parser()$/;"	f	class:CI210Parser
~CLinkedList	include/common/LinkedList.h	/^inline CLinkedList<TYPE>::~CLinkedList()$/;"	f	class:CLinkedList
~CMeterParser	samples/ge/MeterParser.cpp	/^CMeterParser::~CMeterParser()$/;"	f	class:CMeterParser
~COndemander	samples/ge/Ondemander.cpp	/^COndemander::~COndemander()$/;"	f	class:COndemander
~COperation	samples/ge/Operation.cpp	/^COperation::~COperation()$/;"	f	class:COperation
~CSerialInterface	src/SerialInterface.cpp	/^CSerialInterface::~CSerialInterface()$/;"	f	class:CSerialInterface
~CVirtualInterface	src/VirtualInterface.cpp	/^CVirtualInterface::~CVirtualInterface()$/;"	f	class:CVirtualInterface
